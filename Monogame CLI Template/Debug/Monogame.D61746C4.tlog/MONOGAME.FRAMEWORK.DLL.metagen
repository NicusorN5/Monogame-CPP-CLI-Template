  Microsoft.Xna.Framework.Graphics.Effect.Resources.AlphaTestEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
  Microsoft.Xna.Framework.Graphics.Effect.Resources.BasicEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
  Microsoft.Xna.Framework.Graphics.Effect.Resources.DualTextureEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
  Microsoft.Xna.Framework.Graphics.Effect.Resources.EnvironmentMapEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
  Microsoft.Xna.Framework.Graphics.Effect.Resources.SkinnedEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
  Microsoft.Xna.Framework.Graphics.Effect.Resources.SpriteEffect.dx11.mgfxo - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly MonoGame.Framework, Version=3.7.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly SharpDX.DXGI, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly SharpDX.Direct3D11, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly SharpDX.XInput, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Struct Microsoft.Xna.Framework.BoundingBox: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.BoundingBox]
  Fields:
    Microsoft.Xna.Framework.Vector3 Min : Public
    Microsoft.Xna.Framework.Vector3 Max : Public
    Int32 CornerCount = 8 : Public, Static, Literal, HasDefault
  Properties:
    System.String DebugDisplayString 'get ' : 
  Methods:
    Contains(BoundingBox): PrivateScope, Public, HideBySig
    Contains(BoundingBox&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(BoundingFrustum): PrivateScope, Public, HideBySig
    Contains(BoundingSphere): PrivateScope, Public, HideBySig
    Contains(BoundingSphere&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(Vector3): PrivateScope, Public, HideBySig
    Contains(Vector3&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    CreateFromPoints(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CreateFromSphere(BoundingSphere): PrivateScope, Public, Static, HideBySig
    CreateFromSphere(BoundingSphere&, BoundingBox&(Out)): PrivateScope, Public, Static, HideBySig
    CreateMerged(BoundingBox, BoundingBox): PrivateScope, Public, Static, HideBySig
    CreateMerged(BoundingBox&, BoundingBox&, BoundingBox&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(BoundingBox): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetCorners(): PrivateScope, Public, HideBySig
    GetCorners(Vector3[]): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Intersects(BoundingBox): PrivateScope, Public, HideBySig
    Intersects(BoundingBox&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingFrustum): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(Plane): PrivateScope, Public, HideBySig
    Intersects(Plane&, PlaneIntersectionType&(Out)): PrivateScope, Public, HideBySig
    Intersects(Ray): PrivateScope, Public, HideBySig
    Intersects(Ray&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    op_Equality(BoundingBox, BoundingBox): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BoundingBox, BoundingBox): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Deconstruct(Vector3&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.BoundingFrustum: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Matrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.BoundingFrustum]
  Fields:
    Int32 PlaneCount = 6 : Public, Static, Literal, HasDefault
    Int32 CornerCount = 8 : Public, Static, Literal, HasDefault
  Properties:
    Microsoft.Xna.Framework.Matrix Matrix 'get set' : 
    Microsoft.Xna.Framework.Plane Near 'get ' : 
    Microsoft.Xna.Framework.Plane Far 'get ' : 
    Microsoft.Xna.Framework.Plane Left 'get ' : 
    Microsoft.Xna.Framework.Plane Right 'get ' : 
    Microsoft.Xna.Framework.Plane Top 'get ' : 
    Microsoft.Xna.Framework.Plane Bottom 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Matrix(): PrivateScope, Public, HideBySig, SpecialName
    set_Matrix(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_Near(): PrivateScope, Public, HideBySig, SpecialName
    get_Far(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(BoundingFrustum, BoundingFrustum): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BoundingFrustum, BoundingFrustum): PrivateScope, Public, Static, HideBySig, SpecialName
    Contains(BoundingBox): PrivateScope, Public, HideBySig
    Contains(BoundingBox&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(BoundingFrustum): PrivateScope, Public, HideBySig
    Contains(BoundingSphere): PrivateScope, Public, HideBySig
    Contains(BoundingSphere&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(Vector3): PrivateScope, Public, HideBySig
    Contains(Vector3&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Equals(BoundingFrustum): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetCorners(): PrivateScope, Public, HideBySig
    GetCorners(Vector3[]): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Intersects(BoundingBox): PrivateScope, Public, HideBySig
    Intersects(BoundingBox&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingFrustum): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(Plane): PrivateScope, Public, HideBySig
    Intersects(Plane&, PlaneIntersectionType&(Out)): PrivateScope, Public, HideBySig
    Intersects(Ray): PrivateScope, Public, HideBySig
    Intersects(Ray&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.BoundingSphere: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.BoundingSphere]
  Fields:
    Microsoft.Xna.Framework.Vector3 Center : Public
    Single Radius : Public
  Properties:
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    Contains(BoundingBox): PrivateScope, Public, HideBySig
    Contains(BoundingBox&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(BoundingFrustum): PrivateScope, Public, HideBySig
    Contains(BoundingFrustum&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(BoundingSphere): PrivateScope, Public, HideBySig
    Contains(BoundingSphere&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    Contains(Vector3): PrivateScope, Public, HideBySig
    Contains(Vector3&, ContainmentType&(Out)): PrivateScope, Public, HideBySig
    CreateFromBoundingBox(BoundingBox): PrivateScope, Public, Static, HideBySig
    CreateFromBoundingBox(BoundingBox&, BoundingSphere&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromFrustum(BoundingFrustum): PrivateScope, Public, Static, HideBySig
    CreateFromPoints(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CreateMerged(BoundingSphere, BoundingSphere): PrivateScope, Public, Static, HideBySig
    CreateMerged(BoundingSphere&, BoundingSphere&, BoundingSphere&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(BoundingSphere): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Intersects(BoundingBox): PrivateScope, Public, HideBySig
    Intersects(BoundingBox&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersects(Plane): PrivateScope, Public, HideBySig
    Intersects(Plane&, PlaneIntersectionType&(Out)): PrivateScope, Public, HideBySig
    Intersects(Ray): PrivateScope, Public, HideBySig
    Intersects(Ray&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Transform(Matrix): PrivateScope, Public, HideBySig
    Transform(Matrix&, BoundingSphere&(Out)): PrivateScope, Public, HideBySig
    Deconstruct(Vector3&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    op_Equality(BoundingSphere, BoundingSphere): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BoundingSphere, BoundingSphere): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Color: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Color, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Color]
  Properties:
    Byte B     'get set' : 
    Byte G     'get set' : 
    Byte R     'get set' : 
    Byte A     'get set' : 
    Microsoft.Xna.Framework.Color TransparentBlack 'get set' : 
    Microsoft.Xna.Framework.Color Transparent 'get set' : 
    Microsoft.Xna.Framework.Color AliceBlue 'get set' : 
    Microsoft.Xna.Framework.Color AntiqueWhite 'get set' : 
    Microsoft.Xna.Framework.Color Aqua 'get set' : 
    Microsoft.Xna.Framework.Color Aquamarine 'get set' : 
    Microsoft.Xna.Framework.Color Azure 'get set' : 
    Microsoft.Xna.Framework.Color Beige 'get set' : 
    Microsoft.Xna.Framework.Color Bisque 'get set' : 
    Microsoft.Xna.Framework.Color Black 'get set' : 
    Microsoft.Xna.Framework.Color BlanchedAlmond 'get set' : 
    Microsoft.Xna.Framework.Color Blue 'get set' : 
    Microsoft.Xna.Framework.Color BlueViolet 'get set' : 
    Microsoft.Xna.Framework.Color Brown 'get set' : 
    Microsoft.Xna.Framework.Color BurlyWood 'get set' : 
    Microsoft.Xna.Framework.Color CadetBlue 'get set' : 
    Microsoft.Xna.Framework.Color Chartreuse 'get set' : 
    Microsoft.Xna.Framework.Color Chocolate 'get set' : 
    Microsoft.Xna.Framework.Color Coral 'get set' : 
    Microsoft.Xna.Framework.Color CornflowerBlue 'get set' : 
    Microsoft.Xna.Framework.Color Cornsilk 'get set' : 
    Microsoft.Xna.Framework.Color Crimson 'get set' : 
    Microsoft.Xna.Framework.Color Cyan 'get set' : 
    Microsoft.Xna.Framework.Color DarkBlue 'get set' : 
    Microsoft.Xna.Framework.Color DarkCyan 'get set' : 
    Microsoft.Xna.Framework.Color DarkGoldenrod 'get set' : 
    Microsoft.Xna.Framework.Color DarkGray 'get set' : 
    Microsoft.Xna.Framework.Color DarkGreen 'get set' : 
    Microsoft.Xna.Framework.Color DarkKhaki 'get set' : 
    Microsoft.Xna.Framework.Color DarkMagenta 'get set' : 
    Microsoft.Xna.Framework.Color DarkOliveGreen 'get set' : 
    Microsoft.Xna.Framework.Color DarkOrange 'get set' : 
    Microsoft.Xna.Framework.Color DarkOrchid 'get set' : 
    Microsoft.Xna.Framework.Color DarkRed 'get set' : 
    Microsoft.Xna.Framework.Color DarkSalmon 'get set' : 
    Microsoft.Xna.Framework.Color DarkSeaGreen 'get set' : 
    Microsoft.Xna.Framework.Color DarkSlateBlue 'get set' : 
    Microsoft.Xna.Framework.Color DarkSlateGray 'get set' : 
    Microsoft.Xna.Framework.Color DarkTurquoise 'get set' : 
    Microsoft.Xna.Framework.Color DarkViolet 'get set' : 
    Microsoft.Xna.Framework.Color DeepPink 'get set' : 
    Microsoft.Xna.Framework.Color DeepSkyBlue 'get set' : 
    Microsoft.Xna.Framework.Color DimGray 'get set' : 
    Microsoft.Xna.Framework.Color DodgerBlue 'get set' : 
    Microsoft.Xna.Framework.Color Firebrick 'get set' : 
    Microsoft.Xna.Framework.Color FloralWhite 'get set' : 
    Microsoft.Xna.Framework.Color ForestGreen 'get set' : 
    Microsoft.Xna.Framework.Color Fuchsia 'get set' : 
    Microsoft.Xna.Framework.Color Gainsboro 'get set' : 
    Microsoft.Xna.Framework.Color GhostWhite 'get set' : 
    Microsoft.Xna.Framework.Color Gold 'get set' : 
    Microsoft.Xna.Framework.Color Goldenrod 'get set' : 
    Microsoft.Xna.Framework.Color Gray 'get set' : 
    Microsoft.Xna.Framework.Color Green 'get set' : 
    Microsoft.Xna.Framework.Color GreenYellow 'get set' : 
    Microsoft.Xna.Framework.Color Honeydew 'get set' : 
    Microsoft.Xna.Framework.Color HotPink 'get set' : 
    Microsoft.Xna.Framework.Color IndianRed 'get set' : 
    Microsoft.Xna.Framework.Color Indigo 'get set' : 
    Microsoft.Xna.Framework.Color Ivory 'get set' : 
    Microsoft.Xna.Framework.Color Khaki 'get set' : 
    Microsoft.Xna.Framework.Color Lavender 'get set' : 
    Microsoft.Xna.Framework.Color LavenderBlush 'get set' : 
    Microsoft.Xna.Framework.Color LawnGreen 'get set' : 
    Microsoft.Xna.Framework.Color LemonChiffon 'get set' : 
    Microsoft.Xna.Framework.Color LightBlue 'get set' : 
    Microsoft.Xna.Framework.Color LightCoral 'get set' : 
    Microsoft.Xna.Framework.Color LightCyan 'get set' : 
    Microsoft.Xna.Framework.Color LightGoldenrodYellow 'get set' : 
    Microsoft.Xna.Framework.Color LightGray 'get set' : 
    Microsoft.Xna.Framework.Color LightGreen 'get set' : 
    Microsoft.Xna.Framework.Color LightPink 'get set' : 
    Microsoft.Xna.Framework.Color LightSalmon 'get set' : 
    Microsoft.Xna.Framework.Color LightSeaGreen 'get set' : 
    Microsoft.Xna.Framework.Color LightSkyBlue 'get set' : 
    Microsoft.Xna.Framework.Color LightSlateGray 'get set' : 
    Microsoft.Xna.Framework.Color LightSteelBlue 'get set' : 
    Microsoft.Xna.Framework.Color LightYellow 'get set' : 
    Microsoft.Xna.Framework.Color Lime 'get set' : 
    Microsoft.Xna.Framework.Color LimeGreen 'get set' : 
    Microsoft.Xna.Framework.Color Linen 'get set' : 
    Microsoft.Xna.Framework.Color Magenta 'get set' : 
    Microsoft.Xna.Framework.Color Maroon 'get set' : 
    Microsoft.Xna.Framework.Color MediumAquamarine 'get set' : 
    Microsoft.Xna.Framework.Color MediumBlue 'get set' : 
    Microsoft.Xna.Framework.Color MediumOrchid 'get set' : 
    Microsoft.Xna.Framework.Color MediumPurple 'get set' : 
    Microsoft.Xna.Framework.Color MediumSeaGreen 'get set' : 
    Microsoft.Xna.Framework.Color MediumSlateBlue 'get set' : 
    Microsoft.Xna.Framework.Color MediumSpringGreen 'get set' : 
    Microsoft.Xna.Framework.Color MediumTurquoise 'get set' : 
    Microsoft.Xna.Framework.Color MediumVioletRed 'get set' : 
    Microsoft.Xna.Framework.Color MidnightBlue 'get set' : 
    Microsoft.Xna.Framework.Color MintCream 'get set' : 
    Microsoft.Xna.Framework.Color MistyRose 'get set' : 
    Microsoft.Xna.Framework.Color Moccasin 'get set' : 
    Microsoft.Xna.Framework.Color MonoGameOrange 'get set' : 
    Microsoft.Xna.Framework.Color NavajoWhite 'get set' : 
    Microsoft.Xna.Framework.Color Navy 'get set' : 
    Microsoft.Xna.Framework.Color OldLace 'get set' : 
    Microsoft.Xna.Framework.Color Olive 'get set' : 
    Microsoft.Xna.Framework.Color OliveDrab 'get set' : 
    Microsoft.Xna.Framework.Color Orange 'get set' : 
    Microsoft.Xna.Framework.Color OrangeRed 'get set' : 
    Microsoft.Xna.Framework.Color Orchid 'get set' : 
    Microsoft.Xna.Framework.Color PaleGoldenrod 'get set' : 
    Microsoft.Xna.Framework.Color PaleGreen 'get set' : 
    Microsoft.Xna.Framework.Color PaleTurquoise 'get set' : 
    Microsoft.Xna.Framework.Color PaleVioletRed 'get set' : 
    Microsoft.Xna.Framework.Color PapayaWhip 'get set' : 
    Microsoft.Xna.Framework.Color PeachPuff 'get set' : 
    Microsoft.Xna.Framework.Color Peru 'get set' : 
    Microsoft.Xna.Framework.Color Pink 'get set' : 
    Microsoft.Xna.Framework.Color Plum 'get set' : 
    Microsoft.Xna.Framework.Color PowderBlue 'get set' : 
    Microsoft.Xna.Framework.Color Purple 'get set' : 
    Microsoft.Xna.Framework.Color Red 'get set' : 
    Microsoft.Xna.Framework.Color RosyBrown 'get set' : 
    Microsoft.Xna.Framework.Color RoyalBlue 'get set' : 
    Microsoft.Xna.Framework.Color SaddleBrown 'get set' : 
    Microsoft.Xna.Framework.Color Salmon 'get set' : 
    Microsoft.Xna.Framework.Color SandyBrown 'get set' : 
    Microsoft.Xna.Framework.Color SeaGreen 'get set' : 
    Microsoft.Xna.Framework.Color SeaShell 'get set' : 
    Microsoft.Xna.Framework.Color Sienna 'get set' : 
    Microsoft.Xna.Framework.Color Silver 'get set' : 
    Microsoft.Xna.Framework.Color SkyBlue 'get set' : 
    Microsoft.Xna.Framework.Color SlateBlue 'get set' : 
    Microsoft.Xna.Framework.Color SlateGray 'get set' : 
    Microsoft.Xna.Framework.Color Snow 'get set' : 
    Microsoft.Xna.Framework.Color SpringGreen 'get set' : 
    Microsoft.Xna.Framework.Color SteelBlue 'get set' : 
    Microsoft.Xna.Framework.Color Tan 'get set' : 
    Microsoft.Xna.Framework.Color Teal 'get set' : 
    Microsoft.Xna.Framework.Color Thistle 'get set' : 
    Microsoft.Xna.Framework.Color Tomato 'get set' : 
    Microsoft.Xna.Framework.Color Turquoise 'get set' : 
    Microsoft.Xna.Framework.Color Violet 'get set' : 
    Microsoft.Xna.Framework.Color Wheat 'get set' : 
    Microsoft.Xna.Framework.Color White 'get set' : 
    Microsoft.Xna.Framework.Color WhiteSmoke 'get set' : 
    Microsoft.Xna.Framework.Color Yellow 'get set' : 
    Microsoft.Xna.Framework.Color YellowGreen 'get set' : 
    UInt32 PackedValue 'get set' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Red(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RosyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoyalBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SaddleBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Salmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SandyBrown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SeaShell(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sienna(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Silver(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Snow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Teal(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Thistle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Tomato(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Turquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Violet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Wheat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_White(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WhiteSmoke(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Yellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_YellowGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    Lerp(Color, Color, Single): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Color, Color, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    Multiply(Color, Single): PrivateScope, Public, Static, HideBySig
    op_Multiply(Color, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVector3(): PrivateScope, Public, HideBySig
    ToVector4(): PrivateScope, Public, HideBySig
    get_PackedValue(): PrivateScope, Public, HideBySig, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    FromNonPremultiplied(Vector4): PrivateScope, Public, Static, HideBySig
    FromNonPremultiplied(Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Equals(Color): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    get_LightSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSteelBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lime(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LimeGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Linen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Magenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Maroon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumAquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumPurple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumSpringGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MediumVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MidnightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MintCream(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MistyRose(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Moccasin(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MonoGameOrange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NavajoWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Navy(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OldLace(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Olive(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OliveDrab(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OrangeRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Orchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PaleVioletRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PapayaWhip(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PeachPuff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Peru(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Plum(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PowderBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Purple(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOrchid(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSeaGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkSlateGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkTurquoise(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DeepSkyBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DimGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DodgerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Firebrick(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FloralWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForestGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Fuchsia(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gainsboro(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GhostWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gold(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Goldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Gray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GreenYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Honeydew(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HotPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IndianRed(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Indigo(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ivory(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Khaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Lavender(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LavenderBlush(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LawnGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LemonChiffon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCoral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGoldenrodYellow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightPink(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LightSalmon(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    set_B(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_G(): PrivateScope, Public, HideBySig, SpecialName
    set_G(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_R(): PrivateScope, Public, HideBySig, SpecialName
    set_R(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    set_A(Byte): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    get_TransparentBlack(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Transparent(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AliceBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AntiqueWhite(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aqua(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Aquamarine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Azure(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Beige(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bisque(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Black(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlanchedAlmond(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlueViolet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Brown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BurlyWood(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CadetBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chartreuse(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Chocolate(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Coral(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CornflowerBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cornsilk(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Crimson(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkBlue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkCyan(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGoldenrod(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGray(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkKhaki(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkMagenta(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DarkOliveGreen(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.ContainmentType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.ContainmentType Disjoint = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.ContainmentType Contains = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.ContainmentType Intersects = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.CurveContinuity: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.CurveContinuity Smooth = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveContinuity Step = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Curve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsConstant 'get ' : 
    Microsoft.Xna.Framework.CurveLoopType PreLoop 'get set' : 
    Microsoft.Xna.Framework.CurveLoopType PostLoop 'get set' : 
    Microsoft.Xna.Framework.CurveKeyCollection Keys 'get ' : 
  Methods:
    get_IsConstant(): PrivateScope, Public, HideBySig, SpecialName
    get_PreLoop(): PrivateScope, Public, HideBySig, SpecialName
    set_PreLoop(CurveLoopType): PrivateScope, Public, HideBySig, SpecialName
    get_PostLoop(): PrivateScope, Public, HideBySig, SpecialName
    set_PostLoop(CurveLoopType): PrivateScope, Public, HideBySig, SpecialName
    get_Keys(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Evaluate(Single): PrivateScope, Public, HideBySig
    ComputeTangents(CurveTangent): PrivateScope, Public, HideBySig
    ComputeTangents(CurveTangent, CurveTangent): PrivateScope, Public, HideBySig
    ComputeTangent(Int32, CurveTangent): PrivateScope, Public, HideBySig
    ComputeTangent(Int32, CurveTangent, CurveTangent): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.CurveKeyCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Microsoft.Xna.Framework.CurveKey]
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.CurveKey]
    System.Collections.IEnumerable
  Properties:
    Microsoft.Xna.Framework.CurveKey Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, CurveKey): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(CurveKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    Contains(CurveKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(CurveKey[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(CurveKey): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Remove(CurveKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.CurveKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Microsoft.Xna.Framework.CurveContinuity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.CurveKey]
    System.IComparable`1[Microsoft.Xna.Framework.CurveKey]
  Properties:
    Microsoft.Xna.Framework.CurveContinuity Continuity 'get set' : 
    Single Position 'get ' : 
    Single TangentIn 'get set' : 
    Single TangentOut 'get set' : 
    Single Value 'get set' : 
  Methods:
    get_Continuity(): PrivateScope, Public, HideBySig, SpecialName
    set_Continuity(CurveContinuity): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_TangentIn(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentIn(Single): PrivateScope, Public, HideBySig, SpecialName
    get_TangentOut(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentOut(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Single): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(CurveKey, CurveKey): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CurveKey, CurveKey): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    CompareTo(CurveKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(CurveKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.CurveLoopType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.CurveLoopType Constant = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveLoopType Cycle = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveLoopType CycleOffset = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveLoopType Oscillate = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveLoopType Linear = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.CurveTangent: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.CurveTangent Flat = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveTangent Linear = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.CurveTangent Smooth = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.DisplayOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.DisplayOrientation Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.DisplayOrientation LandscapeLeft = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.DisplayOrientation LandscapeRight = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.DisplayOrientation Portrait = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.DisplayOrientation PortraitDown = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.DisplayOrientation Unknown = 16 : Public, Static, Literal, HasDefault
Interface Microsoft.Xna.Framework.IGameComponent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Xna.Framework.IUpdateable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean Enabled 'get ' : 
    Int32 UpdateOrder 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] EnabledChanged: 
    System.EventHandler`1[System.EventArgs] UpdateOrderChanged: 
  Methods:
    Update(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    add_EnabledChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_EnabledChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_UpdateOrderChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_UpdateOrderChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UpdateOrder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Xna.Framework.GameComponent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Game): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.IGameComponent
    Microsoft.Xna.Framework.IUpdateable
    System.IComparable`1[Microsoft.Xna.Framework.GameComponent]
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Game Game 'get set' : 
    Boolean Enabled 'get set' : 
    Int32 UpdateOrder 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] EnabledChanged: 
    System.EventHandler`1[System.EventArgs] UpdateOrderChanged: 
  Methods:
    get_Game(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateOrder(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UpdateOrder(Int32): PrivateScope, Public, HideBySig, SpecialName
    add_EnabledChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_EnabledChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_UpdateOrderChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_UpdateOrderChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(GameComponent): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Xna.Framework.IDrawable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 DrawOrder 'get ' : 
    Boolean Visible 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] DrawOrderChanged: 
    System.EventHandler`1[System.EventArgs] VisibleChanged: 
  Methods:
    get_DrawOrder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DrawOrderChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DrawOrderChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_VisibleChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_VisibleChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Draw(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Xna.Framework.DrawableGameComponent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.GameComponent
    Void .ctor(Microsoft.Xna.Framework.Game): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.IDrawable
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get ' : 
    Int32 DrawOrder 'get set' : 
    Boolean Visible 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] DrawOrderChanged: 
    System.EventHandler`1[System.EventArgs] VisibleChanged: 
  Methods:
    get_GraphicsDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_DrawOrder(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DrawOrder(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    add_DrawOrderChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DrawOrderChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_VisibleChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_VisibleChanged(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Initialize(): PrivateScope, Public, Virtual, HideBySig
    Draw(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.EventHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Raise(Object, EventHandler`1, TEventArgs): PrivateScope, Assembly, Static, HideBySig
    Raise(Object, EventHandler, EventArgs): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Xna.Framework.FrameworkDispatcher: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Update(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.FrameworkResources: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String ResourceCreationWhenDeviceIsNull = The GraphicsDevice must not be null when creating new resources. : Assembly, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.GameComponentCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Microsoft.Xna.Framework.IGameComponent]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    System.EventHandler`1[Microsoft.Xna.Framework.GameComponentCollectionEventArgs] ComponentAdded: 
    System.EventHandler`1[Microsoft.Xna.Framework.GameComponentCollectionEventArgs] ComponentRemoved: 
  Methods:
    add_ComponentAdded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ComponentAdded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ComponentRemoved(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ComponentRemoved(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.GameComponentCollectionEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Xna.Framework.IGameComponent): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.IGameComponent GameComponent 'get ' : 
  Methods:
    get_GameComponent(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Game: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Microsoft.Xna.Framework.GamePlatform Platform : Assembly
  Properties:
    Microsoft.Xna.Framework.Game Instance 'get ' : 
    Microsoft.Xna.Framework.LaunchParameters LaunchParameters 'get set' : 
    Microsoft.Xna.Framework.GameComponentCollection Components 'get ' : 
    System.TimeSpan InactiveSleepTime 'get set' : 
    System.TimeSpan MaxElapsedTime 'get set' : 
    Boolean IsActive 'get ' : 
    Boolean IsMouseVisible 'get set' : 
    System.TimeSpan TargetElapsedTime 'get set' : 
    Boolean IsFixedTimeStep 'get set' : 
    Microsoft.Xna.Framework.GameServiceContainer Services 'get ' : 
    Microsoft.Xna.Framework.Content.ContentManager Content 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get ' : 
    Microsoft.Xna.Framework.GameWindow Window 'get ' : 
    Boolean Initialized 'get ' : 
    Microsoft.Xna.Framework.GraphicsDeviceManager graphicsDeviceManager 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Activated: 
    System.EventHandler`1[System.EventArgs] Deactivated: 
    System.EventHandler`1[System.EventArgs] Disposed: 
    System.EventHandler`1[System.EventArgs] Exiting: 
  Methods:
    Log(String): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_LaunchParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Components(): PrivateScope, Public, HideBySig, SpecialName
    get_InactiveSleepTime(): PrivateScope, Public, HideBySig, SpecialName
    set_InactiveSleepTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_MaxElapsedTime(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxElapsedTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMouseVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TargetElapsedTime(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetElapsedTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_IsFixedTimeStep(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFixedTimeStep(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Services(): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(ContentManager): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_Window(): PrivateScope, Public, HideBySig, SpecialName
    get_Initialized(): PrivateScope, Assembly, HideBySig, SpecialName
    add_Activated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Activated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Deactivated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Deactivated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Disposed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Exiting(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Exiting(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    Exit(): PrivateScope, Public, HideBySig
    ResetElapsedTime(): PrivateScope, Public, HideBySig
    SuppressDraw(): PrivateScope, Public, HideBySig
    RunOneFrame(): PrivateScope, Public, HideBySig
    Run(): PrivateScope, Public, HideBySig
    Run(GameRunBehavior): PrivateScope, Public, HideBySig
    Tick(): PrivateScope, Public, HideBySig
    DoUpdate(GameTime): PrivateScope, Assembly, HideBySig
    DoDraw(GameTime): PrivateScope, Assembly, HideBySig
    DoInitialize(): PrivateScope, Assembly, HideBySig
    DoExiting(): PrivateScope, Assembly, HideBySig
    get_graphicsDeviceManager(): PrivateScope, Assembly, HideBySig, SpecialName
    set_graphicsDeviceManager(GraphicsDeviceManager): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.GamePlatform: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.GameRunBehavior DefaultRunBehavior 'get ' : 
    Microsoft.Xna.Framework.Game Game 'get set' : 
    Boolean IsActive 'get set' : 
    Boolean IsMouseVisible 'get set' : 
    Microsoft.Xna.Framework.GameWindow Window 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] AsyncRunLoopEnded: 
    System.EventHandler`1[System.EventArgs] Activated: 
    System.EventHandler`1[System.EventArgs] Deactivated: 
  Methods:
    get_DefaultRunBehavior(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Game(): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    set_IsActive(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsMouseVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMouseVisible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Window(): PrivateScope, Public, HideBySig, SpecialName
    add_AsyncRunLoopEnded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AsyncRunLoopEnded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Activated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Activated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Deactivated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Deactivated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    BeforeInitialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeforeRun(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Exit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RunLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartRunLoop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeforeUpdate(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeforeDraw(GameTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnterFullScreen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExitFullScreen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TargetElapsedTimeChanging(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginScreenDeviceChange(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndScreenDeviceChange(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TargetElapsedTimeChanged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetElapsedTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Present(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnPresentationChanged(PresentationParameters): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PlatformCreate(Game): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Xna.Framework.GameRunBehavior: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.GameRunBehavior Asynchronous = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.GameRunBehavior Synchronous = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.GameServiceContainer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IServiceProvider
  Methods:
    AddService(Type, Object): PrivateScope, Public, HideBySig
    GetService(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveService(Type): PrivateScope, Public, HideBySig
    AddService(T): PrivateScope, Public, HideBySig
    GetService(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.GameTime: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan, System.TimeSpan, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan TotalGameTime 'get set' : 
    System.TimeSpan ElapsedGameTime 'get set' : 
    Boolean IsRunningSlowly 'get set' : 
  Methods:
    get_TotalGameTime(): PrivateScope, Public, HideBySig, SpecialName
    set_TotalGameTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_ElapsedGameTime(): PrivateScope, Public, HideBySig, SpecialName
    set_ElapsedGameTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_IsRunningSlowly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRunningSlowly(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.GameUpdateRequiredException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.GameWindow: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Boolean _allowAltF4 : Assembly
    Microsoft.Xna.Framework.Input.MouseState MouseState : Assembly
    Microsoft.Xna.Framework.Input.Touch.TouchPanelState TouchPanelState : Assembly
  Properties:
    Boolean AllowUserResizing 'get set' : 
    Microsoft.Xna.Framework.Rectangle ClientBounds 'get ' : 
    Boolean AllowAltF4 'get set' : 
    Microsoft.Xna.Framework.Point Position 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation CurrentOrientation 'get ' : 
    IntPtr Handle 'get ' : 
    System.String ScreenDeviceName 'get ' : 
    System.String Title 'get set' : 
    Boolean IsBorderless 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] ClientSizeChanged: 
    System.EventHandler`1[System.EventArgs] OrientationChanged: 
    System.EventHandler`1[System.EventArgs] ScreenDeviceNameChanged: 
    System.EventHandler`1[Microsoft.Xna.Framework.TextInputEventArgs] TextInput: 
  Methods:
    get_AllowUserResizing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AllowUserResizing(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ClientBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AllowAltF4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AllowAltF4(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CurrentOrientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Handle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ScreenDeviceName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsBorderless(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsBorderless(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_ClientSizeChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ClientSizeChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_OrientationChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_OrientationChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ScreenDeviceNameChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ScreenDeviceNameChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_TextInput(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_TextInput(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    BeginScreenDeviceChange(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndScreenDeviceChange(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndScreenDeviceChange(String): PrivateScope, Public, HideBySig
    OnClientSizeChanged(): PrivateScope, Assembly, HideBySig
    Create(Game, Int32, Int32): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Xna.Framework.IGraphicsDeviceManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BeginDraw(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDevice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndDraw(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Xna.Framework.LaunchParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.MathHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Single E = 2.718282 : Public, Static, Literal, HasDefault
    Single Log10E = 0.4342945 : Public, Static, Literal, HasDefault
    Single Log2E = 1.442695 : Public, Static, Literal, HasDefault
    Single Pi = 3.141593 : Public, Static, Literal, HasDefault
    Single PiOver2 = 1.570796 : Public, Static, Literal, HasDefault
    Single PiOver4 = 0.7853982 : Public, Static, Literal, HasDefault
    Single TwoPi = 6.283185 : Public, Static, Literal, HasDefault
  Methods:
    Barycentric(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Clamp(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Clamp(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Distance(Single, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Max(Single, Single): PrivateScope, Public, Static, HideBySig
    Max(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Min(Single, Single): PrivateScope, Public, Static, HideBySig
    Min(Int32, Int32): PrivateScope, Public, Static, HideBySig
    SmoothStep(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ToDegrees(Single): PrivateScope, Public, Static, HideBySig
    ToRadians(Single): PrivateScope, Public, Static, HideBySig
    WrapAngle(Single): PrivateScope, Public, Static, HideBySig
    IsPowerOfTwo(Int32): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Xna.Framework.Matrix: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Matrix]
  Fields:
    Single M11 : Public
    Single M12 : Public
    Single M13 : Public
    Single M14 : Public
    Single M21 : Public
    Single M22 : Public
    Single M23 : Public
    Single M24 : Public
    Single M31 : Public
    Single M32 : Public
    Single M33 : Public
    Single M34 : Public
    Single M41 : Public
    Single M42 : Public
    Single M43 : Public
    Single M44 : Public
  Properties:
    Single Item [Int32] 'get set' : 
    Single Item [Int32, Int32] 'get set' : 
    Microsoft.Xna.Framework.Vector3 Backward 'get set' : 
    Microsoft.Xna.Framework.Vector3 Down 'get set' : 
    Microsoft.Xna.Framework.Vector3 Forward 'get set' : 
    Microsoft.Xna.Framework.Matrix Identity 'get ' : 
    Microsoft.Xna.Framework.Vector3 Left 'get set' : 
    Microsoft.Xna.Framework.Vector3 Right 'get set' : 
    Microsoft.Xna.Framework.Vector3 Translation 'get set' : 
    Microsoft.Xna.Framework.Vector3 Up 'get set' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    Multiply(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    ToFloatArray(Matrix): PrivateScope, Public, Static, HideBySig
    Negate(Matrix): PrivateScope, Public, Static, HideBySig
    Negate(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    op_Addition(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix, Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Matrix): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Subtract(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Transpose(Matrix): PrivateScope, Public, Static, HideBySig
    Transpose(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    get_Backward(): PrivateScope, Public, HideBySig, SpecialName
    set_Backward(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Down(): PrivateScope, Public, HideBySig, SpecialName
    set_Down(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    set_Forward(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Identity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Translation(): PrivateScope, Public, HideBySig, SpecialName
    set_Translation(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    Add(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Add(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateBillboard(Vector3, Vector3, Vector3, Nullable`1): PrivateScope, Public, Static, HideBySig
    CreateBillboard(Vector3&, Vector3&, Vector3&, Nullable`1, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    CreateConstrainedBillboard(Vector3&, Vector3&, Vector3&, Nullable`1, Nullable`1, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromAxisAngle(Vector3, Single): PrivateScope, Public, Static, HideBySig
    CreateFromAxisAngle(Vector3&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromQuaternion(Quaternion): PrivateScope, Public, Static, HideBySig
    CreateFromQuaternion(Quaternion&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromYawPitchRoll(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateFromYawPitchRoll(Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateLookAt(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    CreateLookAt(Vector3&, Vector3&, Vector3&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateOrthographic(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateOrthographic(Single, Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateOrthographicOffCenter(Rectangle, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreatePerspective(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreatePerspective(Single, Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreatePerspectiveFieldOfView(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreatePerspectiveFieldOfView(Single, Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreatePerspectiveOffCenter(Rectangle, Single, Single): PrivateScope, Public, Static, HideBySig
    CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateRotationX(Single): PrivateScope, Public, Static, HideBySig
    CreateRotationX(Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateRotationY(Single): PrivateScope, Public, Static, HideBySig
    CreateRotationY(Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateRotationZ(Single): PrivateScope, Public, Static, HideBySig
    CreateRotationZ(Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateScale(Single): PrivateScope, Public, Static, HideBySig
    CreateScale(Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateScale(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateScale(Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateScale(Vector3): PrivateScope, Public, Static, HideBySig
    CreateScale(Vector3&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateShadow(Vector3, Plane): PrivateScope, Public, Static, HideBySig
    CreateShadow(Vector3&, Plane&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateTranslation(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateTranslation(Vector3&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateTranslation(Vector3): PrivateScope, Public, Static, HideBySig
    CreateTranslation(Single, Single, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateReflection(Plane): PrivateScope, Public, Static, HideBySig
    CreateReflection(Plane&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    CreateWorld(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    CreateWorld(Vector3&, Vector3&, Vector3&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Decompose(Vector3&(Out), Quaternion&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
    Determinant(): PrivateScope, Public, HideBySig
    Divide(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
    Divide(Matrix&, Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Matrix, Single): PrivateScope, Public, Static, HideBySig
    Divide(Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Invert(Matrix): PrivateScope, Public, Static, HideBySig
    Invert(Matrix&, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Lerp(Matrix, Matrix, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Matrix&, Matrix&, Single, Matrix&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Matrix, Matrix): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Input.NamespaceDoc: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Audio.NamespaceDoc: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.NamespaceDoc: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.PlaneHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ClassifyPoint(Vector3&, Plane&): PrivateScope, Public, Static, HideBySig
    PerpendicularDistance(Vector3&, Plane&): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Xna.Framework.Plane: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Plane]
  Fields:
    Single D : Public
    Microsoft.Xna.Framework.Vector3 Normal : Public
  Properties:
    System.String DebugDisplayString 'get ' : 
  Methods:
    Dot(Vector4): PrivateScope, Public, HideBySig
    Dot(Vector4&, Single&(Out)): PrivateScope, Public, HideBySig
    DotCoordinate(Vector3): PrivateScope, Public, HideBySig
    DotCoordinate(Vector3&, Single&(Out)): PrivateScope, Public, HideBySig
    DotNormal(Vector3): PrivateScope, Public, HideBySig
    DotNormal(Vector3&, Single&(Out)): PrivateScope, Public, HideBySig
    Transform(Plane, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Plane&, Matrix&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Plane, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Plane&, Quaternion&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(Plane): PrivateScope, Public, Static, HideBySig
    Normalize(Plane&, Plane&(Out)): PrivateScope, Public, Static, HideBySig
    op_Inequality(Plane, Plane): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Plane, Plane): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Plane): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Intersects(BoundingBox): PrivateScope, Public, HideBySig
    Intersects(BoundingBox&, PlaneIntersectionType&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingFrustum): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere&, PlaneIntersectionType&(Out)): PrivateScope, Public, HideBySig
    Intersects(Vector3&): PrivateScope, Assembly, HideBySig
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Deconstruct(Vector3&(Out), Single&(Out)): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.PlaneIntersectionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.PlaneIntersectionType Front = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.PlaneIntersectionType Back = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.PlaneIntersectionType Intersecting = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.PlayerIndex: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.PlayerIndex One = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.PlayerIndex Two = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.PlayerIndex Three = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.PlayerIndex Four = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Point: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Point]
  Fields:
    Int32 X : Public
    Int32 Y : Public
  Properties:
    Microsoft.Xna.Framework.Point Zero 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    op_Addition(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Point): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector2(): PrivateScope, Public, HideBySig
    Deconstruct(Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Xna.Framework.GraphicsDeviceInformation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.GraphicsDeviceInformation GraphicsDeviceInformation 'get set' : 
  Methods:
    get_GraphicsDeviceInformation(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Quaternion: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Quaternion]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
    Single W : Public
  Properties:
    Microsoft.Xna.Framework.Quaternion Identity 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Add(Quaternion&, Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Concatenate(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Concatenate(Quaternion&, Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Conjugate(): PrivateScope, Public, HideBySig
    Conjugate(Quaternion): PrivateScope, Public, Static, HideBySig
    Conjugate(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromAxisAngle(Vector3, Single): PrivateScope, Public, Static, HideBySig
    CreateFromAxisAngle(Vector3&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromRotationMatrix(Matrix): PrivateScope, Public, Static, HideBySig
    CreateFromRotationMatrix(Matrix&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    CreateFromYawPitchRoll(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateFromYawPitchRoll(Single, Single, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Divide(Quaternion&, Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Dot(Quaternion&, Quaternion&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Quaternion): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Inverse(Quaternion): PrivateScope, Public, Static, HideBySig
    Inverse(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Lerp(Quaternion, Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Quaternion&, Quaternion&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Slerp(Quaternion, Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Slerp(Quaternion&, Quaternion&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Subtract(Quaternion&, Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig
    Multiply(Quaternion, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Quaternion&, Single, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Quaternion&, Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Quaternion): PrivateScope, Public, Static, HideBySig
    Negate(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(Quaternion): PrivateScope, Public, Static, HideBySig
    Normalize(Quaternion&, Quaternion&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector4(): PrivateScope, Public, HideBySig
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    op_Addition(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Quaternion, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Quaternion, Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Quaternion): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Ray: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Ray]
  Fields:
    Microsoft.Xna.Framework.Vector3 Direction : Public
    Microsoft.Xna.Framework.Vector3 Position : Public
  Properties:
    System.String DebugDisplayString 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Ray): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Intersects(BoundingBox): PrivateScope, Public, HideBySig
    Intersects(BoundingBox&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere): PrivateScope, Public, HideBySig
    Intersects(Plane): PrivateScope, Public, HideBySig
    Intersects(Plane&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    Intersects(BoundingSphere&, Nullable`1&(Out)): PrivateScope, Public, HideBySig
    op_Inequality(Ray, Ray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Ray, Ray): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Deconstruct(Vector3&(Out), Vector3&(Out)): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Rectangle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Rectangle]
  Fields:
    Int32 X : Public
    Int32 Y : Public
    Int32 Width : Public
    Int32 Height : Public
  Properties:
    Microsoft.Xna.Framework.Rectangle Empty 'get ' : 
    Int32 Left 'get ' : 
    Int32 Right 'get ' : 
    Int32 Top  'get ' : 
    Int32 Bottom 'get ' : 
    Boolean IsEmpty 'get ' : 
    Microsoft.Xna.Framework.Point Location 'get set' : 
    Microsoft.Xna.Framework.Point Size 'get set' : 
    Microsoft.Xna.Framework.Point Center 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(Rectangle, Rectangle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Rectangle, Rectangle): PrivateScope, Public, Static, HideBySig, SpecialName
    Contains(Int32, Int32): PrivateScope, Public, HideBySig
    Contains(Single, Single): PrivateScope, Public, HideBySig
    Contains(Point): PrivateScope, Public, HideBySig
    Contains(Point&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Contains(Vector2): PrivateScope, Public, HideBySig
    Contains(Vector2&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Contains(Rectangle): PrivateScope, Public, HideBySig
    Contains(Rectangle&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rectangle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Inflate(Int32, Int32): PrivateScope, Public, HideBySig
    Inflate(Single, Single): PrivateScope, Public, HideBySig
    Intersects(Rectangle): PrivateScope, Public, HideBySig
    Intersects(Rectangle&, Boolean&(Out)): PrivateScope, Public, HideBySig
    Intersect(Rectangle, Rectangle): PrivateScope, Public, Static, HideBySig
    Intersect(Rectangle&, Rectangle&, Rectangle&(Out)): PrivateScope, Public, Static, HideBySig
    Offset(Int32, Int32): PrivateScope, Public, HideBySig
    Offset(Single, Single): PrivateScope, Public, HideBySig
    Offset(Point): PrivateScope, Public, HideBySig
    Offset(Vector2): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Union(Rectangle, Rectangle): PrivateScope, Public, Static, HideBySig
    Union(Rectangle&, Rectangle&, Rectangle&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.ReusableItemList`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    T Current  'get ' : 
  Methods:
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Sort(IComparer`1): PrivateScope, Public, HideBySig
    GetNewItem(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.TextInputEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Char, Microsoft.Xna.Framework.Input.Keys): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char Character 'get ' : 
    Microsoft.Xna.Framework.Input.Keys Key 'get set' : 
  Methods:
    get_Character(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.TitleContainer: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    System.String Location 'get set' : 
  Methods:
    get_Location(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    OpenStream(String): PrivateScope, Public, Static, HideBySig
    NormalizeRelativePath(String): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Xna.Framework.Vector2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Vector2]
  Fields:
    Single X : Public
    Single Y : Public
  Properties:
    Microsoft.Xna.Framework.Vector2 Zero 'get ' : 
    Microsoft.Xna.Framework.Vector2 One 'get ' : 
    Microsoft.Xna.Framework.Vector2 UnitX 'get ' : 
    Microsoft.Xna.Framework.Vector2 UnitY 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_One(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitX(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitY(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    op_UnaryNegation(Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector2, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector2, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector2, Vector2): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Add(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector2, Vector2, Vector2, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector2&, Vector2&, Vector2&, Single, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector2&, Vector2&, Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Clamp(Vector2, Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Clamp(Vector2&, Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Distance(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Distance(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Divide(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector2, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Dot(Vector2&, Vector2&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Vector2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Hermite(Vector2, Vector2, Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector2&, Vector2&, Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Lerp(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Max(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Min(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Min(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector2): PrivateScope, Public, Static, HideBySig
    Negate(Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(Vector2): PrivateScope, Public, Static, HideBySig
    Normalize(Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Reflect(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Reflect(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector2, Vector2, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector2&, Vector2&, Single, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector2, Vector2): PrivateScope, Public, Static, HideBySig
    Subtract(Vector2&, Vector2&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToPoint(): PrivateScope, Public, HideBySig
    Transform(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Matrix&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Quaternion&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Int32, Matrix&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Int32, Quaternion&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Matrix&, Vector2[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector2[], Quaternion&, Vector2[]): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2&, Matrix&, Vector2&(Out)): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2[], Int32, Matrix&, Vector2[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector2[], Matrix&, Vector2[]): PrivateScope, Public, Static, HideBySig
    Deconstruct(Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Vector3: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Vector3]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
  Properties:
    Microsoft.Xna.Framework.Vector3 Zero 'get ' : 
    Microsoft.Xna.Framework.Vector3 One 'get ' : 
    Microsoft.Xna.Framework.Vector3 UnitX 'get ' : 
    Microsoft.Xna.Framework.Vector3 UnitY 'get ' : 
    Microsoft.Xna.Framework.Vector3 UnitZ 'get ' : 
    Microsoft.Xna.Framework.Vector3 Up 'get ' : 
    Microsoft.Xna.Framework.Vector3 Down 'get ' : 
    Microsoft.Xna.Framework.Vector3 Right 'get ' : 
    Microsoft.Xna.Framework.Vector3 Left 'get ' : 
    Microsoft.Xna.Framework.Vector3 Forward 'get ' : 
    Microsoft.Xna.Framework.Vector3 Backward 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    op_UnaryNegation(Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector3, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector3, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_One(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitX(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitY(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitZ(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Down(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Forward(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Backward(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Add(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector3, Vector3, Vector3, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector3&, Vector3&, Vector3&, Single, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector3, Vector3, Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector3&, Vector3&, Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Clamp(Vector3, Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Clamp(Vector3&, Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Cross(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Cross(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Distance(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Distance(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Divide(Vector3, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Dot(Vector3&, Vector3&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Hermite(Vector3, Vector3, Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector3&, Vector3&, Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Lerp(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Max(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Min(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Min(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector3): PrivateScope, Public, Static, HideBySig
    Negate(Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(Vector3): PrivateScope, Public, Static, HideBySig
    Normalize(Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Reflect(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Reflect(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector3, Vector3, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector3&, Vector3&, Single, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector3, Vector3): PrivateScope, Public, Static, HideBySig
    Subtract(Vector3&, Vector3&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Transform(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Matrix&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Quaternion&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Int32, Matrix&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Int32, Quaternion&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Matrix&, Vector3[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector3[], Quaternion&, Vector3[]): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3&, Matrix&, Vector3&(Out)): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3[], Int32, Matrix&, Vector3[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    TransformNormal(Vector3[], Matrix&, Vector3[]): PrivateScope, Public, Static, HideBySig
    Deconstruct(Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    op_Equality(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector3, Vector3): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Vector4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Vector4]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
    Single W : Public
  Properties:
    Microsoft.Xna.Framework.Vector4 Zero 'get ' : 
    Microsoft.Xna.Framework.Vector4 One 'get ' : 
    Microsoft.Xna.Framework.Vector4 UnitX 'get ' : 
    Microsoft.Xna.Framework.Vector4 UnitY 'get ' : 
    Microsoft.Xna.Framework.Vector4 UnitZ 'get ' : 
    Microsoft.Xna.Framework.Vector4 UnitW 'get ' : 
    System.String DebugDisplayString 'get ' : 
  Methods:
    op_Multiply(Single, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector4, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_One(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitX(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitY(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitZ(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnitW(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DebugDisplayString(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Add(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector4, Vector4, Vector4, Single, Single): PrivateScope, Public, Static, HideBySig
    Barycentric(Vector4&, Vector4&, Vector4&, Single, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector4, Vector4, Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    CatmullRom(Vector4&, Vector4&, Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Clamp(Vector4, Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Clamp(Vector4&, Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Distance(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Distance(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    DistanceSquared(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Divide(Vector4, Single): PrivateScope, Public, Static, HideBySig
    Divide(Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Divide(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Dot(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Dot(Vector4&, Vector4&, Single&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Vector4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Hermite(Vector4, Vector4, Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    Hermite(Vector4&, Vector4&, Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    LengthSquared(): PrivateScope, Public, HideBySig
    Lerp(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    Lerp(Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    LerpPrecise(Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Max(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Max(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Min(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Min(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4, Single): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Multiply(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Negate(Vector4): PrivateScope, Public, Static, HideBySig
    Negate(Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(Vector4): PrivateScope, Public, Static, HideBySig
    Normalize(Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector4, Vector4, Single): PrivateScope, Public, Static, HideBySig
    SmoothStep(Vector4&, Vector4&, Single, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Subtract(Vector4, Vector4): PrivateScope, Public, Static, HideBySig
    Subtract(Vector4&, Vector4&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector2, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector3, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector4, Matrix): PrivateScope, Public, Static, HideBySig
    Transform(Vector4, Quaternion): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector2&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector3&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4&, Matrix&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4&, Quaternion&, Vector4&(Out)): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Int32, Matrix&, Vector4[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Int32, Quaternion&, Vector4[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Matrix&, Vector4[]): PrivateScope, Public, Static, HideBySig
    Transform(Vector4[], Quaternion&, Vector4[]): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    op_UnaryNegation(Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector4, Vector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector4, Single): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Audio.AudioChannels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.AudioChannels Mono = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.AudioChannels Stereo = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Audio.AudioEmitter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single DopplerScale 'get set' : 
    Microsoft.Xna.Framework.Vector3 Forward 'get set' : 
    Microsoft.Xna.Framework.Vector3 Position 'get set' : 
    Microsoft.Xna.Framework.Vector3 Up 'get set' : 
    Microsoft.Xna.Framework.Vector3 Velocity 'get set' : 
  Methods:
    get_DopplerScale(): PrivateScope, Public, HideBySig, SpecialName
    set_DopplerScale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    set_Forward(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Velocity(): PrivateScope, Public, HideBySig, SpecialName
    set_Velocity(Vector3): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Audio.AudioListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Vector3 Forward 'get set' : 
    Microsoft.Xna.Framework.Vector3 Position 'get set' : 
    Microsoft.Xna.Framework.Vector3 Up 'get set' : 
    Microsoft.Xna.Framework.Vector3 Velocity 'get set' : 
  Methods:
    get_Forward(): PrivateScope, Public, HideBySig, SpecialName
    set_Forward(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Velocity(): PrivateScope, Public, HideBySig, SpecialName
    set_Velocity(Vector3): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Audio.SoundEffectInstance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Boolean _isPooled : Assembly
    Boolean _isXAct : Assembly
    Boolean _isDynamic : Assembly
    Microsoft.Xna.Framework.Audio.SoundEffect _effect : Assembly
    SharpDX.XAudio2.SourceVoice _voice : Assembly
    SharpDX.Multimedia.WaveFormat _format : Assembly
  Properties:
    Boolean IsLooped 'get set' : 
    Single Pan 'get set' : 
    Single Pitch 'get set' : 
    Single Volume 'get set' : 
    Microsoft.Xna.Framework.Audio.SoundState State 'get ' : 
    Boolean IsDisposed 'get ' : 
  Methods:
    get_IsLooped(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsLooped(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Pan(): PrivateScope, Public, HideBySig, SpecialName
    set_Pan(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Pitch(): PrivateScope, Public, HideBySig, SpecialName
    set_Pitch(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Apply3D(AudioListener, AudioEmitter): PrivateScope, Public, HideBySig
    Apply3D(AudioListener[], AudioEmitter): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Play(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Stop(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdateOutputMatrix(): PrivateScope, Assembly, HideBySig
    CalculateOutputMatrix(Single, Single, Int32): PrivateScope, Assembly, Static, HideBySig
    PlatformSetReverbMix(Single): PrivateScope, Assembly, HideBySig
    PlatformSetFilter(FilterMode, Single, Single): PrivateScope, Assembly, HideBySig
    PlatformClearFilter(): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstance: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Xna.Framework.Audio.SoundEffectInstance
    Void .ctor(Int32, Microsoft.Xna.Framework.Audio.AudioChannels): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsLooped 'get set' : 
    Microsoft.Xna.Framework.Audio.SoundState State 'get ' : 
    Int32 PendingBufferCount 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] BufferNeeded: 
  Methods:
    get_IsLooped(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsLooped(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_State(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PendingBufferCount(): PrivateScope, Public, HideBySig, SpecialName
    add_BufferNeeded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_BufferNeeded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    GetSampleDuration(Int32): PrivateScope, Public, HideBySig
    GetSampleSizeInBytes(TimeSpan): PrivateScope, Public, HideBySig
    Play(): PrivateScope, Public, Virtual, HideBySig
    Pause(): PrivateScope, Public, Virtual, HideBySig
    Resume(): PrivateScope, Public, Virtual, HideBySig
    Stop(): PrivateScope, Public, Virtual, HideBySig
    Stop(Boolean): PrivateScope, Public, Virtual, HideBySig
    SubmitBuffer(Byte[]): PrivateScope, Public, HideBySig
    SubmitBuffer(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    UpdateQueue(): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Audio.DynamicSoundEffectInstanceManager: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    AddInstance(DynamicSoundEffectInstance): PrivateScope, Public, Static, HideBySig
    RemoveInstance(DynamicSoundEffectInstance): PrivateScope, Public, Static, HideBySig
    UpdatePlayingInstances(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Audio.InstancePlayLimitException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.ExternalException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Audio.NoAudioHardwareException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.ExternalException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Audio.SoundEffect: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Byte[], Byte[], Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Audio.MiniFormatTag, Byte[], Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Microsoft.Xna.Framework.Audio.AudioChannels): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32, Int32, Microsoft.Xna.Framework.Audio.AudioChannels, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    SharpDX.DataStream _dataStream : Assembly
    SharpDX.XAudio2.AudioBuffer _buffer : Assembly
    SharpDX.XAudio2.AudioBuffer _loopedBuffer : Assembly
    SharpDX.Multimedia.WaveFormat _format : Assembly
    Int32 MAX_PLAYING_INSTANCES = 2147483647 : Assembly, Static, Literal, HasDefault
  Properties:
    System.TimeSpan Duration 'get ' : 
    System.String Name 'get set' : 
    Single MasterVolume 'get set' : 
    Single DistanceScale 'get set' : 
    Single DopplerScale 'get set' : 
    Single SpeedOfSound 'get set' : 
    Boolean IsDisposed 'get ' : 
    SharpDX.XAudio2.XAudio2 Device 'get set' : 
    SharpDX.XAudio2.MasteringVoice MasterVoice 'get set' : 
    SharpDX.Multimedia.Speakers Speakers 'get set' : 
    SharpDX.X3DAudio.X3DAudio Device3D 'get ' : 
    SharpDX.XAudio2.SubmixVoice ReverbVoice 'get ' : 
  Methods:
    CreateInstance(): PrivateScope, Public, HideBySig
    FromStream(Stream): PrivateScope, Public, Static, HideBySig
    GetSampleDuration(Int32, Int32, AudioChannels): PrivateScope, Public, Static, HideBySig
    GetSampleSizeInBytes(TimeSpan, Int32, AudioChannels): PrivateScope, Public, Static, HideBySig
    Play(): PrivateScope, Public, HideBySig
    Play(Single, Single, Single): PrivateScope, Public, HideBySig
    GetPooledInstance(Boolean): PrivateScope, Assembly, HideBySig
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_MasterVolume(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_MasterVolume(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DistanceScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DistanceScale(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DopplerScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DopplerScale(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SpeedOfSound(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_SpeedOfSound(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Device(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MasterVoice(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Speakers(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Speakers(Speakers): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Device3D(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ReverbVoice(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    InitializeSoundEffect(): PrivateScope, Assembly, Static, HideBySig
    PlatformSetReverbSettings(ReverbSettings): PrivateScope, Assembly, Static, HideBySig
    PlatformShutdown(): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Xna.Framework.Audio.SoundEffectInstancePool: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Boolean SoundsAvailable 'get ' : 
  Methods:
    get_SoundsAvailable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Add(SoundEffectInstance): PrivateScope, Assembly, Static, HideBySig
    Remove(SoundEffectInstance): PrivateScope, Assembly, Static, HideBySig
    GetInstance(Boolean): PrivateScope, Assembly, Static, HideBySig
    Update(): PrivateScope, Assembly, Static, HideBySig
    StopPooledInstances(SoundEffect): PrivateScope, Assembly, Static, HideBySig
    UpdateMasterVolume(): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Xna.Framework.Audio.SoundState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.SoundState Playing = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.SoundState Paused = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.SoundState Stopped = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.MicrophoneState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.MicrophoneState Started = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MicrophoneState Stopped = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Audio.Microphone: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
  Properties:
    System.TimeSpan BufferDuration 'get set' : 
    Boolean IsHeadset 'get ' : 
    Int32 SampleRate 'get ' : 
    Microsoft.Xna.Framework.Audio.MicrophoneState State 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Audio.Microphone] All 'get ' : 
    Microsoft.Xna.Framework.Audio.Microphone Default 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] BufferReady: 
  Methods:
    get_BufferDuration(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferDuration(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_IsHeadset(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetSampleDuration(Int32): PrivateScope, Public, HideBySig
    GetSampleSizeInBytes(TimeSpan): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    GetData(Byte[]): PrivateScope, Public, HideBySig
    GetData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    add_BufferReady(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_BufferReady(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    UpdateMicrophones(): PrivateScope, Assembly, Static, HideBySig
    StopMicrophones(): PrivateScope, Assembly, Static, HideBySig
    PlatformStart(): PrivateScope, Assembly, HideBySig
    PlatformStop(): PrivateScope, Assembly, HideBySig
    Update(): PrivateScope, Assembly, HideBySig
    PlatformGetData(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Audio.NoMicrophoneConnectedException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Xna.Framework.Audio.AudioCategory: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String, System.IO.BinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Audio.AudioCategory]
  Fields:
    Single[] _volume : Assembly
    Boolean isBackgroundMusic : Assembly
    Boolean isPublic : Assembly
    Boolean instanceLimit : Assembly
    Int32 maxInstances : Assembly
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior InstanceBehavior : Assembly
    Microsoft.Xna.Framework.Audio.CrossfadeType fadeType : Assembly
    Single fadeIn : Assembly
    Single fadeOut : Assembly
  Properties:
    System.String Name 'get ' : 
  Methods:
    AddSound(XactSound): PrivateScope, Assembly, HideBySig
    GetPlayingInstanceCount(): PrivateScope, Assembly, HideBySig
    GetOldestInstance(): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    Pause(): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    Stop(AudioStopOptions): PrivateScope, Public, HideBySig
    SetVolume(Single): PrivateScope, Public, HideBySig
    op_Equality(AudioCategory, AudioCategory): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(AudioCategory, AudioCategory): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(AudioCategory): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Audio.AudioEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.TimeSpan, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Collections.Generic.List`1[Microsoft.Xna.Framework.Audio.Cue] ActiveCues : Assembly
    System.Collections.Generic.Dictionary`2[System.String,Microsoft.Xna.Framework.Audio.WaveBank] Wavebanks : Assembly
    Microsoft.Xna.Framework.Audio.RpcCurve[] RpcCurves : Assembly, InitOnly
    System.Object UpdateLock : Assembly, InitOnly
    Int32 ContentVersion = 39 : Public, Static, Literal, HasDefault
  Properties:
    Microsoft.Xna.Framework.Audio.AudioCategory[] Categories 'get ' : 
    Boolean IsDisposed 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Disposing: 
  Methods:
    get_Categories(): PrivateScope, Assembly, HideBySig, SpecialName
    CreateCueVariables(): PrivateScope, Assembly, HideBySig
    OpenStream(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    GetRpcIndex(UInt32): PrivateScope, Assembly, HideBySig
    Update(): PrivateScope, Public, HideBySig
    GetCategory(String): PrivateScope, Public, HideBySig
    GetGlobalVariable(String): PrivateScope, Public, HideBySig
    GetGlobalVariable(Int32): PrivateScope, Assembly, HideBySig
    SetGlobalVariable(String, Single): PrivateScope, Public, HideBySig
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Audio.AudioStopOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.AudioStopOptions AsAuthored = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.AudioStopOptions Immediate = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Audio.ClipEvent: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Single RandomOffset 'get set' : 
    Single TimeStamp 'get set' : 
  Methods:
    get_RandomOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeStamp(): PrivateScope, Public, HideBySig, SpecialName
    Play(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pause(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Resume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFade(Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTrackVolume(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTrackPan(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetState(Single, Single, Single, Nullable`1, Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Microsoft.Xna.Framework.Audio.CrossfadeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.CrossfadeType Linear = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.CrossfadeType Logarithmic = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.CrossfadeType EqualPower = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Audio.Cue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String, Microsoft.Xna.Framework.Audio.XactSound): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String, Microsoft.Xna.Framework.Audio.XactSound[], Single[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsPaused 'get ' : 
    Boolean IsPlaying 'get ' : 
    Boolean IsStopped 'get ' : 
    Boolean IsStopping 'get ' : 
    Boolean IsPreparing 'get ' : 
    Boolean IsPrepared 'get set' : 
    Boolean IsCreated 'get set' : 
    System.String Name 'get ' : 
    Boolean IsDisposed 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Disposing: 
  Methods:
    get_IsPaused(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlaying(): PrivateScope, Public, HideBySig, SpecialName
    get_IsStopped(): PrivateScope, Public, HideBySig, SpecialName
    get_IsStopping(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPreparing(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrepared(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrepared(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsCreated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCreated(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    Prepare(): PrivateScope, Assembly, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    Play(): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    Stop(AudioStopOptions): PrivateScope, Public, HideBySig
    SetVariable(String, Single): PrivateScope, Public, HideBySig
    GetVariable(String): PrivateScope, Public, HideBySig
    Apply3D(AudioListener, AudioEmitter): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Assembly, HideBySig
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDisposed(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Audio.DspParameter: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Value : Public
    Single MinValue : Public, InitOnly
    Single MaxValue : Public, InitOnly
  Methods:
    SetValue(Single): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Audio.FilterMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.FilterMode LowPass = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.FilterMode BandPass = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.FilterMode HighPass = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.MaxInstanceBehavior: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior FailToPlay = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior Queue = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior ReplaceOldest = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior ReplaceQuietest = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MaxInstanceBehavior ReplaceLowestPriority = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.MiniFormatTag: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.MiniFormatTag Pcm = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MiniFormatTag Xma = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MiniFormatTag Adpcm = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MiniFormatTag Wma = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.MiniFormatTag PlatformSpecific = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.VariationType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.VariationType Ordered = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.VariationType OrderedFromRandom = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.VariationType Random = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.VariationType RandomNoImmediateRepeats = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.VariationType Shuffle = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Audio.PlayWaveEvent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Audio.ClipEvent
    Void .ctor(Microsoft.Xna.Framework.Audio.XactClip, Single, Single, Microsoft.Xna.Framework.Audio.SoundBank, Int32[], Int32[], Byte[], Int32, Microsoft.Xna.Framework.Audio.VariationType, System.Nullable`1[Microsoft.Xna.Framework.Vector2], System.Nullable`1[Microsoft.Xna.Framework.Vector2], System.Nullable`1[Microsoft.Xna.Framework.Vector4], Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Play(): PrivateScope, Public, Virtual, HideBySig
    Stop(): PrivateScope, Public, Virtual, HideBySig
    Pause(): PrivateScope, Public, Virtual, HideBySig
    Resume(): PrivateScope, Public, Virtual, HideBySig
    SetTrackVolume(Single): PrivateScope, Public, Virtual, HideBySig
    SetTrackPan(Single): PrivateScope, Public, Virtual, HideBySig
    SetState(Single, Single, Single, Nullable`1, Nullable`1): PrivateScope, Public, Virtual, HideBySig
    SetFade(Single, Single): PrivateScope, Public, Virtual, HideBySig
    Update(Single): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Audio.ReverbSettings: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Item [Int32] 'get set' : 
    Single ReflectionsDelayMs 'get ' : 
    Single ReverbDelayMs 'get ' : 
    Single PositionLeft 'get ' : 
    Single PositionRight 'get ' : 
    Single PositionLeftMatrix 'get ' : 
    Single PositionRightMatrix 'get ' : 
    Single EarlyDiffusion 'get ' : 
    Single LateDiffusion 'get ' : 
    Single LowEqGain 'get ' : 
    Single LowEqCutoff 'get ' : 
    Single HighEqGain 'get ' : 
    Single HighEqCutoff 'get ' : 
    Single RearDelayMs 'get ' : 
    Single RoomFilterFrequencyHz 'get ' : 
    Single RoomFilterMainDb 'get ' : 
    Single RoomFilterHighFrequencyDb 'get ' : 
    Single ReflectionsGainDb 'get ' : 
    Single ReverbGainDb 'get ' : 
    Single DecayTimeSec 'get ' : 
    Single DensityPct 'get ' : 
    Single RoomSizeFeet 'get ' : 
    Single WetDryMixPct 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionsDelayMs(): PrivateScope, Public, HideBySig, SpecialName
    get_ReverbDelayMs(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionRight(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionLeftMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionRightMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_EarlyDiffusion(): PrivateScope, Public, HideBySig, SpecialName
    get_LateDiffusion(): PrivateScope, Public, HideBySig, SpecialName
    get_LowEqGain(): PrivateScope, Public, HideBySig, SpecialName
    get_LowEqCutoff(): PrivateScope, Public, HideBySig, SpecialName
    get_HighEqGain(): PrivateScope, Public, HideBySig, SpecialName
    get_HighEqCutoff(): PrivateScope, Public, HideBySig, SpecialName
    get_RearDelayMs(): PrivateScope, Public, HideBySig, SpecialName
    get_RoomFilterFrequencyHz(): PrivateScope, Public, HideBySig, SpecialName
    get_RoomFilterMainDb(): PrivateScope, Public, HideBySig, SpecialName
    get_RoomFilterHighFrequencyDb(): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionsGainDb(): PrivateScope, Public, HideBySig, SpecialName
    get_ReverbGainDb(): PrivateScope, Public, HideBySig, SpecialName
    get_DecayTimeSec(): PrivateScope, Public, HideBySig, SpecialName
    get_DensityPct(): PrivateScope, Public, HideBySig, SpecialName
    get_RoomSizeFeet(): PrivateScope, Public, HideBySig, SpecialName
    get_WetDryMixPct(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Audio.RpcCurve: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 FileOffset : Public
    Int32 Variable : Public
    Boolean IsGlobal : Public
    Microsoft.Xna.Framework.Audio.RpcParameter Parameter : Public
    Microsoft.Xna.Framework.Audio.RpcPoint[] Points : Public
  Methods:
    Evaluate(Single): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Audio.RpcParameter: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.RpcParameter Volume = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcParameter Pitch = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcParameter ReverbSend = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcParameter FilterFrequency = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcParameter FilterQFactor = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcParameter NumParameters = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.RpcPoint: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Xna.Framework.Audio.RpcPointType Type : Public
    Single Position : Public
    Single Value : Public
Struct Microsoft.Xna.Framework.Audio.RpcPointType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Audio.RpcPointType Linear = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcPointType Fast = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcPointType Slow = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Audio.RpcPointType SinCos = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Audio.RpcVariable: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Name : Public
    Single Value : Public
    Byte Flags : Public
    Single InitValue : Public
    Single MaxValue : Public
    Single MinValue : Public
  Properties:
    Boolean IsPublic 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsGlobal 'get ' : 
    Boolean IsReserved 'get ' : 
  Methods:
    get_IsPublic(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    get_IsGlobal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReserved(): PrivateScope, Public, HideBySig, SpecialName
    SetValue(Single): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Audio.SoundBank: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsInUse 'get set' : 
    Boolean IsDisposed 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Disposing: 
  Methods:
    get_IsInUse(): PrivateScope, Public, HideBySig, SpecialName
    GetSoundEffectInstance(Int32, Int32, Boolean&(Out)): PrivateScope, Assembly, HideBySig
    GetCue(String): PrivateScope, Public, HideBySig
    PlayCue(String): PrivateScope, Public, HideBySig
    PlayCue(String, AudioListener, AudioEmitter): PrivateScope, Public, HideBySig
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Audio.VolumeEvent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Audio.ClipEvent
    Void .ctor(Microsoft.Xna.Framework.Audio.XactClip, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Play(): PrivateScope, Public, Virtual, HideBySig
    Stop(): PrivateScope, Public, Virtual, HideBySig
    Pause(): PrivateScope, Public, Virtual, HideBySig
    Resume(): PrivateScope, Public, Virtual, HideBySig
    SetTrackVolume(Single): PrivateScope, Public, Virtual, HideBySig
    SetTrackPan(Single): PrivateScope, Public, Virtual, HideBySig
    SetState(Single, Single, Single, Nullable`1, Nullable`1): PrivateScope, Public, Virtual, HideBySig
    Update(Single): PrivateScope, Public, Virtual, HideBySig
    SetFade(Single, Single): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Audio.WaveBank: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, System.String, Int32, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsInUse 'get set' : 
    Boolean IsPrepared 'get set' : 
    Boolean IsDisposed 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Disposing: 
  Methods:
    get_IsInUse(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrepared(): PrivateScope, Public, HideBySig, SpecialName
    GetSoundEffectInstance(Int32, Boolean&(Out)): PrivateScope, Assembly, HideBySig
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Audio.XactClip: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Audio.SoundBank, System.IO.BinaryReader, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean FilterEnabled : Assembly, InitOnly
    Microsoft.Xna.Framework.Audio.FilterMode FilterMode : Assembly, InitOnly
    Single FilterQ : Assembly, InitOnly
    UInt16 FilterFrequency : Assembly, InitOnly
    Boolean UseReverb : Assembly, InitOnly
  Properties:
    Microsoft.Xna.Framework.Audio.SoundState State 'get set' : 
  Methods:
    Update(Single): PrivateScope, Assembly, HideBySig
    SetFade(Single, Single): PrivateScope, Assembly, HideBySig
    UpdateState(Single, Single, Single, Nullable`1, Nullable`1): PrivateScope, Assembly, HideBySig
    Play(): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    SetVolumeScale(Single): PrivateScope, Public, HideBySig
    SetVolume(Single): PrivateScope, Public, HideBySig
    SetPan(Single): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Audio.XactHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Random Random : Assembly, Static, InitOnly
  Methods:
    ParseDecibels(Byte): PrivateScope, Public, Static, HideBySig
    ParseVolumeFromDecibels(Byte): PrivateScope, Public, Static, HideBySig
    ParseVolumeFromDecibels(Single): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Audio.XactSound: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Audio.SoundBank, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Audio.AudioEngine, Microsoft.Xna.Framework.Audio.SoundBank, System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] RpcCurves : Assembly, InitOnly
  Properties:
    Boolean Playing 'get ' : 
    Boolean Stopped 'get ' : 
    Boolean IsPaused 'get ' : 
  Methods:
    SetFade(Single, Single): PrivateScope, Assembly, HideBySig
    Play(Single, AudioEngine): PrivateScope, Public, HideBySig
    Update(Single): PrivateScope, Assembly, HideBySig
    StopAll(AudioStopOptions): PrivateScope, Assembly, HideBySig
    Stop(AudioStopOptions): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    UpdateCategoryVolume(Single): PrivateScope, Assembly, HideBySig
    UpdateState(AudioEngine, Single, Single, Single, Nullable`1, Nullable`1): PrivateScope, Assembly, HideBySig
    SetCuePan(Single): PrivateScope, Assembly, HideBySig
    get_Playing(): PrivateScope, Public, HideBySig, SpecialName
    get_Stopped(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPaused(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.ContentExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDefaultConstructor(Type): PrivateScope, Public, Static, HideBySig
    GetAllProperties(Type): PrivateScope, Public, Static, HideBySig
    GetAllFields(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Content.ContentLoadException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ContentManager: AutoLayout, AnsiClass, Class, Public
    Void .ctor(System.IServiceProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IServiceProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String RootDirectory 'get set' : 
    System.String RootDirectoryFullPath 'get ' : 
    System.IServiceProvider ServiceProvider 'get ' : 
  Methods:
    ReloadGraphicsContent(): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadLocalized(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RecordDisposable(IDisposable): PrivateScope, Assembly, HideBySig
    Unload(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RootDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_RootDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_RootDirectoryFullPath(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ServiceProvider(): PrivateScope, Public, HideBySig, SpecialName
    GetScratchBuffer(Int32): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Content.ContentReader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.BinaryReader
    Void .ctor(Microsoft.Xna.Framework.Content.ContentManager, System.IO.Stream, Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.String, Int32, System.Action`1[System.IDisposable]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 version : Assembly
    Int32 sharedResourceCount : Assembly
  Properties:
    Microsoft.Xna.Framework.Content.ContentTypeReader[] TypeReaders 'get ' : 
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get ' : 
    Microsoft.Xna.Framework.Content.ContentManager ContentManager 'get ' : 
    System.String AssetName 'get ' : 
  Methods:
    get_TypeReaders(): PrivateScope, Assembly, HideBySig, SpecialName
    get_GraphicsDevice(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ContentManager(): PrivateScope, Public, HideBySig, SpecialName
    get_AssetName(): PrivateScope, Public, HideBySig, SpecialName
    ReadAsset(): PrivateScope, Assembly, HideBySig
    ReadAsset(T): PrivateScope, Assembly, HideBySig
    InitializeTypeReaders(): PrivateScope, Assembly, HideBySig
    ReadSharedResources(): PrivateScope, Assembly, HideBySig
    ReadExternalReference(): PrivateScope, Public, HideBySig
    ReadMatrix(): PrivateScope, Public, HideBySig
    ReadObject(): PrivateScope, Public, HideBySig
    ReadObject(ContentTypeReader): PrivateScope, Public, HideBySig
    ReadObject(T): PrivateScope, Public, HideBySig
    ReadObject(ContentTypeReader, T): PrivateScope, Public, HideBySig
    ReadQuaternion(): PrivateScope, Public, HideBySig
    ReadRawObject(): PrivateScope, Public, HideBySig
    ReadRawObject(ContentTypeReader): PrivateScope, Public, HideBySig
    ReadRawObject(T): PrivateScope, Public, HideBySig
    ReadRawObject(ContentTypeReader, T): PrivateScope, Public, HideBySig
    ReadSharedResource(Action`1): PrivateScope, Public, HideBySig
    ReadVector2(): PrivateScope, Public, HideBySig
    ReadVector3(): PrivateScope, Public, HideBySig
    ReadVector4(): PrivateScope, Public, HideBySig
    ReadColor(): PrivateScope, Public, HideBySig
    Read7BitEncodedInt(): PrivateScope, Assembly, HideBySig
    ReadBoundingSphere(): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Content.ContentTypeReader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean CanDeserializeIntoExistingObject 'get ' : 
    System.Type TargetType 'get ' : 
    Int32 TypeVersion 'get ' : 
  Methods:
    get_CanDeserializeIntoExistingObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TargetType(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Microsoft.Xna.Framework.Content.ContentTypeReader`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader
Class Microsoft.Xna.Framework.Content.AlphaTestEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.AlphaTestEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ArrayReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[T[]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.BasicEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.BasicEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.BooleanReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Boolean]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.BoundingBoxReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.BoundingBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.BoundingFrustumReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.BoundingFrustum]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.BoundingSphereReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.BoundingSphere]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ByteReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Byte]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.CharReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Char]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ColorReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Color]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.CurveReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Curve]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.DateTimeReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.DateTime]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.DecimalReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Decimal]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.DictionaryReader`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Collections.Generic.Dictionary`2[TKey,TValue]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanDeserializeIntoExistingObject 'get ' : 
  Methods:
    get_CanDeserializeIntoExistingObject(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.DoubleReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Double]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.DualTextureEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.DualTextureEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.EffectMaterialReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.EffectMaterial]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.EffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.Effect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.EnumReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[T]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.EnvironmentMapEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ExternalReferenceReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.IndexBufferReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.IndexBuffer]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Int16Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Int16]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Int32Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Int32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Int64Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Int64]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ListReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Collections.Generic.List`1[T]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanDeserializeIntoExistingObject 'get ' : 
  Methods:
    get_CanDeserializeIntoExistingObject(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.MatrixReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Matrix]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ModelReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.Model]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.MultiArrayReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Array]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.NullableReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Nullable`1[T]]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.PlaneReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Plane]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.PointReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Point]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.QuaternionReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Quaternion]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.RayReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Ray]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.RectangleReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Rectangle]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ReflectiveReader`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :Microsoft.Xna.Framework.Content.ContentTypeReader
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanDeserializeIntoExistingObject 'get ' : 
  Methods:
    get_CanDeserializeIntoExistingObject(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.SByteReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.SByte]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.SingleReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.Single]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.SkinnedEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.SkinnedEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.SongReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Media.Song]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.SoundEffectReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Audio.SoundEffect]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.SpriteFontReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.SpriteFont]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.StringReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Texture2DReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.Texture2D]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Texture3DReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.Texture3D]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.TextureCubeReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.TextureCube]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.TextureReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.Texture]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.TimeSpanReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.TimeSpan]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.UInt16Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.UInt16]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.UInt32Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.UInt32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.UInt64Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[System.UInt64]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Vector2Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Vector2]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Vector3Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Vector3]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.Vector4Reader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Vector4]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.VertexBufferReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.VertexBuffer]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.VertexDeclarationReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Graphics.VertexDeclaration]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.VideoReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentTypeReader`1[Microsoft.Xna.Framework.Media.Video]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ContentSerializerAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllowNull 'get set' : 
    System.String CollectionItemName 'get set' : 
    System.String ElementName 'get set' : 
    Boolean FlattenContent 'get set' : 
    Boolean HasCollectionItemName 'get ' : 
    Boolean Optional 'get set' : 
    Boolean SharedResource 'get set' : 
  Methods:
    get_AllowNull(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowNull(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CollectionItemName(): PrivateScope, Public, HideBySig, SpecialName
    set_CollectionItemName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ElementName(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FlattenContent(): PrivateScope, Public, HideBySig, SpecialName
    set_FlattenContent(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasCollectionItemName(): PrivateScope, Public, HideBySig, SpecialName
    get_Optional(): PrivateScope, Public, HideBySig, SpecialName
    set_Optional(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SharedResource(): PrivateScope, Public, HideBySig, SpecialName
    set_SharedResource(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CollectionItemName 'get set' : 
  Methods:
    get_CollectionItemName(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.ContentSerializerIgnoreAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RuntimeType 'get set' : 
  Methods:
    get_RuntimeType(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TypeVersion 'get set' : 
  Methods:
    get_TypeVersion(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Content.ContentTypeReaderManager: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTypeReader(Type): PrivateScope, Public, HideBySig
    LoadAssetReaders(ContentReader): PrivateScope, Assembly, HideBySig
    PrepareType(String): PrivateScope, Public, Static, HideBySig
    AddTypeCreator(String, Func`1): PrivateScope, Public, Static, HideBySig
    ClearTypeCreators(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Content.LzxDecoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32[] position_base : Public, Static
    Byte[] extra_bits : Public, Static
  Methods:
    Decompress(Stream, Int32, Stream, Int32): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Content.LzxConstants: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 MIN_MATCH = 2 : Public, Static, Literal, HasDefault
    UInt16 MAX_MATCH = 257 : Public, Static, Literal, HasDefault
    UInt16 NUM_CHARS = 256 : Public, Static, Literal, HasDefault
    UInt16 PRETREE_NUM_ELEMENTS = 20 : Public, Static, Literal, HasDefault
    UInt16 ALIGNED_NUM_ELEMENTS = 8 : Public, Static, Literal, HasDefault
    UInt16 NUM_PRIMARY_LENGTHS = 7 : Public, Static, Literal, HasDefault
    UInt16 NUM_SECONDARY_LENGTHS = 249 : Public, Static, Literal, HasDefault
    UInt16 PRETREE_MAXSYMBOLS = 20 : Public, Static, Literal, HasDefault
    UInt16 PRETREE_TABLEBITS = 6 : Public, Static, Literal, HasDefault
    UInt16 MAINTREE_MAXSYMBOLS = 656 : Public, Static, Literal, HasDefault
    UInt16 MAINTREE_TABLEBITS = 12 : Public, Static, Literal, HasDefault
    UInt16 LENGTH_MAXSYMBOLS = 250 : Public, Static, Literal, HasDefault
    UInt16 LENGTH_TABLEBITS = 12 : Public, Static, Literal, HasDefault
    UInt16 ALIGNED_MAXSYMBOLS = 8 : Public, Static, Literal, HasDefault
    UInt16 ALIGNED_TABLEBITS = 7 : Public, Static, Literal, HasDefault
    UInt16 LENTABLE_SAFETY = 64 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Content.LzxConstants+BLOCKTYPE: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BLOCKTYPE INVALID = 0 : Public, Static, Literal, HasDefault
    BLOCKTYPE VERBATIM = 1 : Public, Static, Literal, HasDefault
    BLOCKTYPE ALIGNED = 2 : Public, Static, Literal, HasDefault
    BLOCKTYPE UNCOMPRESSED = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Content.UnsupportedWindowSizeRange: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Content.ResourceContentManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Content.ContentManager
    Void .ctor(System.IServiceProvider, System.Resources.ResourceManager): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Xna.Framework.Graphics.ClearOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.ClearOptions Target = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ClearOptions DepthBuffer = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ClearOptions Stencil = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.ColorWriteChannels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels Red = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels Green = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels Blue = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels Alpha = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels All = 15 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.CubeMapFace: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.CubeMapFace PositiveX = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CubeMapFace NegativeX = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CubeMapFace PositiveY = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CubeMapFace NegativeY = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CubeMapFace PositiveZ = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CubeMapFace NegativeZ = 5 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.DeviceLostException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Graphics.DeviceNotResetException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.GraphicsDeviceInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsAdapter Adapter 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsProfile GraphicsProfile 'get set' : 
    Microsoft.Xna.Framework.Graphics.PresentationParameters PresentationParameters 'get set' : 
  Methods:
    get_Adapter(): PrivateScope, Public, HideBySig, SpecialName
    set_Adapter(GraphicsAdapter): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsProfile(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphicsProfile(GraphicsProfile): PrivateScope, Public, HideBySig, SpecialName
    get_PresentationParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_PresentationParameters(PresentationParameters): PrivateScope, Public, HideBySig, SpecialName
Interface Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] DeviceCreated: 
    System.EventHandler`1[System.EventArgs] DeviceDisposing: 
    System.EventHandler`1[System.EventArgs] DeviceReset: 
    System.EventHandler`1[System.EventArgs] DeviceResetting: 
  Methods:
    get_GraphicsDevice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DeviceCreated(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DeviceCreated(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DeviceDisposing(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DeviceDisposing(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DeviceReset(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DeviceReset(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DeviceResetting(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DeviceResetting(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Xna.Framework.GraphicsDeviceManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Game): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService
    System.IDisposable
    Microsoft.Xna.Framework.IGraphicsDeviceManager
  Fields:
    Int32 DefaultBackBufferWidth : Public, Static, InitOnly
    Int32 DefaultBackBufferHeight : Public, Static, InitOnly
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsProfile GraphicsProfile 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get ' : 
    Boolean IsFullScreen 'get set' : 
    Boolean HardwareModeSwitch 'get set' : 
    Boolean PreferMultiSampling 'get set' : 
    Microsoft.Xna.Framework.Graphics.SurfaceFormat PreferredBackBufferFormat 'get set' : 
    Int32 PreferredBackBufferHeight 'get set' : 
    Int32 PreferredBackBufferWidth 'get set' : 
    Microsoft.Xna.Framework.Graphics.DepthFormat PreferredDepthStencilFormat 'get set' : 
    Boolean SynchronizeWithVerticalRetrace 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation SupportedOrientations 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] DeviceCreated: 
    System.EventHandler`1[System.EventArgs] DeviceDisposing: 
    System.EventHandler`1[System.EventArgs] DeviceReset: 
    System.EventHandler`1[System.EventArgs] DeviceResetting: 
    System.EventHandler`1[Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs] PreparingDeviceSettings: 
    System.EventHandler`1[System.EventArgs] Disposed: 
  Methods:
    BeginDraw(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndDraw(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_DeviceCreated(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DeviceCreated(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DeviceDisposing(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DeviceDisposing(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DeviceReset(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DeviceReset(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DeviceResetting(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DeviceResetting(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_PreparingDeviceSettings(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_PreparingDeviceSettings(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Disposed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    OnDeviceReset(EventArgs): PrivateScope, Assembly, HideBySig
    OnDeviceCreated(EventArgs): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyChanges(): PrivateScope, Public, HideBySig
    ToggleFullScreen(): PrivateScope, Public, HideBySig
    get_GraphicsProfile(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphicsProfile(GraphicsProfile): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsDevice(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFullScreen(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFullScreen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareModeSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareModeSwitch(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PreferMultiSampling(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferMultiSampling(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PreferredBackBufferFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferredBackBufferFormat(SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName
    get_PreferredBackBufferHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferredBackBufferHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PreferredBackBufferWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferredBackBufferWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PreferredDepthStencilFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferredDepthStencilFormat(DepthFormat): PrivateScope, Public, HideBySig, SpecialName
    get_SynchronizeWithVerticalRetrace(): PrivateScope, Public, HideBySig, SpecialName
    set_SynchronizeWithVerticalRetrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedOrientations(): PrivateScope, Public, HideBySig, SpecialName
    set_SupportedOrientations(DisplayOrientation): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.GraphicsMetrics: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 _clearCount : Assembly
    Int64 _drawCount : Assembly
    Int64 _pixelShaderCount : Assembly
    Int64 _primitiveCount : Assembly
    Int64 _spriteCount : Assembly
    Int64 _targetCount : Assembly
    Int64 _textureCount : Assembly
    Int64 _vertexShaderCount : Assembly
  Properties:
    Int64 ClearCount 'get ' : 
    Int64 DrawCount 'get ' : 
    Int64 PixelShaderCount 'get ' : 
    Int64 PrimitiveCount 'get ' : 
    Int64 SpriteCount 'get ' : 
    Int64 TargetCount 'get ' : 
    Int64 TextureCount 'get ' : 
    Int64 VertexShaderCount 'get ' : 
  Methods:
    get_ClearCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DrawCount(): PrivateScope, Public, HideBySig, SpecialName
    get_PixelShaderCount(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimitiveCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SpriteCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TextureCount(): PrivateScope, Public, HideBySig, SpecialName
    get_VertexShaderCount(): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(GraphicsMetrics, GraphicsMetrics): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(GraphicsMetrics, GraphicsMetrics): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.DirectionalLight: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.DirectionalLight): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.EffectParameter diffuseColorParameter : Assembly
    Microsoft.Xna.Framework.Graphics.EffectParameter directionParameter : Assembly
    Microsoft.Xna.Framework.Graphics.EffectParameter specularColorParameter : Assembly
  Properties:
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 Direction 'get set' : 
    Microsoft.Xna.Framework.Vector3 SpecularColor 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.DisplayModeCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.DisplayMode]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.DisplayMode]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.DisplayMode] Item [Microsoft.Xna.Framework.Graphics.SurfaceFormat] 'get ' : 
  Methods:
    get_Item(SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.DisplayMode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Microsoft.Xna.Framework.Graphics.SurfaceFormat): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single AspectRatio 'get ' : 
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Format 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    Microsoft.Xna.Framework.Rectangle TitleSafeArea 'get ' : 
  Methods:
    get_AspectRatio(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSafeArea(): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(DisplayMode, DisplayMode): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DisplayMode, DisplayMode): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Graphics.DxtUtil: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    DecompressDxt1(Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    DecompressDxt1(Stream, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    DecompressDxt3(Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    DecompressDxt3(Stream, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    DecompressDxt5(Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    DecompressDxt5(Stream, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Xna.Framework.Graphics.GraphicsResource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsDevice GraphicsDevice 'get set' : 
    Boolean IsDisposed 'get ' : 
    System.String Name 'get set' : 
    System.Object Tag 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] Disposing: 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsDevice(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphicsDevice(GraphicsDevice): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Graphics.Effect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.EffectParameterCollection Parameters 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection Techniques 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectTechnique CurrentTechnique 'get set' : 
    Microsoft.Xna.Framework.Graphics.ConstantBuffer[] ConstantBuffers 'get set' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Techniques(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentTechnique(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentTechnique(EffectTechnique): PrivateScope, Public, HideBySig, SpecialName
    get_ConstantBuffers(): PrivateScope, Assembly, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Xna.Framework.Graphics.IEffectMatrices: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix World 'get set' : 
  Methods:
    get_Projection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_View(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_View(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_World(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_World(Matrix): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Xna.Framework.Graphics.IEffectFog: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Boolean FogEnabled 'get set' : 
    Single FogEnd 'get set' : 
    Single FogStart 'get set' : 
  Methods:
    get_FogColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FogEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FogEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FogStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FogStart(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Xna.Framework.Graphics.AlphaTestEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IEffectMatrices
    Microsoft.Xna.Framework.Graphics.IEffectFog
  Properties:
    Microsoft.Xna.Framework.Matrix World 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Single Alpha 'get set' : 
    Boolean FogEnabled 'get set' : 
    Single FogStart 'get set' : 
    Single FogEnd 'get set' : 
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get set' : 
    Boolean VertexColorEnabled 'get set' : 
    Microsoft.Xna.Framework.Graphics.CompareFunction AlphaFunction 'get set' : 
    Int32 ReferenceAlpha 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_World(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_View(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_View(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Projection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FogEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogStart(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_VertexColorEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexColorEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaFunction(CompareFunction): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAlpha(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceAlpha(Int32): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
Interface Microsoft.Xna.Framework.Graphics.IEffectLights: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Xna.Framework.Vector3 AmbientLightColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight0 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight1 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight2 'get ' : 
    Boolean LightingEnabled 'get set' : 
  Methods:
    get_AmbientLightColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AmbientLightColor(Vector3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DirectionalLight0(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DirectionalLight1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DirectionalLight2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightingEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LightingEnabled(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    EnableDefaultLighting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Xna.Framework.Graphics.BasicEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IEffectMatrices
    Microsoft.Xna.Framework.Graphics.IEffectLights
    Microsoft.Xna.Framework.Graphics.IEffectFog
  Properties:
    Microsoft.Xna.Framework.Matrix World 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 EmissiveColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 SpecularColor 'get set' : 
    Single SpecularPower 'get set' : 
    Single Alpha 'get set' : 
    Boolean LightingEnabled 'get set' : 
    Boolean PreferPerPixelLighting 'get set' : 
    Microsoft.Xna.Framework.Vector3 AmbientLightColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight0 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight1 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight2 'get ' : 
    Boolean FogEnabled 'get set' : 
    Single FogStart 'get set' : 
    Single FogEnd 'get set' : 
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Boolean TextureEnabled 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get set' : 
    Boolean VertexColorEnabled 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_World(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_View(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_View(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Projection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_EmissiveColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EmissiveColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularPower(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularPower(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LightingEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LightingEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferPerPixelLighting(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferPerPixelLighting(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AmbientLightColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight0(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight1(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight2(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogStart(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextureEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_TextureEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_VertexColorEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexColorEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    EnableDefaultLighting(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.DualTextureEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IEffectMatrices
    Microsoft.Xna.Framework.Graphics.IEffectFog
  Properties:
    Microsoft.Xna.Framework.Matrix World 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Single Alpha 'get set' : 
    Boolean FogEnabled 'get set' : 
    Single FogStart 'get set' : 
    Single FogEnd 'get set' : 
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture2 'get set' : 
    Boolean VertexColorEnabled 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_World(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_View(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_View(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Projection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FogEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogStart(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_Texture2(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture2(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_VertexColorEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexColorEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectAnnotation[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.EffectAnnotation]
    System.Collections.IEnumerable
  Fields:
    Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection Empty : Assembly, Static, InitOnly
  Properties:
    Int32 Count 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectAnnotation Item [Int32] 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectAnnotation Item [System.String] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.EffectAnnotation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameterClass, Microsoft.Xna.Framework.Graphics.EffectParameterType, System.String, Int32, Int32, System.String, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.EffectParameterClass ParameterClass 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectParameterType ParameterType 'get set' : 
    System.String Name 'get set' : 
    Int32 RowCount 'get set' : 
    Int32 ColumnCount 'get set' : 
    System.String Semantic 'get set' : 
  Methods:
    get_ParameterClass(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Semantic(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.EffectDirtyFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags WorldViewProj = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags World = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags EyePosition = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags MaterialColor = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags Fog = 16 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags FogEnable = 32 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags AlphaTest = 64 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags ShaderIndex = 128 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectDirtyFlags All = -1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.EffectHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    EnableDefaultLighting(DirectionalLight, DirectionalLight, DirectionalLight): PrivateScope, Assembly, Static, HideBySig
    SetWorldViewProjAndFog(EffectDirtyFlags, Matrix&, Matrix&, Matrix&, Matrix&, Boolean, Single, Single, EffectParameter, EffectParameter): PrivateScope, Assembly, Static, HideBySig
    SetLightingMatrices(EffectDirtyFlags, Matrix&, Matrix&, EffectParameter, EffectParameter, EffectParameter): PrivateScope, Assembly, Static, HideBySig
    SetMaterialColor(Boolean, Single, Vector3&, Vector3&, Vector3&, EffectParameter, EffectParameter): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Xna.Framework.Graphics.EffectMaterial: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.Effect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Xna.Framework.Graphics.EffectParameterClass: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.EffectParameterClass Scalar = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterClass Vector = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterClass Matrix = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterClass Object = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterClass Struct = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.EffectParameterCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameter[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.EffectParameter]
    System.Collections.IEnumerable
  Fields:
    Microsoft.Xna.Framework.Graphics.EffectParameterCollection Empty : Assembly, Static, InitOnly
  Properties:
    Int32 Count 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectParameter Item [Int32] 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectParameter Item [System.String] 'get ' : 
  Methods:
    Clone(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.EffectParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameterClass, Microsoft.Xna.Framework.Graphics.EffectParameterType, System.String, Int32, Int32, System.String, Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection, Microsoft.Xna.Framework.Graphics.EffectParameterCollection, Microsoft.Xna.Framework.Graphics.EffectParameterCollection, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectParameter): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 NextStateKey 'get set' : 
    System.String Name 'get set' : 
    System.String Semantic 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectParameterClass ParameterClass 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectParameterType ParameterType 'get set' : 
    Int32 RowCount 'get set' : 
    Int32 ColumnCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectParameterCollection Elements 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectParameterCollection StructureMembers 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection Annotations 'get set' : 
    System.Object Data 'get set' : 
    UInt64 StateKey 'get set' : 
  Methods:
    get_NextStateKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Semantic(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterClass(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_StructureMembers(): PrivateScope, Public, HideBySig, SpecialName
    get_Annotations(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Assembly, HideBySig, SpecialName
    get_StateKey(): PrivateScope, Assembly, HideBySig, SpecialName
    GetValueBoolean(): PrivateScope, Public, HideBySig
    GetValueInt32(): PrivateScope, Public, HideBySig
    GetValueMatrix(): PrivateScope, Public, HideBySig
    GetValueMatrixArray(Int32): PrivateScope, Public, HideBySig
    GetValueQuaternion(): PrivateScope, Public, HideBySig
    GetValueSingle(): PrivateScope, Public, HideBySig
    GetValueSingleArray(): PrivateScope, Public, HideBySig
    GetValueString(): PrivateScope, Public, HideBySig
    GetValueTexture2D(): PrivateScope, Public, HideBySig
    GetValueTexture3D(): PrivateScope, Public, HideBySig
    GetValueTextureCube(): PrivateScope, Public, HideBySig
    GetValueVector2(): PrivateScope, Public, HideBySig
    GetValueVector2Array(): PrivateScope, Public, HideBySig
    GetValueVector3(): PrivateScope, Public, HideBySig
    GetValueVector3Array(): PrivateScope, Public, HideBySig
    GetValueVector4(): PrivateScope, Public, HideBySig
    GetValueVector4Array(): PrivateScope, Public, HideBySig
    SetValue(Boolean): PrivateScope, Public, HideBySig
    SetValue(Int32): PrivateScope, Public, HideBySig
    SetValue(Matrix): PrivateScope, Public, HideBySig
    SetValueTranspose(Matrix): PrivateScope, Public, HideBySig
    SetValue(Matrix[]): PrivateScope, Public, HideBySig
    SetValue(Quaternion): PrivateScope, Public, HideBySig
    SetValue(Single): PrivateScope, Public, HideBySig
    SetValue(Single[]): PrivateScope, Public, HideBySig
    SetValue(Texture): PrivateScope, Public, HideBySig
    SetValue(Vector2): PrivateScope, Public, HideBySig
    SetValue(Vector2[]): PrivateScope, Public, HideBySig
    SetValue(Vector3): PrivateScope, Public, HideBySig
    SetValue(Vector3[]): PrivateScope, Public, HideBySig
    SetValue(Vector4): PrivateScope, Public, HideBySig
    SetValue(Vector4[]): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.EffectParameterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.EffectParameterType Void = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Bool = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Int32 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Single = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType String = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Texture = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Texture1D = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Texture2D = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType Texture3D = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.EffectParameterType TextureCube = 9 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.EffectPassCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectPass[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.EffectPass]
    System.Collections.IEnumerable
  Properties:
    Microsoft.Xna.Framework.Graphics.EffectPass Item [Int32] 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectPass Item [System.String] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Clone(Effect): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.EffectPassCollection+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectPass[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Microsoft.Xna.Framework.Graphics.EffectPass]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Microsoft.Xna.Framework.Graphics.EffectPass Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.EffectPass: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.Effect, System.String, Microsoft.Xna.Framework.Graphics.Shader, Microsoft.Xna.Framework.Graphics.Shader, Microsoft.Xna.Framework.Graphics.BlendState, Microsoft.Xna.Framework.Graphics.DepthStencilState, Microsoft.Xna.Framework.Graphics.RasterizerState, Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.Effect, Microsoft.Xna.Framework.Graphics.EffectPass): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection Annotations 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Annotations(): PrivateScope, Public, HideBySig, SpecialName
    Apply(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.EffectResource: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    Microsoft.Xna.Framework.Graphics.EffectResource AlphaTestEffect : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.EffectResource BasicEffect : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.EffectResource DualTextureEffect : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.EffectResource EnvironmentMapEffect : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.EffectResource SkinnedEffect : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.EffectResource SpriteEffect : Public, Static, InitOnly
  Properties:
    Byte[] Bytecode 'get ' : 
  Methods:
    get_Bytecode(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.EffectTechnique[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Graphics.EffectTechnique]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectTechnique Item [Int32] 'get ' : 
    Microsoft.Xna.Framework.Graphics.EffectTechnique Item [System.String] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Clone(Effect): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.EffectTechnique: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.Effect, Microsoft.Xna.Framework.Graphics.EffectTechnique): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.Effect, System.String, Microsoft.Xna.Framework.Graphics.EffectPassCollection, Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.EffectPassCollection Passes 'get set' : 
    Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection Annotations 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Passes(): PrivateScope, Public, HideBySig, SpecialName
    get_Annotations(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IEffectMatrices
    Microsoft.Xna.Framework.Graphics.IEffectLights
    Microsoft.Xna.Framework.Graphics.IEffectFog
  Properties:
    Microsoft.Xna.Framework.Matrix World 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 EmissiveColor 'get set' : 
    Single Alpha 'get set' : 
    Microsoft.Xna.Framework.Vector3 AmbientLightColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight0 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight1 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight2 'get ' : 
    Boolean FogEnabled 'get set' : 
    Single FogStart 'get set' : 
    Single FogEnd 'get set' : 
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureCube EnvironmentMap 'get set' : 
    Single EnvironmentMapAmount 'get set' : 
    Microsoft.Xna.Framework.Vector3 EnvironmentMapSpecular 'get set' : 
    Single FresnelFactor 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_World(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_View(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_View(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Projection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_EmissiveColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EmissiveColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AmbientLightColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight0(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight1(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight2(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogStart(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentMap(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMap(TextureCube): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentMapAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMapAmount(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentMapSpecular(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentMapSpecular(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_FresnelFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_FresnelFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    EnableDefaultLighting(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.SkinnedEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IEffectMatrices
    Microsoft.Xna.Framework.Graphics.IEffectLights
    Microsoft.Xna.Framework.Graphics.IEffectFog
  Fields:
    Int32 MaxBones = 72 : Public, Static, Literal, HasDefault
  Properties:
    Microsoft.Xna.Framework.Matrix World 'get set' : 
    Microsoft.Xna.Framework.Matrix View 'get set' : 
    Microsoft.Xna.Framework.Matrix Projection 'get set' : 
    Microsoft.Xna.Framework.Vector3 DiffuseColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 EmissiveColor 'get set' : 
    Microsoft.Xna.Framework.Vector3 SpecularColor 'get set' : 
    Single SpecularPower 'get set' : 
    Single Alpha 'get set' : 
    Boolean PreferPerPixelLighting 'get set' : 
    Microsoft.Xna.Framework.Vector3 AmbientLightColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight0 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight1 'get ' : 
    Microsoft.Xna.Framework.Graphics.DirectionalLight DirectionalLight2 'get ' : 
    Boolean FogEnabled 'get set' : 
    Single FogStart 'get set' : 
    Single FogEnd 'get set' : 
    Microsoft.Xna.Framework.Vector3 FogColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get set' : 
    Int32 WeightsPerVertex 'get set' : 
  Methods:
    get_World(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_World(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_View(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_View(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Projection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Projection(Matrix): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DiffuseColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffuseColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_EmissiveColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EmissiveColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularColor(Vector3): PrivateScope, Public, HideBySig, SpecialName
    get_SpecularPower(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecularPower(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PreferPerPixelLighting(): PrivateScope, Public, HideBySig, SpecialName
    set_PreferPerPixelLighting(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AmbientLightColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight0(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight1(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DirectionalLight2(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnabled(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogStart(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogEnd(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogEnd(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FogColor(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FogColor(Vector3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    set_Texture(Texture2D): PrivateScope, Public, HideBySig, SpecialName
    get_WeightsPerVertex(): PrivateScope, Public, HideBySig, SpecialName
    set_WeightsPerVertex(Int32): PrivateScope, Public, HideBySig, SpecialName
    SetBoneTransforms(Matrix[]): PrivateScope, Public, HideBySig
    GetBoneTransforms(Int32): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    EnableDefaultLighting(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.SpriteEffect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Effect
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Graphics.GraphicsAdapter: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsAdapter DefaultAdapter 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Graphics.GraphicsAdapter] Adapters 'get ' : 
    Boolean UseReferenceDevice 'get set' : 
    DriverType UseDriverType 'get set' : 
    Boolean UseDebugLayers 'get set' : 
    System.String Description 'get set' : 
    Int32 DeviceId 'get set' : 
    System.String DeviceName 'get set' : 
    Int32 VendorId 'get set' : 
    Boolean IsDefaultAdapter 'get set' : 
    IntPtr MonitorHandle 'get set' : 
    Int32 Revision 'get set' : 
    Int32 SubSystemId 'get set' : 
    Microsoft.Xna.Framework.Graphics.DisplayModeCollection SupportedDisplayModes 'get ' : 
    Microsoft.Xna.Framework.Graphics.DisplayMode CurrentDisplayMode 'get ' : 
    Boolean IsWideScreen 'get ' : 
  Methods:
    get_DefaultAdapter(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Adapters(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseReferenceDevice(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseReferenceDevice(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseDriverType(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseDriverType(DriverType): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseDebugLayers(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseDebugLayers(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceId(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceName(): PrivateScope, Public, HideBySig, SpecialName
    get_VendorId(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaultAdapter(): PrivateScope, Public, HideBySig, SpecialName
    get_MonitorHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_Revision(): PrivateScope, Public, HideBySig, SpecialName
    get_SubSystemId(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedDisplayModes(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentDisplayMode(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWideScreen(): PrivateScope, Public, HideBySig, SpecialName
    QueryRenderTargetFormat(GraphicsProfile, SurfaceFormat, DepthFormat, Int32, SurfaceFormat&(Out), DepthFormat&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    IsProfileSupported(GraphicsProfile): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.GraphicsAdapter+DriverType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DriverType Hardware = 0 : Public, Static, Literal, HasDefault
    DriverType Reference = 1 : Public, Static, Literal, HasDefault
    DriverType FastSoftware = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.GraphicsCapabilities: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SupportsNonPowerOfTwo 'get set' : 
    Boolean SupportsTextureFilterAnisotropic 'get set' : 
    Boolean SupportsDepth24 'get set' : 
    Boolean SupportsPackedDepthStencil 'get set' : 
    Boolean SupportsDepthNonLinear 'get set' : 
    Boolean SupportsDxt1 'get set' : 
    Boolean SupportsS3tc 'get set' : 
    Boolean SupportsPvrtc 'get set' : 
    Boolean SupportsEtc1 'get set' : 
    Boolean SupportsAtitc 'get set' : 
    Boolean SupportsTextureMaxLevel 'get set' : 
    Boolean SupportsSRgb 'get set' : 
    Boolean SupportsTextureArrays 'get set' : 
    Boolean SupportsDepthClamp 'get set' : 
    Boolean SupportsVertexTextures 'get set' : 
    Boolean SupportsFloatTextures 'get set' : 
    Boolean SupportsHalfFloatTextures 'get set' : 
    Boolean SupportsNormalized 'get set' : 
    Int32 MaxTextureAnisotropy 'get set' : 
    Int32 MaxMultiSampleCount 'get ' : 
    Boolean SupportsInstancing 'get set' : 
  Methods:
    Initialize(GraphicsDevice): PrivateScope, Assembly, HideBySig
    get_SupportsNonPowerOfTwo(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsTextureFilterAnisotropic(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsDepth24(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsPackedDepthStencil(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsDepthNonLinear(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsDxt1(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsS3tc(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsPvrtc(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsEtc1(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsAtitc(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsTextureMaxLevel(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsSRgb(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsTextureArrays(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsDepthClamp(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsVertexTextures(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsFloatTextures(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsHalfFloatTextures(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsNormalized(): PrivateScope, Assembly, HideBySig, SpecialName
    get_MaxTextureAnisotropy(): PrivateScope, Assembly, HideBySig, SpecialName
    get_MaxMultiSampleCount(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SupportsInstancing(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.GraphicsDebug: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    TryDequeueMessage(GraphicsDebugMessage&(Out)): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get set' : 
    System.String Severity 'get set' : 
    Int32 Id   'get set' : 
    System.String IdName 'get set' : 
    System.String Category 'get set' : 
  Methods:
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
    get_Severity(): PrivateScope, Public, HideBySig, SpecialName
    set_Severity(String): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IdName(): PrivateScope, Public, HideBySig, SpecialName
    set_IdName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.GraphicsDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.GraphicsDeviceInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsAdapter, Microsoft.Xna.Framework.Graphics.GraphicsProfile, Microsoft.Xna.Framework.Graphics.PresentationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Collections.Generic.Dictionary`2[System.Int32,Microsoft.Xna.Framework.Graphics.Effect] EffectCache : Assembly
    Int32 MaxTextureSlots : Assembly
    Int32 MaxVertexTextureSlots : Assembly
    Microsoft.Xna.Framework.Graphics.GraphicsMetrics _graphicsMetrics : Assembly
    SharpDX.Direct3D11.Device _d3dDevice : Assembly
    SharpDX.Direct3D11.DeviceContext _d3dContext : Assembly
    SharpDX.Direct3D11.RenderTargetView _renderTargetView : Assembly
    SharpDX.Direct3D11.DepthStencilView _depthStencilView : Assembly
  Properties:
    Microsoft.Xna.Framework.Graphics.GraphicsCapabilities GraphicsCapabilities 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureCollection VertexTextures 'get set' : 
    Microsoft.Xna.Framework.Graphics.SamplerStateCollection VertexSamplerStates 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureCollection Textures 'get set' : 
    Microsoft.Xna.Framework.Graphics.SamplerStateCollection SamplerStates 'get set' : 
    Boolean IsDisposed 'get ' : 
    Boolean IsContentLost 'get ' : 
    Boolean IsRenderTargetBound 'get ' : 
    Microsoft.Xna.Framework.Graphics.DepthFormat ActiveDepthFormat 'get ' : 
    Microsoft.Xna.Framework.Graphics.GraphicsAdapter Adapter 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsMetrics Metrics 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsDebug GraphicsDebug 'get set' : 
    Microsoft.Xna.Framework.Graphics.RasterizerState RasterizerState 'get set' : 
    Microsoft.Xna.Framework.Color BlendFactor 'get set' : 
    Microsoft.Xna.Framework.Graphics.BlendState BlendState 'get set' : 
    Microsoft.Xna.Framework.Graphics.DepthStencilState DepthStencilState 'get set' : 
    Microsoft.Xna.Framework.Graphics.DisplayMode DisplayMode 'get ' : 
    Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus GraphicsDeviceStatus 'get ' : 
    Microsoft.Xna.Framework.Graphics.PresentationParameters PresentationParameters 'get set' : 
    Microsoft.Xna.Framework.Graphics.Viewport Viewport 'get set' : 
    Microsoft.Xna.Framework.Graphics.GraphicsProfile GraphicsProfile 'get ' : 
    Microsoft.Xna.Framework.Rectangle ScissorRectangle 'get set' : 
    Int32 RenderTargetCount 'get ' : 
    Microsoft.Xna.Framework.Graphics.IndexBuffer Indices 'get set' : 
    Microsoft.Xna.Framework.Graphics.Shader VertexShader 'get set' : 
    Microsoft.Xna.Framework.Graphics.Shader PixelShader 'get set' : 
    Boolean ResourcesLost 'get set' : 
    System.Object Handle 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] DeviceLost: 
    System.EventHandler`1[System.EventArgs] DeviceReset: 
    System.EventHandler`1[System.EventArgs] DeviceResetting: 
    System.EventHandler`1[Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs] ResourceCreated: 
    System.EventHandler`1[Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs] ResourceDestroyed: 
    System.EventHandler`1[System.EventArgs] Disposing: 
    System.EventHandler`1[Microsoft.Xna.Framework.Graphics.PresentationEventArgs] PresentationChanged: 
  Methods:
    get_VertexShader(): PrivateScope, Assembly, HideBySig, SpecialName
    set_VertexShader(Shader): PrivateScope, Assembly, HideBySig, SpecialName
    get_PixelShader(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PixelShader(Shader): PrivateScope, Assembly, HideBySig, SpecialName
    SetConstantBuffer(ShaderStage, Int32, ConstantBuffer): PrivateScope, Assembly, HideBySig
    get_ResourcesLost(): PrivateScope, Public, HideBySig, SpecialName
    set_ResourcesLost(Boolean): PrivateScope, Public, HideBySig, SpecialName
    DrawIndexedPrimitives(PrimitiveType, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig (Obsolete)
    DrawIndexedPrimitives(PrimitiveType, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    DrawUserPrimitives(PrimitiveType, T[], Int32, Int32): PrivateScope, Public, HideBySig
    DrawUserPrimitives(PrimitiveType, T[], Int32, Int32, VertexDeclaration): PrivateScope, Public, HideBySig
    DrawPrimitives(PrimitiveType, Int32, Int32): PrivateScope, Public, HideBySig
    DrawUserIndexedPrimitives(PrimitiveType, T[], Int32, Int32, Int16[], Int32, Int32): PrivateScope, Public, HideBySig
    DrawUserIndexedPrimitives(PrimitiveType, T[], Int32, Int32, Int16[], Int32, Int32, VertexDeclaration): PrivateScope, Public, HideBySig
    DrawUserIndexedPrimitives(PrimitiveType, T[], Int32, Int32, Int32[], Int32, Int32): PrivateScope, Public, HideBySig
    DrawUserIndexedPrimitives(PrimitiveType, T[], Int32, Int32, Int32[], Int32, Int32, VertexDeclaration): PrivateScope, Public, HideBySig
    DrawInstancedPrimitives(PrimitiveType, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig (Obsolete)
    DrawInstancedPrimitives(PrimitiveType, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetBackBufferData(T[]): PrivateScope, Public, HideBySig
    GetBackBufferData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetBackBufferData(Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetDefaultTitleSafeArea(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetTitleSafeArea(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    SetHardwareFullscreen(): PrivateScope, Assembly, HideBySig
    ClearHardwareFullscreen(): PrivateScope, Assembly, HideBySig
    ResizeTargets(): PrivateScope, Assembly, HideBySig
    GetModeSwitchedSize(Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    GetDisplayResolution(Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    CreateSizeDependentResources(): PrivateScope, Assembly, HideBySig
    RefreshAdapter(): PrivateScope, Assembly, HideBySig
    OnPresentationChanged(): PrivateScope, Assembly, HideBySig
    GetSupportedSampleDescription(Format, Int32): PrivateScope, Assembly, HideBySig
    SetRenderTarget(RenderTarget2D, Int32): PrivateScope, Public, HideBySig
    SetRenderTarget(RenderTarget3D, Int32): PrivateScope, Public, HideBySig
    PlatformResolveRenderTargets(): PrivateScope, Assembly, HideBySig
    PlatformBeginApplyState(): PrivateScope, Assembly, HideBySig
    PlatformApplyState(Boolean): PrivateScope, Assembly, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    get_GraphicsCapabilities(): PrivateScope, Assembly, HideBySig, SpecialName
    get_VertexTextures(): PrivateScope, Public, HideBySig, SpecialName
    get_VertexSamplerStates(): PrivateScope, Public, HideBySig, SpecialName
    get_Textures(): PrivateScope, Public, HideBySig, SpecialName
    get_SamplerStates(): PrivateScope, Public, HideBySig, SpecialName
    add_DeviceLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DeviceLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_DeviceReset(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DeviceReset(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_DeviceResetting(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DeviceResetting(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ResourceCreated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ResourceCreated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ResourceDestroyed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ResourceDestroyed(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposing(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_PresentationChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_PresentationChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRenderTargetBound(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ActiveDepthFormat(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Adapter(): PrivateScope, Public, HideBySig, SpecialName
    get_Metrics(): PrivateScope, Public, HideBySig, SpecialName
    set_Metrics(GraphicsMetrics): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsDebug(): PrivateScope, Public, HideBySig, SpecialName
    set_GraphicsDebug(GraphicsDebug): PrivateScope, Public, HideBySig, SpecialName
    GetClampedMultisampleCount(Int32): PrivateScope, Assembly, HideBySig
    Initialize(): PrivateScope, Assembly, HideBySig
    get_RasterizerState(): PrivateScope, Public, HideBySig, SpecialName
    set_RasterizerState(RasterizerState): PrivateScope, Public, HideBySig, SpecialName
    get_BlendFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendFactor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BlendState(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendState(BlendState): PrivateScope, Public, HideBySig, SpecialName
    get_DepthStencilState(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthStencilState(DepthStencilState): PrivateScope, Public, HideBySig, SpecialName
    ApplyState(Boolean): PrivateScope, Assembly, HideBySig
    Clear(Color): PrivateScope, Public, HideBySig
    Clear(ClearOptions, Color, Single, Int32): PrivateScope, Public, HideBySig
    Clear(ClearOptions, Vector4, Single, Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddResourceReference(WeakReference): PrivateScope, Assembly, HideBySig
    RemoveResourceReference(WeakReference): PrivateScope, Assembly, HideBySig
    Present(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Reset(PresentationParameters): PrivateScope, Public, HideBySig
    OnDeviceResetting(): PrivateScope, Assembly, HideBySig
    OnDeviceReset(): PrivateScope, Assembly, HideBySig
    get_DisplayMode(): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsDeviceStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_PresentationParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Viewport(): PrivateScope, Public, HideBySig, SpecialName
    set_Viewport(Viewport): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_ScissorRectangle(): PrivateScope, Public, HideBySig, SpecialName
    set_ScissorRectangle(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTargetCount(): PrivateScope, Public, HideBySig, SpecialName
    SetRenderTarget(RenderTarget2D): PrivateScope, Public, HideBySig
    SetRenderTarget(RenderTargetCube, CubeMapFace): PrivateScope, Public, HideBySig
    SetRenderTargets(RenderTargetBinding[]): PrivateScope, Public, HideBySig
    ApplyRenderTargets(RenderTargetBinding[]): PrivateScope, Assembly, HideBySig
    GetRenderTargets(): PrivateScope, Public, HideBySig
    GetRenderTargets(RenderTargetBinding[]): PrivateScope, Public, HideBySig
    SetVertexBuffer(VertexBuffer): PrivateScope, Public, HideBySig
    SetVertexBuffer(VertexBuffer, Int32): PrivateScope, Public, HideBySig
    SetVertexBuffers(VertexBufferBinding[]): PrivateScope, Public, HideBySig
    set_Indices(IndexBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_Indices(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus Normal = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus Lost = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus NotReset = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.GraphicsExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetSyncInterval(PresentInterval): PrivateScope, Public, Static, HideBySig
    IsCompressedFormat(SurfaceFormat): PrivateScope, Public, Static, HideBySig
    GetSize(SurfaceFormat): PrivateScope, Public, Static, HideBySig
    GetSize(VertexElementFormat): PrivateScope, Public, Static, HideBySig
    GetBlockSize(SurfaceFormat, Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Graphics.MonoGameGLException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Xna.Framework.Graphics.GraphicsProfile: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.GraphicsProfile Reach = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.GraphicsProfile HiDef = 1 : Public, Static, Literal, HasDefault
Interface MonoGame.OpenGL.IGraphicsContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 SwapInterval 'get set' : 
    Boolean IsDisposed 'get ' : 
    Boolean IsCurrent 'get ' : 
  Methods:
    get_SwapInterval(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SwapInterval(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsDisposed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MakeCurrent(IWindowInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SwapBuffers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsCurrent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Xna.Framework.Graphics.IRenderTarget: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage RenderTargetUsage 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderTargetUsage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetRenderTargetView(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDepthStencilView(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface MonoGame.OpenGL.IWindowInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr Handle 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Xna.Framework.Graphics.ModelBoneCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Graphics.ModelBone]
    Void .ctor(System.Collections.Generic.IList`1[Microsoft.Xna.Framework.Graphics.ModelBone]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.ModelBone Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(String, ModelBone&(Out)): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.ModelBoneCollection+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Graphics.ModelBoneCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Microsoft.Xna.Framework.Graphics.ModelBone]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Microsoft.Xna.Framework.Graphics.ModelBone Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.ModelBone: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Matrix transform : Assembly
  Properties:
    System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.ModelMesh] Meshes 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelBoneCollection Children 'get set' : 
    Int32 Index 'get set' : 
    System.String Name 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelBone Parent 'get set' : 
    Microsoft.Xna.Framework.Matrix Transform 'get set' : 
    Microsoft.Xna.Framework.Matrix ModelTransform 'get set' : 
  Methods:
    get_Meshes(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(ModelBone): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    set_Transform(Matrix): PrivateScope, Public, HideBySig, SpecialName
    get_ModelTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_ModelTransform(Matrix): PrivateScope, Public, HideBySig, SpecialName
    AddMesh(ModelMesh): PrivateScope, Public, HideBySig
    AddChild(ModelBone): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.Model: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.ModelBone], System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.ModelMesh]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.ModelBoneCollection Bones 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelMeshCollection Meshes 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelBone Root 'get set' : 
    System.Object Tag 'get set' : 
  Methods:
    get_Bones(): PrivateScope, Public, HideBySig, SpecialName
    get_Meshes(): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    set_Root(ModelBone): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Public, HideBySig, SpecialName
    BuildHierarchy(): PrivateScope, Assembly, HideBySig
    Draw(Matrix, Matrix, Matrix): PrivateScope, Public, HideBySig
    CopyAbsoluteBoneTransformsTo(Matrix[]): PrivateScope, Public, HideBySig
    CopyBoneTransformsFrom(Matrix[]): PrivateScope, Public, HideBySig
    CopyBoneTransformsTo(Matrix[]): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.ModelEffectCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Graphics.Effect]
    Void .ctor(System.Collections.Generic.IList`1[Microsoft.Xna.Framework.Graphics.Effect]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(Effect): PrivateScope, Assembly, HideBySig
    Remove(Effect): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.ModelEffectCollection+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.Effect]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Microsoft.Xna.Framework.Graphics.Effect]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Microsoft.Xna.Framework.Graphics.Effect Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.ModelMeshCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Graphics.ModelMesh]
    Void .ctor(System.Collections.Generic.IList`1[Microsoft.Xna.Framework.Graphics.ModelMesh]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.ModelMesh Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(String, ModelMesh&(Out)): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.ModelMeshCollection+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Graphics.ModelMeshCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Microsoft.Xna.Framework.Graphics.ModelMesh]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Microsoft.Xna.Framework.Graphics.ModelMesh Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.ModelMesh: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Collections.Generic.List`1[Microsoft.Xna.Framework.Graphics.ModelMeshPart]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.BoundingSphere BoundingSphere 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelEffectCollection Effects 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection MeshParts 'get set' : 
    System.String Name 'get set' : 
    Microsoft.Xna.Framework.Graphics.ModelBone ParentBone 'get set' : 
    System.Object Tag 'get set' : 
  Methods:
    get_BoundingSphere(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundingSphere(BoundingSphere): PrivateScope, Public, HideBySig, SpecialName
    get_Effects(): PrivateScope, Public, HideBySig, SpecialName
    set_Effects(ModelEffectCollection): PrivateScope, Assembly, HideBySig, SpecialName
    get_MeshParts(): PrivateScope, Public, HideBySig, SpecialName
    set_MeshParts(ModelMeshPartCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ParentBone(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentBone(ModelBone): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Public, HideBySig, SpecialName
    Draw(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Xna.Framework.Graphics.ModelMeshPart]
    Void .ctor(System.Collections.Generic.IList`1[Microsoft.Xna.Framework.Graphics.ModelMeshPart]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Graphics.ModelMeshPart: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.ModelMesh parent : Assembly
  Properties:
    Microsoft.Xna.Framework.Graphics.Effect Effect 'get set' : 
    Microsoft.Xna.Framework.Graphics.IndexBuffer IndexBuffer 'get set' : 
    Int32 NumVertices 'get set' : 
    Int32 PrimitiveCount 'get set' : 
    Int32 StartIndex 'get set' : 
    System.Object Tag 'get set' : 
    Microsoft.Xna.Framework.Graphics.VertexBuffer VertexBuffer 'get set' : 
    Int32 VertexOffset 'get set' : 
    Int32 VertexBufferIndex 'get set' : 
    Int32 IndexBufferIndex 'get set' : 
    Int32 EffectIndex 'get set' : 
  Methods:
    get_Effect(): PrivateScope, Public, HideBySig, SpecialName
    set_Effect(Effect): PrivateScope, Public, HideBySig, SpecialName
    get_IndexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexBuffer(IndexBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_NumVertices(): PrivateScope, Public, HideBySig, SpecialName
    set_NumVertices(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PrimitiveCount(): PrivateScope, Public, HideBySig, SpecialName
    set_PrimitiveCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_StartIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Public, HideBySig, SpecialName
    get_VertexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexBuffer(VertexBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_VertexOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VertexBufferIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_VertexBufferIndex(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_IndexBufferIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IndexBufferIndex(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EffectIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EffectIndex(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Xna.Framework.Graphics.OcclusionQuery: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsComplete 'get ' : 
    Int32 PixelCount 'get ' : 
  Methods:
    get_IsComplete(): PrivateScope, Public, HideBySig, SpecialName
    get_PixelCount(): PrivateScope, Public, HideBySig, SpecialName
    Begin(): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
Interface Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    PackFromVector4(Vector4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToVector4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[TPacked]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TPacked
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  Properties:
    TPacked PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PackedValue(TPacked): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.Byte]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Alpha8]
  Properties:
    Byte PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToAlpha(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Alpha8): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Alpha8, Alpha8): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Alpha8, Alpha8): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt16]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565]
  Properties:
    UInt16 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector3(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Bgr565): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Bgr565, Bgr565): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Bgr565, Bgr565): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt16]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444]
  Properties:
    UInt16 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Bgra4444): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Bgra4444, Bgra4444): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Bgra4444, Bgra4444): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt16]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Bgra5551]
  Properties:
    UInt16 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Bgra5551): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Bgra5551, Bgra5551): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Bgra5551, Bgra5551): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Byte4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Byte4]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    op_Inequality(Byte4, Byte4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Byte4, Byte4): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Byte4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt16]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.HalfSingle]
  Properties:
    UInt16 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToSingle(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HalfSingle): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(HalfSingle, HalfSingle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HalfSingle, HalfSingle): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.PackedVector.HalfTypeHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Convert(Single): PrivateScope, Assembly, Static, HideBySig
    Convert(Int32): PrivateScope, Assembly, Static, HideBySig
    Convert(UInt16): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector2]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    ToVector2(): PrivateScope, Public, HideBySig
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HalfVector2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(HalfVector2, HalfVector2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HalfVector2, HalfVector2): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt64]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4]
  Properties:
    UInt64 PackedValue 'get set' : 
  Methods:
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HalfVector4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(HalfVector4, HalfVector4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HalfVector4, HalfVector4): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt16]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte2]
  Properties:
    UInt16 PackedValue 'get set' : 
  Methods:
    op_Inequality(NormalizedByte2, NormalizedByte2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NormalizedByte2, NormalizedByte2): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NormalizedByte2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector2(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedByte4]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    op_Inequality(NormalizedByte4, NormalizedByte4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NormalizedByte4, NormalizedByte4): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NormalizedByte4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort2]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    op_Inequality(NormalizedShort2, NormalizedShort2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NormalizedShort2, NormalizedShort2): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NormalizedShort2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector2(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt64]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4]
  Properties:
    UInt64 PackedValue 'get set' : 
  Methods:
    op_Inequality(NormalizedShort4, NormalizedShort4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NormalizedShort4, NormalizedShort4): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(NormalizedShort4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Rg32: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Rg32]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector2(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rg32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Rg32, Rg32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Rg32, Rg32): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt64]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Rgba64]
  Properties:
    UInt64 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rgba64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Rgba64, Rgba64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Rgba64, Rgba64): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Rgba1010102]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rgba1010102): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Rgba1010102, Rgba1010102): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Rgba1010102, Rgba1010102): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Short2: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt32]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Short2]
  Properties:
    UInt32 PackedValue 'get set' : 
  Methods:
    op_Inequality(Short2, Short2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Short2, Short2): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Short2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector2(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.PackedVector.Short4: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1[System.UInt64]
    Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.PackedVector.Short4]
  Properties:
    UInt64 PackedValue 'get set' : 
  Methods:
    op_Inequality(Short4, Short4): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Short4, Short4): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PackedValue(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PackedValue(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Short4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToVector4(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Graphics.PresentationEventArgs: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Xna.Framework.Graphics.PresentationParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.PresentationParameters PresentationParameters 'get set' : 
  Methods:
    get_PresentationParameters(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.PresentationParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DefaultPresentRate = 60 : Public, Static, Literal, HasDefault
  Properties:
    Microsoft.Xna.Framework.Graphics.SurfaceFormat BackBufferFormat 'get set' : 
    Int32 BackBufferHeight 'get set' : 
    Int32 BackBufferWidth 'get set' : 
    Microsoft.Xna.Framework.Rectangle Bounds 'get ' : 
    IntPtr DeviceWindowHandle 'get set' : 
    Microsoft.Xna.Framework.Graphics.DepthFormat DepthStencilFormat 'get set' : 
    Boolean IsFullScreen 'get set' : 
    Boolean HardwareModeSwitch 'get set' : 
    Int32 MultiSampleCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.PresentInterval PresentationInterval 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation DisplayOrientation 'get set' : 
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage RenderTargetUsage 'get set' : 
  Methods:
    get_BackBufferFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_BackBufferFormat(SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName
    get_BackBufferHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BackBufferHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BackBufferWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BackBufferWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_DepthStencilFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthStencilFormat(DepthFormat): PrivateScope, Public, HideBySig, SpecialName
    get_IsFullScreen(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFullScreen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareModeSwitch(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareModeSwitch(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiSampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PresentationInterval(): PrivateScope, Public, HideBySig, SpecialName
    set_PresentationInterval(PresentInterval): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayOrientation(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayOrientation(DisplayOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTargetUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_RenderTargetUsage(RenderTargetUsage): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Graphics.PresentInterval: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.PresentInterval Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PresentInterval One = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PresentInterval Two = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PresentInterval Immediate = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.Texture: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
  Fields:
    Microsoft.Xna.Framework.Graphics.SurfaceFormat _format : Assembly
    Int32 _levelCount : Assembly
    SharpDX.Direct3D11.Resource _texture : Assembly
  Properties:
    Int32 SortingKey 'get ' : 
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Format 'get ' : 
    Int32 LevelCount 'get ' : 
  Methods:
    get_SortingKey(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelCount(): PrivateScope, Public, HideBySig, SpecialName
    CalculateMipLevels(Int32, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    GetSizeForLevel(Int32, Int32, Int32, Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetSizeForLevel(Int32, Int32, Int32, Int32, Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetPitch(Int32): PrivateScope, Assembly, HideBySig
    GetSharedHandle(): PrivateScope, Public, HideBySig
    CreateTexture(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetTexture(): PrivateScope, Assembly, HideBySig
    GetShaderResourceView(): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Graphics.Texture2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Texture
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, SurfaceType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 width : Assembly
    Int32 height : Assembly
    Int32 ArraySize : Assembly
  Properties:
    Single TexelWidth 'get set' : 
    Single TexelHeight 'get set' : 
    Microsoft.Xna.Framework.Rectangle Bounds 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_TexelWidth(): PrivateScope, Assembly, HideBySig, SpecialName
    get_TexelHeight(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetData(Int32, Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[]): PrivateScope, Public, HideBySig
    GetData(Int32, Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[]): PrivateScope, Public, HideBySig
    FromStream(GraphicsDevice, Stream): PrivateScope, Public, Static, HideBySig
    SaveAsJpeg(Stream, Int32, Int32): PrivateScope, Public, HideBySig
    SaveAsPng(Stream, Int32, Int32): PrivateScope, Public, HideBySig
    Reload(Stream): PrivateScope, Public, HideBySig
    CreateTexture(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetTextureSampleDescription(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.Texture2D+SurfaceType: AutoLayout, AnsiClass, Class, VisibilityMask, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SurfaceType Texture = 0 : Public, Static, Literal, HasDefault
    SurfaceType RenderTarget = 1 : Public, Static, Literal, HasDefault
    SurfaceType SwapChainRenderTarget = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.RenderTarget2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Texture2D
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IRenderTarget
  Fields:
    SharpDX.Direct3D11.RenderTargetView[] _renderTargetViews : Assembly
    SharpDX.Direct3D11.DepthStencilView _depthStencilView : Assembly
  Properties:
    Microsoft.Xna.Framework.Graphics.DepthFormat DepthStencilFormat 'get set' : 
    Int32 MultiSampleCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage RenderTargetUsage 'get set' : 
    Boolean IsContentLost 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] ContentLost: 
  Methods:
    get_DepthStencilFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTargetUsage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    add_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    ResolveSubresource(): PrivateScope, Assembly, HideBySig
    CreateTexture(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Xna.Framework.Graphics.Texture3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Texture
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Int32 Depth 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    SetData(T[]): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[]): PrivateScope, Public, HideBySig
    CreateTexture(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Xna.Framework.Graphics.RenderTarget3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Texture3D
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IRenderTarget
  Properties:
    Microsoft.Xna.Framework.Graphics.DepthFormat DepthStencilFormat 'get set' : 
    Int32 MultiSampleCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage RenderTargetUsage 'get set' : 
    Boolean IsContentLost 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] ContentLost: 
  Methods:
    get_DepthStencilFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTargetUsage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    add_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.RenderTargetBinding: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Graphics.RenderTarget2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.RenderTargetCube, Microsoft.Xna.Framework.Graphics.CubeMapFace): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.RenderTarget2D, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.RenderTarget3D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.RenderTarget3D, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.Texture RenderTarget 'get ' : 
    Int32 ArraySlice 'get ' : 
    Microsoft.Xna.Framework.Graphics.DepthFormat DepthFormat 'get ' : 
  Methods:
    get_RenderTarget(): PrivateScope, Public, HideBySig, SpecialName
    get_ArraySlice(): PrivateScope, Public, HideBySig, SpecialName
    get_DepthFormat(): PrivateScope, Assembly, HideBySig, SpecialName
    op_Implicit(RenderTarget2D): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(RenderTarget3D): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.TextureCube: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.Texture
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 size : Assembly
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    GetData(CubeMapFace, T[]): PrivateScope, Public, HideBySig
    GetData(CubeMapFace, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(CubeMapFace, Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(CubeMapFace, T[]): PrivateScope, Public, HideBySig
    SetData(CubeMapFace, T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(CubeMapFace, Int32, Nullable`1, T[], Int32, Int32): PrivateScope, Public, HideBySig
    CreateTexture(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Xna.Framework.Graphics.RenderTargetCube: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.TextureCube
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IRenderTarget
  Properties:
    Microsoft.Xna.Framework.Graphics.DepthFormat DepthStencilFormat 'get set' : 
    Int32 MultiSampleCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage RenderTargetUsage 'get set' : 
    Boolean IsContentLost 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] ContentLost: 
  Methods:
    get_DepthStencilFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTargetUsage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    add_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ContentLost(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    GetRenderTargetView(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDepthStencilView(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.RenderTargetUsage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage DiscardContents = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage PreserveContents = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.RenderTargetUsage PlatformContents = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Resource 'get set' : 
  Methods:
    get_Resource(): PrivateScope, Public, HideBySig, SpecialName
    set_Resource(Object): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.Object Tag 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(Object): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.SamplerStateCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.SamplerState Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, SamplerState): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Assembly, HideBySig
    Dirty(): PrivateScope, Assembly, HideBySig
    PlatformSetSamplers(GraphicsDevice): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.SetDataOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.SetDataOptions None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SetDataOptions Discard = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SetDataOptions NoOverwrite = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.ConstantBufferCollection: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.ShaderStage, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.ConstantBuffer Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, ConstantBuffer): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Assembly, HideBySig
    SetConstantBuffers(GraphicsDevice): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Graphics.ConstantBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.ConstantBuffer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Int32[], Int32[], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clear(): PrivateScope, Assembly, HideBySig
    Update(EffectParameterCollection): PrivateScope, Public, HideBySig
    PlatformApply(GraphicsDevice, ShaderStage, Int32): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.SamplerType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.SamplerType Sampler2D = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SamplerType SamplerCube = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SamplerType SamplerVolume = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SamplerType Sampler1D = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.SamplerInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Xna.Framework.Graphics.SamplerType type : Public
    Int32 textureSlot : Public
    Int32 samplerSlot : Public
    System.String name : Public
    Microsoft.Xna.Framework.Graphics.SamplerState state : Public
    Int32 parameter : Public
Struct Microsoft.Xna.Framework.Graphics.VertexAttribute: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Xna.Framework.Graphics.VertexElementUsage usage : Public
    Int32 index : Public
    System.String name : Public
    Int32 location : Public
Class Microsoft.Xna.Framework.Graphics.Shader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.IO.BinaryReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Profile 'get ' : 
    Int32 HashKey 'get set' : 
    Microsoft.Xna.Framework.Graphics.SamplerInfo[] Samplers 'get set' : 
    Int32[] CBuffers 'get set' : 
    Microsoft.Xna.Framework.Graphics.ShaderStage Stage 'get set' : 
    Microsoft.Xna.Framework.Graphics.VertexAttribute[] Attributes 'get set' : 
    Byte[] Bytecode 'get ' : 
    Microsoft.Xna.Framework.Graphics.InputLayoutCache InputLayouts 'get ' : 
    SharpDX.Direct3D11.VertexShader VertexShader 'get ' : 
    SharpDX.Direct3D11.PixelShader PixelShader 'get ' : 
  Methods:
    get_Profile(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HashKey(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Samplers(): PrivateScope, Public, HideBySig, SpecialName
    get_CBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_Stage(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_Bytecode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InputLayouts(): PrivateScope, Assembly, HideBySig, SpecialName
    get_VertexShader(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PixelShader(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.ShaderStage: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.ShaderStage Vertex = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.ShaderStage Pixel = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.SpriteBatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean NeedsHalfPixelOffset : Assembly, Static
  Methods:
    Begin(SpriteSortMode(Optional, HasDefault), BlendState(Optional, HasDefault), SamplerState(Optional, HasDefault), DepthStencilState(Optional, HasDefault), RasterizerState(Optional, HasDefault), Effect(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    Draw(Texture2D, Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Single(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), SpriteEffects(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig (Obsolete)
    Draw(Texture2D, Vector2, Nullable`1, Color, Single, Vector2, Vector2, SpriteEffects, Single): PrivateScope, Public, HideBySig
    Draw(Texture2D, Vector2, Nullable`1, Color, Single, Vector2, Single, SpriteEffects, Single): PrivateScope, Public, HideBySig
    Draw(Texture2D, Rectangle, Nullable`1, Color, Single, Vector2, SpriteEffects, Single): PrivateScope, Public, HideBySig
    FlushIfNeeded(): PrivateScope, Assembly, HideBySig
    Draw(Texture2D, Vector2, Nullable`1, Color): PrivateScope, Public, HideBySig
    Draw(Texture2D, Rectangle, Nullable`1, Color): PrivateScope, Public, HideBySig
    Draw(Texture2D, Vector2, Color): PrivateScope, Public, HideBySig
    Draw(Texture2D, Rectangle, Color): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, String, Vector2, Color): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, String, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, String, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, StringBuilder, Vector2, Color): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, StringBuilder, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single): PrivateScope, Public, HideBySig
    DrawString(SpriteFont, StringBuilder, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.SpriteBatcher: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateBatchItem(): PrivateScope, Public, HideBySig
    DrawBatch(SpriteSortMode, Effect): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.SpriteBatchItem: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[Microsoft.Xna.Framework.Graphics.SpriteBatchItem]
  Fields:
    Microsoft.Xna.Framework.Graphics.Texture2D Texture : Public
    Single SortKey : Public
    Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture vertexTL : Public
    Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture vertexTR : Public
    Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture vertexBL : Public
    Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture vertexBR : Public
  Methods:
    Set(Single, Single, Single, Single, Single, Single, Single, Single, Color, Vector2, Vector2, Single): PrivateScope, Public, HideBySig
    Set(Single, Single, Single, Single, Color, Vector2, Vector2, Single): PrivateScope, Public, HideBySig
    CompareTo(SpriteBatchItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Graphics.SpriteEffects: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.SpriteEffects None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteEffects FlipHorizontally = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteEffects FlipVertically = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.SpriteFont: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.Texture2D, System.Collections.Generic.List`1[Microsoft.Xna.Framework.Rectangle], System.Collections.Generic.List`1[Microsoft.Xna.Framework.Rectangle], System.Collections.Generic.List`1[System.Char], Int32, Single, System.Collections.Generic.List`1[Microsoft.Xna.Framework.Vector3], System.Nullable`1[System.Char]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Glyph[] Glyphs 'get ' : 
    Microsoft.Xna.Framework.Graphics.Texture2D Texture 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Char] Characters 'get set' : 
    System.Nullable`1[System.Char] DefaultCharacter 'get set' : 
    Int32 LineSpacing 'get set' : 
    Single Spacing 'get set' : 
  Methods:
    get_Glyphs(): PrivateScope, Public, HideBySig, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    GetGlyphs(): PrivateScope, Public, HideBySig
    get_Characters(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCharacter(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpacing(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Single): PrivateScope, Public, HideBySig, SpecialName
    MeasureString(String): PrivateScope, Public, HideBySig
    MeasureString(StringBuilder): PrivateScope, Public, HideBySig
    MeasureString(CharacterSource&, Vector2&(Out)): PrivateScope, Assembly, HideBySig
    TryGetGlyphIndex(Char, Int32&(Out)): PrivateScope, Assembly, HideBySig
    GetGlyphIndexOrDefault(Char): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Graphics.SpriteFont+Errors: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String TextContainsUnresolvableCharacters = Text contains characters that cannot be resolved by this SpriteFont. : Public, Static, Literal, HasDefault
    System.String UnresolvableCharacter = Character cannot be resolved by this SpriteFont. : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.SpriteFont+CharacterSource: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Text.StringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Length : Public, InitOnly
  Properties:
    Char Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.SpriteFont+Glyph: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Char Character : Public
    Microsoft.Xna.Framework.Rectangle BoundsInTexture : Public
    Microsoft.Xna.Framework.Rectangle Cropping : Public
    Single LeftSideBearing : Public
    Single RightSideBearing : Public
    Single Width : Public
    Single WidthIncludingBearings : Public
    Glyph Empty : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.SpriteSortMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.SpriteSortMode Deferred = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteSortMode Immediate = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteSortMode Texture = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteSortMode BackToFront = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SpriteSortMode FrontToBack = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.Blend: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.Blend One = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend Zero = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend SourceColor = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend InverseSourceColor = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend SourceAlpha = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend InverseSourceAlpha = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend DestinationColor = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend InverseDestinationColor = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend DestinationAlpha = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend InverseDestinationAlpha = 9 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend BlendFactor = 10 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend InverseBlendFactor = 11 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.Blend SourceAlphaSaturation = 12 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.BlendFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.BlendFunction Add = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.BlendFunction Subtract = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.BlendFunction ReverseSubtract = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.BlendFunction Min = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.BlendFunction Max = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.BlendState: AutoLayout, AnsiClass, Class, Public
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.BlendState Additive : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.BlendState AlphaBlend : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.BlendState NonPremultiplied : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.BlendState Opaque : Public, Static, InitOnly
  Properties:
    Microsoft.Xna.Framework.Graphics.TargetBlendState Item [Int32] 'get ' : 
    Microsoft.Xna.Framework.Graphics.BlendFunction AlphaBlendFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend AlphaDestinationBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend AlphaSourceBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.BlendFunction ColorBlendFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend ColorDestinationBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend ColorSourceBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels ColorWriteChannels 'get set' : 
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels ColorWriteChannels1 'get set' : 
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels ColorWriteChannels2 'get set' : 
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels ColorWriteChannels3 'get set' : 
    Microsoft.Xna.Framework.Color BlendFactor 'get set' : 
    Int32 MultiSampleMask 'get set' : 
    Boolean IndependentBlendEnable 'get set' : 
  Methods:
    BindToGraphicsDevice(GraphicsDevice): PrivateScope, Assembly, HideBySig
    ThrowIfBound(): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaBlendFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaBlendFunction(BlendFunction): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaDestinationBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaDestinationBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaSourceBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaSourceBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorBlendFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorBlendFunction(BlendFunction): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDestinationBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDestinationBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorSourceBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorSourceBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorWriteChannels(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorWriteChannels(ColorWriteChannels): PrivateScope, Public, HideBySig, SpecialName
    get_ColorWriteChannels1(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorWriteChannels1(ColorWriteChannels): PrivateScope, Public, HideBySig, SpecialName
    get_ColorWriteChannels2(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorWriteChannels2(ColorWriteChannels): PrivateScope, Public, HideBySig, SpecialName
    get_ColorWriteChannels3(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorWriteChannels3(ColorWriteChannels): PrivateScope, Public, HideBySig, SpecialName
    get_BlendFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendFactor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleMask(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiSampleMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IndependentBlendEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_IndependentBlendEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Assembly, HideBySig
    GetDxState(GraphicsDevice): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.CompareFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.CompareFunction Always = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction Never = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction Less = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction LessEqual = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction Equal = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction GreaterEqual = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction Greater = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CompareFunction NotEqual = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.CullMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.CullMode None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CullMode CullClockwiseFace = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.CullMode CullCounterClockwiseFace = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.DepthFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.DepthFormat None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.DepthFormat Depth16 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.DepthFormat Depth24 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.DepthFormat Depth24Stencil8 = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.DepthStencilState: AutoLayout, AnsiClass, Class, Public
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.DepthStencilState Default : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.DepthStencilState DepthRead : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.DepthStencilState None : Public, Static, InitOnly
  Properties:
    Boolean DepthBufferEnable 'get set' : 
    Boolean DepthBufferWriteEnable 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation CounterClockwiseStencilDepthBufferFail 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation CounterClockwiseStencilFail 'get set' : 
    Microsoft.Xna.Framework.Graphics.CompareFunction CounterClockwiseStencilFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation CounterClockwiseStencilPass 'get set' : 
    Microsoft.Xna.Framework.Graphics.CompareFunction DepthBufferFunction 'get set' : 
    Int32 ReferenceStencil 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation StencilDepthBufferFail 'get set' : 
    Boolean StencilEnable 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation StencilFail 'get set' : 
    Microsoft.Xna.Framework.Graphics.CompareFunction StencilFunction 'get set' : 
    Int32 StencilMask 'get set' : 
    Microsoft.Xna.Framework.Graphics.StencilOperation StencilPass 'get set' : 
    Int32 StencilWriteMask 'get set' : 
    Boolean TwoSidedStencilMode 'get set' : 
  Methods:
    get_DepthBufferEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthBufferEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DepthBufferWriteEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthBufferWriteEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CounterClockwiseStencilDepthBufferFail(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterClockwiseStencilDepthBufferFail(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_CounterClockwiseStencilFail(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterClockwiseStencilFail(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_CounterClockwiseStencilFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterClockwiseStencilFunction(CompareFunction): PrivateScope, Public, HideBySig, SpecialName
    get_CounterClockwiseStencilPass(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterClockwiseStencilPass(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_DepthBufferFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthBufferFunction(CompareFunction): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceStencil(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceStencil(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StencilDepthBufferFail(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilDepthBufferFail(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_StencilEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_StencilFail(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilFail(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_StencilFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilFunction(CompareFunction): PrivateScope, Public, HideBySig, SpecialName
    get_StencilMask(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StencilPass(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilPass(StencilOperation): PrivateScope, Public, HideBySig, SpecialName
    get_StencilWriteMask(): PrivateScope, Public, HideBySig, SpecialName
    set_StencilWriteMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TwoSidedStencilMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TwoSidedStencilMode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    BindToGraphicsDevice(GraphicsDevice): PrivateScope, Assembly, HideBySig
    ThrowIfBound(): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
    PlatformApplyState(GraphicsDevice): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.FillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.FillMode Solid = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.FillMode WireFrame = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.RasterizerState: AutoLayout, AnsiClass, Class, Public
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.RasterizerState CullClockwise : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.RasterizerState CullCounterClockwise : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.RasterizerState CullNone : Public, Static, InitOnly
  Properties:
    Microsoft.Xna.Framework.Graphics.CullMode CullMode 'get set' : 
    Single DepthBias 'get set' : 
    Microsoft.Xna.Framework.Graphics.FillMode FillMode 'get set' : 
    Boolean MultiSampleAntiAlias 'get set' : 
    Boolean ScissorTestEnable 'get set' : 
    Single SlopeScaleDepthBias 'get set' : 
    Boolean DepthClipEnable 'get set' : 
  Methods:
    get_CullMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CullMode(CullMode): PrivateScope, Public, HideBySig, SpecialName
    get_DepthBias(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthBias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FillMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FillMode(FillMode): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSampleAntiAlias(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiSampleAntiAlias(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScissorTestEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_ScissorTestEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SlopeScaleDepthBias(): PrivateScope, Public, HideBySig, SpecialName
    set_SlopeScaleDepthBias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DepthClipEnable(): PrivateScope, Public, HideBySig, SpecialName
    set_DepthClipEnable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    BindToGraphicsDevice(GraphicsDevice): PrivateScope, Assembly, HideBySig
    ThrowIfBound(): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
    PlatformApplyState(GraphicsDevice): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Graphics.SamplerState: AutoLayout, AnsiClass, Class, Public
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.SamplerState AnisotropicClamp : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.SamplerState AnisotropicWrap : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.SamplerState LinearClamp : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.SamplerState LinearWrap : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.SamplerState PointClamp : Public, Static, InitOnly
    Microsoft.Xna.Framework.Graphics.SamplerState PointWrap : Public, Static, InitOnly
  Properties:
    Microsoft.Xna.Framework.Graphics.TextureAddressMode AddressU 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureAddressMode AddressV 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureAddressMode AddressW 'get set' : 
    Microsoft.Xna.Framework.Color BorderColor 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureFilter Filter 'get set' : 
    Int32 MaxAnisotropy 'get set' : 
    Int32 MaxMipLevel 'get set' : 
    Single MipMapLevelOfDetailBias 'get set' : 
    Microsoft.Xna.Framework.Graphics.CompareFunction ComparisonFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.TextureFilterMode FilterMode 'get set' : 
  Methods:
    get_AddressU(): PrivateScope, Public, HideBySig, SpecialName
    set_AddressU(TextureAddressMode): PrivateScope, Public, HideBySig, SpecialName
    get_AddressV(): PrivateScope, Public, HideBySig, SpecialName
    set_AddressV(TextureAddressMode): PrivateScope, Public, HideBySig, SpecialName
    get_AddressW(): PrivateScope, Public, HideBySig, SpecialName
    set_AddressW(TextureAddressMode): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    set_Filter(TextureFilter): PrivateScope, Public, HideBySig, SpecialName
    get_MaxAnisotropy(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxAnisotropy(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMipLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxMipLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MipMapLevelOfDetailBias(): PrivateScope, Public, HideBySig, SpecialName
    set_MipMapLevelOfDetailBias(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ComparisonFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_ComparisonFunction(CompareFunction): PrivateScope, Public, HideBySig, SpecialName
    get_FilterMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterMode(TextureFilterMode): PrivateScope, Public, HideBySig, SpecialName
    BindToGraphicsDevice(GraphicsDevice): PrivateScope, Assembly, HideBySig
    ThrowIfBound(): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
    GetState(GraphicsDevice): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.StencilOperation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.StencilOperation Keep = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation Zero = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation Replace = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation Increment = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation Decrement = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation IncrementSaturation = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation DecrementSaturation = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.StencilOperation Invert = 7 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.TargetBlendState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.BlendState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.BlendFunction AlphaBlendFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend AlphaDestinationBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend AlphaSourceBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.BlendFunction ColorBlendFunction 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend ColorDestinationBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.Blend ColorSourceBlend 'get set' : 
    Microsoft.Xna.Framework.Graphics.ColorWriteChannels ColorWriteChannels 'get set' : 
  Methods:
    Clone(BlendState): PrivateScope, Assembly, HideBySig
    get_AlphaBlendFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaBlendFunction(BlendFunction): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaDestinationBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaDestinationBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_AlphaSourceBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_AlphaSourceBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorBlendFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorBlendFunction(BlendFunction): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDestinationBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDestinationBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorSourceBlend(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorSourceBlend(Blend): PrivateScope, Public, HideBySig, SpecialName
    get_ColorWriteChannels(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorWriteChannels(ColorWriteChannels): PrivateScope, Public, HideBySig, SpecialName
    GetState(RenderTargetBlendDescription&): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.TextureAddressMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.TextureAddressMode Wrap = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureAddressMode Clamp = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureAddressMode Mirror = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureAddressMode Border = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.TextureFilter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.TextureFilter Linear = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter Point = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter Anisotropic = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter LinearMipPoint = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter PointMipLinear = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter MinLinearMagPointMipLinear = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter MinLinearMagPointMipPoint = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter MinPointMagLinearMipLinear = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilter MinPointMagLinearMipPoint = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.TextureFilterMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.TextureFilterMode Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.TextureFilterMode Comparison = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.SurfaceFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Color = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgr565 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgra5551 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgra4444 = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt1 = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt3 = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt5 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat NormalizedByte2 = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat NormalizedByte4 = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Rgba1010102 = 9 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Rg32 = 10 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Rgba64 = 11 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Alpha8 = 12 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Single = 13 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Vector2 = 14 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Vector4 = 15 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat HalfSingle = 16 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat HalfVector2 = 17 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat HalfVector4 = 18 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat HdrBlendable = 19 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgr32 = 20 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgra32 = 21 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat ColorSRgb = 30 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgr32SRgb = 31 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Bgra32SRgb = 32 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt1SRgb = 33 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt3SRgb = 34 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt5SRgb = 35 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbPvrtc2Bpp = 50 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbPvrtc4Bpp = 51 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbaPvrtc2Bpp = 52 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbaPvrtc4Bpp = 53 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbEtc1 = 60 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat Dxt1a = 70 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbaAtcExplicitAlpha = 80 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.SurfaceFormat RgbaAtcInterpolatedAlpha = 81 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.SwapChainRenderTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.RenderTarget2D
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, IntPtr, Int32, Int32, Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, Microsoft.Xna.Framework.Graphics.DepthFormat, Int32, Microsoft.Xna.Framework.Graphics.RenderTargetUsage, Microsoft.Xna.Framework.Graphics.PresentInterval): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Graphics.PresentInterval PresentInterval : Public
  Methods:
    Present(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.TextureCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.Texture Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Texture): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Assembly, HideBySig
    Dirty(): PrivateScope, Assembly, HideBySig
    SetTextures(GraphicsDevice): PrivateScope, Assembly, HideBySig
    ClearTargets(GraphicsDevice, RenderTargetBinding[]): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.BufferUsage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.BufferUsage None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.BufferUsage WriteOnly = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.IndexBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.IndexElementSize, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.BufferUsage BufferUsage 'get set' : 
    Int32 IndexCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.IndexElementSize IndexElementSize 'get set' : 
    SharpDX.Direct3D11.Buffer Buffer 'get ' : 
  Methods:
    get_BufferUsage(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexElementSize(): PrivateScope, Public, HideBySig, SpecialName
    GetData(Int32, T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[]): PrivateScope, Public, HideBySig
    SetData(Int32, T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[]): PrivateScope, Public, HideBySig
    get_Buffer(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.IndexBuffer
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.IndexElementSize, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UserOffset : Assembly
  Properties:
    Boolean IsContentLost 'get ' : 
  Methods:
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    SetData(Int32, T[], Int32, Int32, SetDataOptions): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32, SetDataOptions): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.VertexBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.VertexDeclaration, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 VertexCount 'get set' : 
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration 'get set' : 
    Microsoft.Xna.Framework.Graphics.BufferUsage BufferUsage 'get set' : 
    SharpDX.Direct3D11.Buffer Buffer 'get ' : 
  Methods:
    get_VertexCount(): PrivateScope, Public, HideBySig, SpecialName
    get_VertexDeclaration(): PrivateScope, Public, HideBySig, SpecialName
    get_BufferUsage(): PrivateScope, Public, HideBySig, SpecialName
    GetData(Int32, T[], Int32, Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    GetData(T[]): PrivateScope, Public, HideBySig
    SetData(Int32, T[], Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32): PrivateScope, Public, HideBySig
    SetData(T[]): PrivateScope, Public, HideBySig
    get_Buffer(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.DynamicVertexBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.VertexBuffer
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.VertexDeclaration, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, Int32, Microsoft.Xna.Framework.Graphics.BufferUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 UserOffset : Assembly
  Properties:
    Boolean IsContentLost 'get ' : 
  Methods:
    get_IsContentLost(): PrivateScope, Public, HideBySig, SpecialName
    SetData(Int32, T[], Int32, Int32, Int32, SetDataOptions): PrivateScope, Public, HideBySig
    SetData(T[], Int32, Int32, SetDataOptions): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.VertexInputLayout: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.VertexInputLayout]
  Properties:
    Int32 Count 'get set' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(VertexInputLayout): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexInputLayout, VertexInputLayout): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexInputLayout, VertexInputLayout): PrivateScope, Public, Static, HideBySig, SpecialName
    GetInputElements(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.ImmutableVertexInputLayout: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.VertexInputLayout
    Void .ctor(Microsoft.Xna.Framework.Graphics.VertexDeclaration[], Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.IndexElementSize: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.IndexElementSize SixteenBits = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.IndexElementSize ThirtyTwoBits = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Graphics.InputLayoutCache: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOrCreate(VertexBufferBindings): PrivateScope, Public, HideBySig
Interface Microsoft.Xna.Framework.Graphics.IVertexType: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration 'get ' : 
  Methods:
    get_VertexDeclaration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Microsoft.Xna.Framework.Graphics.PrimitiveType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.PrimitiveType TriangleList = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PrimitiveType TriangleStrip = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PrimitiveType LineList = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.PrimitiveType LineStrip = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.VertexBufferBinding: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Graphics.VertexBuffer, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.VertexBuffer VertexBuffer 'get ' : 
    Int32 VertexOffset 'get ' : 
    Int32 InstanceFrequency 'get ' : 
  Methods:
    get_VertexBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_VertexOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_InstanceFrequency(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.VertexBufferBindings: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Xna.Framework.Graphics.VertexInputLayout
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    Set(VertexBuffer, Int32): PrivateScope, Public, HideBySig
    Set(VertexBufferBinding[]): PrivateScope, Public, HideBySig
    Get(Int32): PrivateScope, Public, HideBySig
    Get(): PrivateScope, Public, HideBySig
    ToImmutable(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Graphics.VertexDeclarationCache`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T, System.ValueType, Microsoft.Xna.Framework.Graphics.IVertexType,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration 'get ' : 
  Methods:
    get_VertexDeclaration(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Graphics.VertexDeclaration: AutoLayout, AnsiClass, Class, Public
  :Microsoft.Xna.Framework.Graphics.GraphicsResource
    Void .ctor(Microsoft.Xna.Framework.Graphics.VertexElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Xna.Framework.Graphics.VertexElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.VertexDeclaration]
  Properties:
    Microsoft.Xna.Framework.Graphics.VertexElement[] InternalVertexElements 'get ' : 
    Int32 VertexStride 'get ' : 
  Methods:
    GetOrCreate(Int32, VertexElement[]): PrivateScope, Assembly, Static, HideBySig
    get_InternalVertexElements(): PrivateScope, Assembly, HideBySig, SpecialName
    FromType(Type): PrivateScope, Assembly, Static, HideBySig
    GetVertexElements(): PrivateScope, Public, HideBySig
    get_VertexStride(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(VertexDeclaration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexDeclaration, VertexDeclaration): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexDeclaration, VertexDeclaration): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Graphics.VertexElement: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Microsoft.Xna.Framework.Graphics.VertexElementFormat, Microsoft.Xna.Framework.Graphics.VertexElementUsage, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Graphics.VertexElement]
  Properties:
    Int32 Offset 'get set' : 
    Microsoft.Xna.Framework.Graphics.VertexElementFormat VertexElementFormat 'get set' : 
    Microsoft.Xna.Framework.Graphics.VertexElementUsage VertexElementUsage 'get set' : 
    Int32 UsageIndex 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VertexElementFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexElementFormat(VertexElementFormat): PrivateScope, Public, HideBySig, SpecialName
    get_VertexElementUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexElementUsage(VertexElementUsage): PrivateScope, Public, HideBySig, SpecialName
    get_UsageIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_UsageIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(VertexElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(VertexElement, VertexElement): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexElement, VertexElement): PrivateScope, Public, Static, HideBySig, SpecialName
    GetInputElement(Int32, Int32): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Graphics.VertexElementFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Single = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Vector2 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Vector3 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Vector4 = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Color = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Byte4 = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Short2 = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat Short4 = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat NormalizedShort2 = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat NormalizedShort4 = 9 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat HalfVector2 = 10 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementFormat HalfVector4 = 11 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.VertexElementUsage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Position = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Color = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage TextureCoordinate = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Normal = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Binormal = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Tangent = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage BlendIndices = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage BlendWeight = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Depth = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Fog = 9 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage PointSize = 10 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage Sample = 11 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Graphics.VertexElementUsage TessellateFactor = 12 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Graphics.VertexPosition: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IVertexType
  Fields:
    Microsoft.Xna.Framework.Vector3 Position : Public
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration : Public, Static, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexPosition, VertexPosition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexPosition, VertexPosition): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.VertexPositionColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IVertexType
  Fields:
    Microsoft.Xna.Framework.Vector3 Position : Public
    Microsoft.Xna.Framework.Color Color : Public
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration : Public, Static, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexPositionColor, VertexPositionColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexPositionColor, VertexPositionColor): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IVertexType
  Fields:
    Microsoft.Xna.Framework.Vector3 Position : Public
    Microsoft.Xna.Framework.Color Color : Public
    Microsoft.Xna.Framework.Vector2 TextureCoordinate : Public
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration : Public, Static, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexPositionColorTexture, VertexPositionColorTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexPositionColorTexture, VertexPositionColorTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IVertexType
  Fields:
    Microsoft.Xna.Framework.Vector3 Position : Public
    Microsoft.Xna.Framework.Vector3 Normal : Public
    Microsoft.Xna.Framework.Vector2 TextureCoordinate : Public
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration : Public, Static, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexPositionNormalTexture, VertexPositionNormalTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexPositionNormalTexture, VertexPositionNormalTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.VertexPositionTexture: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Xna.Framework.Graphics.IVertexType
  Fields:
    Microsoft.Xna.Framework.Vector3 Position : Public
    Microsoft.Xna.Framework.Vector2 TextureCoordinate : Public
    Microsoft.Xna.Framework.Graphics.VertexDeclaration VertexDeclaration : Public, Static, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(VertexPositionTexture, VertexPositionTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(VertexPositionTexture, VertexPositionTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Graphics.Viewport: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Height 'get set' : 
    Single MaxDepth 'get set' : 
    Single MinDepth 'get set' : 
    Int32 Width 'get set' : 
    Int32 Y    'get set' : 
    Int32 X    'get set' : 
    Single AspectRatio 'get ' : 
    Microsoft.Xna.Framework.Rectangle Bounds 'get set' : 
    Microsoft.Xna.Framework.Rectangle TitleSafeArea 'get ' : 
  Methods:
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDepth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AspectRatio(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    set_Bounds(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSafeArea(): PrivateScope, Public, HideBySig, SpecialName
    Project(Vector3, Matrix, Matrix, Matrix): PrivateScope, Public, HideBySig
    Unproject(Vector3, Matrix, Matrix, Matrix): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.Buttons: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.Buttons DPadUp = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons DPadDown = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons DPadLeft = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons DPadRight = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons Start = 16 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons Back = 32 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftStick = 64 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightStick = 128 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftShoulder = 256 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightShoulder = 512 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons BigButton = 2048 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons A = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons B = 8192 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons X = 16384 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons Y = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftThumbstickLeft = 2097152 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightTrigger = 4194304 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftTrigger = 8388608 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightThumbstickUp = 16777216 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightThumbstickDown = 33554432 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightThumbstickRight = 67108864 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons RightThumbstickLeft = 134217728 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftThumbstickUp = 268435456 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftThumbstickDown = 536870912 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Buttons LeftThumbstickRight = 1073741824 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Input.ButtonState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.ButtonState Released = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.ButtonState Pressed = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Input.GamePad: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Boolean Back : Assembly, Static
  Properties:
    Int32 MaximumGamePadCount 'get ' : 
  Methods:
    GetCapabilities(PlayerIndex): PrivateScope, Public, Static, HideBySig
    GetCapabilities(Int32): PrivateScope, Public, Static, HideBySig
    GetState(PlayerIndex): PrivateScope, Public, Static, HideBySig
    GetState(Int32): PrivateScope, Public, Static, HideBySig
    GetState(PlayerIndex, GamePadDeadZone): PrivateScope, Public, Static, HideBySig
    GetState(Int32, GamePadDeadZone): PrivateScope, Public, Static, HideBySig
    GetState(PlayerIndex, GamePadDeadZone, GamePadDeadZone): PrivateScope, Public, Static, HideBySig
    GetState(Int32, GamePadDeadZone, GamePadDeadZone): PrivateScope, Public, Static, HideBySig
    SetVibration(PlayerIndex, Single, Single): PrivateScope, Public, Static, HideBySig
    SetVibration(Int32, Single, Single): PrivateScope, Public, Static, HideBySig
    get_MaximumGamePadCount(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Input.GamePadButtons: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.Buttons): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Input.Buttons[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Input.Buttons _buttons : Assembly, InitOnly
  Properties:
    Microsoft.Xna.Framework.Input.ButtonState A 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState B 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState Back 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState X 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState Y 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState Start 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState LeftShoulder 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState LeftStick 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState RightShoulder 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState RightStick 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState BigButton 'get ' : 
  Methods:
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_Back(): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftShoulder(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftStick(): PrivateScope, Public, HideBySig, SpecialName
    get_RightShoulder(): PrivateScope, Public, HideBySig, SpecialName
    get_RightStick(): PrivateScope, Public, HideBySig, SpecialName
    get_BigButton(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(GamePadButtons, GamePadButtons): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadButtons, GamePadButtons): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean IsConnected 'get set' : 
    System.String DisplayName 'get set' : 
    System.String Identifier 'get set' : 
    Boolean HasAButton 'get set' : 
    Boolean HasBackButton 'get set' : 
    Boolean HasBButton 'get set' : 
    Boolean HasDPadDownButton 'get set' : 
    Boolean HasDPadLeftButton 'get set' : 
    Boolean HasDPadRightButton 'get set' : 
    Boolean HasDPadUpButton 'get set' : 
    Boolean HasLeftShoulderButton 'get set' : 
    Boolean HasLeftStickButton 'get set' : 
    Boolean HasRightShoulderButton 'get set' : 
    Boolean HasRightStickButton 'get set' : 
    Boolean HasStartButton 'get set' : 
    Boolean HasXButton 'get set' : 
    Boolean HasYButton 'get set' : 
    Boolean HasBigButton 'get set' : 
    Boolean HasLeftXThumbStick 'get set' : 
    Boolean HasLeftYThumbStick 'get set' : 
    Boolean HasRightXThumbStick 'get set' : 
    Boolean HasRightYThumbStick 'get set' : 
    Boolean HasLeftTrigger 'get set' : 
    Boolean HasRightTrigger 'get set' : 
    Boolean HasLeftVibrationMotor 'get set' : 
    Boolean HasRightVibrationMotor 'get set' : 
    Boolean HasVoiceSupport 'get set' : 
    Microsoft.Xna.Framework.Input.GamePadType GamePadType 'get set' : 
  Methods:
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConnected(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasAButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasAButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasBackButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasBackButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasBButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasBButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDPadDownButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDPadDownButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDPadLeftButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDPadLeftButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDPadRightButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDPadRightButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDPadUpButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDPadUpButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftShoulderButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftShoulderButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftStickButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftStickButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightShoulderButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightShoulderButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightStickButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightStickButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasStartButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasStartButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasXButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasXButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasYButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasYButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasBigButton(): PrivateScope, Public, HideBySig, SpecialName
    set_HasBigButton(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftXThumbStick(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftXThumbStick(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftYThumbStick(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftYThumbStick(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightXThumbStick(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightXThumbStick(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightYThumbStick(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightYThumbStick(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftTrigger(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftTrigger(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightTrigger(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightTrigger(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasLeftVibrationMotor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeftVibrationMotor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasRightVibrationMotor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasRightVibrationMotor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasVoiceSupport(): PrivateScope, Public, HideBySig, SpecialName
    set_HasVoiceSupport(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_GamePadType(): PrivateScope, Public, HideBySig, SpecialName
    set_GamePadType(GamePadType): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(GamePadCapabilities, GamePadCapabilities): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadCapabilities, GamePadCapabilities): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadDeadZone: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.GamePadDeadZone None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadDeadZone IndependentAxes = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadDeadZone Circular = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Input.GamePadDPad: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Input.Buttons[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Input.Buttons): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Input.ButtonState Down 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Left 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Right 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Up 'get set' : 
  Methods:
    get_Down(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(GamePadDPad, GamePadDPad): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadDPad, GamePadDPad): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.GamePadThumbSticks, Microsoft.Xna.Framework.Input.GamePadTriggers, Microsoft.Xna.Framework.Input.GamePadButtons, Microsoft.Xna.Framework.Input.GamePadDPad): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Single, Single, Microsoft.Xna.Framework.Input.Buttons): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Single, Single, Microsoft.Xna.Framework.Input.Buttons[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Input.GamePadState Default : Public, Static, InitOnly
  Properties:
    Boolean IsConnected 'get set' : 
    Int32 PacketNumber 'get set' : 
    Microsoft.Xna.Framework.Input.GamePadButtons Buttons 'get set' : 
    Microsoft.Xna.Framework.Input.GamePadDPad DPad 'get set' : 
    Microsoft.Xna.Framework.Input.GamePadThumbSticks ThumbSticks 'get set' : 
    Microsoft.Xna.Framework.Input.GamePadTriggers Triggers 'get set' : 
  Methods:
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConnected(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_PacketNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_PacketNumber(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Buttons(): PrivateScope, Public, HideBySig, SpecialName
    set_Buttons(GamePadButtons): PrivateScope, Assembly, HideBySig, SpecialName
    get_DPad(): PrivateScope, Public, HideBySig, SpecialName
    set_DPad(GamePadDPad): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThumbSticks(): PrivateScope, Public, HideBySig, SpecialName
    set_ThumbSticks(GamePadThumbSticks): PrivateScope, Assembly, HideBySig, SpecialName
    get_Triggers(): PrivateScope, Public, HideBySig, SpecialName
    set_Triggers(GamePadTriggers): PrivateScope, Assembly, HideBySig, SpecialName
    IsButtonDown(Buttons): PrivateScope, Public, HideBySig
    IsButtonUp(Buttons): PrivateScope, Public, HideBySig
    op_Equality(GamePadState, GamePadState): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadState, GamePadState): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadThumbSticks: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Input.GamePadDeadZone, Microsoft.Xna.Framework.Input.GamePadDeadZone): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Xna.Framework.Input.Buttons _virtualButtons : Assembly, InitOnly
  Properties:
    Microsoft.Xna.Framework.Vector2 Left 'get ' : 
    Microsoft.Xna.Framework.Vector2 Right 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(GamePadThumbSticks, GamePadThumbSticks): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadThumbSticks, GamePadThumbSticks): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadTriggers: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Left 'get set' : 
    Single Right 'get set' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(GamePadTriggers, GamePadTriggers): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GamePadTriggers, GamePadTriggers): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.GamePadType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.GamePadType Unknown = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType GamePad = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType Wheel = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType ArcadeStick = 3 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType FlightStick = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType DancePad = 5 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType Guitar = 6 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType AlternateGuitar = 7 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType DrumKit = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.GamePadType BigButtonPad = 768 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Input.Joystick: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsSupported 'get ' : 
  Methods:
    get_IsSupported(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCapabilities(Int32): PrivateScope, Public, Static, HideBySig
    GetState(Int32): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Xna.Framework.Input.JoystickCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean IsConnected 'get set' : 
    System.String Identifier 'get set' : 
    Boolean IsGamepad 'get set' : 
    Int32 AxisCount 'get set' : 
    Int32 ButtonCount 'get set' : 
    Int32 HatCount 'get set' : 
  Methods:
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConnected(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsGamepad(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGamepad(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_AxisCount(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisCount(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_ButtonCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ButtonCount(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_HatCount(): PrivateScope, Public, HideBySig, SpecialName
    set_HatCount(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(JoystickCapabilities, JoystickCapabilities): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(JoystickCapabilities, JoystickCapabilities): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.JoystickHat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Microsoft.Xna.Framework.Input.ButtonState Down 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Left 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Right 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState Up 'get set' : 
  Methods:
    get_Down(): PrivateScope, Public, HideBySig, SpecialName
    set_Down(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(JoystickHat, JoystickHat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(JoystickHat, JoystickHat): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.JoystickState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean IsConnected 'get set' : 
    Int32[] Axes 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState[] Buttons 'get set' : 
    Microsoft.Xna.Framework.Input.JoystickHat[] Hats 'get set' : 
  Methods:
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConnected(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Axes(): PrivateScope, Public, HideBySig, SpecialName
    set_Axes(Int32[]): PrivateScope, Assembly, HideBySig, SpecialName
    get_Buttons(): PrivateScope, Public, HideBySig, SpecialName
    set_Buttons(ButtonState[]): PrivateScope, Assembly, HideBySig, SpecialName
    get_Hats(): PrivateScope, Public, HideBySig, SpecialName
    set_Hats(JoystickHat[]): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(JoystickState, JoystickState): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(JoystickState, JoystickState): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Input.Keyboard: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    GetState(): PrivateScope, Public, Static, HideBySig
    GetState(PlayerIndex): PrivateScope, Public, Static, HideBySig (Obsolete)
    SetActive(Boolean): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Xna.Framework.Input.KeyboardInput: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsVisible 'get set' : 
  Methods:
    get_IsVisible(): PrivateScope, Public, Static, HideBySig, SpecialName
    Show(String, String, String(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Cancel(String): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Xna.Framework.Input.KeyboardState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Xna.Framework.Input.Keys], Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Input.Keys[], Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Input.Keys[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CapsLock 'get set' : 
    Boolean NumLock 'get set' : 
    Microsoft.Xna.Framework.Input.KeyState Item [Microsoft.Xna.Framework.Input.Keys] 'get ' : 
  Methods:
    InternalSetKey(Keys): PrivateScope, Assembly, HideBySig
    InternalClearKey(Keys): PrivateScope, Assembly, HideBySig
    InternalClearAllKeys(): PrivateScope, Assembly, HideBySig
    get_CapsLock(): PrivateScope, Public, HideBySig, SpecialName
    get_NumLock(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Keys): PrivateScope, Public, HideBySig, SpecialName
    IsKeyDown(Keys): PrivateScope, Public, HideBySig
    IsKeyUp(Keys): PrivateScope, Public, HideBySig
    GetPressedKeys(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(KeyboardState, KeyboardState): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(KeyboardState, KeyboardState): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Xna.Framework.Input.Keys: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.Keys None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Back = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Tab = 9 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Enter = 13 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys CapsLock = 20 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Escape = 27 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Space = 32 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys PageUp = 33 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys PageDown = 34 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys End = 35 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Home = 36 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Left = 37 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Up = 38 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Right = 39 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Down = 40 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Select = 41 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Print = 42 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Execute = 43 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys PrintScreen = 44 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Insert = 45 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Delete = 46 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Help = 47 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D0 = 48 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D1 = 49 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D2 = 50 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D3 = 51 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D4 = 52 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D5 = 53 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D6 = 54 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D7 = 55 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D8 = 56 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D9 = 57 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys A = 65 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys B = 66 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys C = 67 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys D = 68 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys E = 69 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F = 70 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys G = 71 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys H = 72 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys I = 73 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys J = 74 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys K = 75 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys L = 76 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys M = 77 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys N = 78 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys O = 79 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys P = 80 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Q = 81 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys R = 82 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys S = 83 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys T = 84 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys U = 85 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys V = 86 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys W = 87 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys X = 88 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Y = 89 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Z = 90 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LeftWindows = 91 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys RightWindows = 92 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Apps = 93 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Sleep = 95 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad0 = 96 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad1 = 97 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad2 = 98 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad3 = 99 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad4 = 100 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad5 = 101 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad6 = 102 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad7 = 103 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad8 = 104 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumPad9 = 105 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Multiply = 106 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Add = 107 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Separator = 108 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Subtract = 109 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Decimal = 110 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Divide = 111 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F1 = 112 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F2 = 113 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F3 = 114 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F4 = 115 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F5 = 116 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F6 = 117 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F7 = 118 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F8 = 119 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F9 = 120 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F10 = 121 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F11 = 122 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F12 = 123 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F13 = 124 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F14 = 125 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F15 = 126 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F16 = 127 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F17 = 128 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F18 = 129 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F19 = 130 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F20 = 131 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F21 = 132 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F22 = 133 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F23 = 134 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys F24 = 135 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys NumLock = 144 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Scroll = 145 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LeftShift = 160 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys RightShift = 161 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LeftControl = 162 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys RightControl = 163 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LeftAlt = 164 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys RightAlt = 165 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserBack = 166 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserForward = 167 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserRefresh = 168 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserStop = 169 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserSearch = 170 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserFavorites = 171 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys BrowserHome = 172 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys VolumeMute = 173 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys VolumeDown = 174 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys VolumeUp = 175 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys MediaNextTrack = 176 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys MediaPreviousTrack = 177 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys MediaStop = 178 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys MediaPlayPause = 179 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LaunchMail = 180 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys SelectMedia = 181 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LaunchApplication1 = 182 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys LaunchApplication2 = 183 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemSemicolon = 186 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemPlus = 187 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemComma = 188 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemMinus = 189 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemPeriod = 190 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemQuestion = 191 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemTilde = 192 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemOpenBrackets = 219 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemPipe = 220 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemCloseBrackets = 221 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemQuotes = 222 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Oem8 = 223 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemBackslash = 226 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys ProcessKey = 229 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Attn = 246 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Crsel = 247 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Exsel = 248 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys EraseEof = 249 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Play = 250 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Zoom = 251 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Pa1 = 253 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemClear = 254 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys ChatPadGreen = 202 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys ChatPadOrange = 203 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Pause = 19 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys ImeConvert = 28 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys ImeNoConvert = 29 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Kana = 21 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys Kanji = 25 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemAuto = 243 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemCopy = 242 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Keys OemEnlW = 244 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Input.KeyState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.KeyState Up = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.KeyState Down = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Input.MessageBox: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsVisible 'get set' : 
  Methods:
    get_IsVisible(): PrivateScope, Public, Static, HideBySig, SpecialName
    Show(String, String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Cancel(Nullable`1): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Input.Mouse: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Microsoft.Xna.Framework.GameWindow PrimaryWindow : Assembly, Static
  Properties:
    IntPtr WindowHandle 'get set' : 
  Methods:
    get_WindowHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowHandle(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    GetState(GameWindow): PrivateScope, Public, Static, HideBySig
    GetState(): PrivateScope, Public, Static, HideBySig
    SetPosition(Int32, Int32): PrivateScope, Public, Static, HideBySig
    SetCursor(MouseCursor): PrivateScope, Public, Static, HideBySig
    PlatformSetCursor(MouseCursor): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Input.MouseCursor: AutoLayout, AnsiClass, Class, Public
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Input.MouseCursor Arrow 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor IBeam 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor Wait 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor Crosshair 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor WaitArrow 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor SizeNWSE 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor SizeNESW 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor SizeWE 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor SizeNS 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor SizeAll 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor No 'get set' : 
    Microsoft.Xna.Framework.Input.MouseCursor Hand 'get set' : 
    IntPtr Handle 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get ' : 
  Methods:
    get_Arrow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IBeam(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Wait(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Crosshair(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WaitArrow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SizeNWSE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SizeNESW(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SizeWE(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SizeNS(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SizeAll(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_No(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Hand(): PrivateScope, Public, Static, HideBySig, SpecialName
    FromTexture2D(Texture2D, Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Cursor(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Input.MouseState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Microsoft.Xna.Framework.Input.ButtonState, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 X    'get set' : 
    Int32 Y    'get set' : 
    Microsoft.Xna.Framework.Point Position 'get ' : 
    Microsoft.Xna.Framework.Input.ButtonState LeftButton 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState MiddleButton 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState RightButton 'get set' : 
    Int32 ScrollWheelValue 'get set' : 
    Int32 HorizontalScrollWheelValue 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState XButton1 'get set' : 
    Microsoft.Xna.Framework.Input.ButtonState XButton2 'get set' : 
  Methods:
    op_Equality(MouseState, MouseState): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MouseState, MouseState): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftButton(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftButton(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_MiddleButton(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleButton(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_RightButton(): PrivateScope, Public, HideBySig, SpecialName
    set_RightButton(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_ScrollWheelValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollWheelValue(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_HorizontalScrollWheelValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalScrollWheelValue(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_XButton1(): PrivateScope, Public, HideBySig, SpecialName
    set_XButton1(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
    get_XButton2(): PrivateScope, Public, HideBySig, SpecialName
    set_XButton2(ButtonState): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Input.Touch.GestureSample: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.Touch.GestureType, System.TimeSpan, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Input.Touch.GestureType GestureType 'get ' : 
    System.TimeSpan Timestamp 'get ' : 
    Microsoft.Xna.Framework.Vector2 Position 'get ' : 
    Microsoft.Xna.Framework.Vector2 Position2 'get ' : 
    Microsoft.Xna.Framework.Vector2 Delta 'get ' : 
    Microsoft.Xna.Framework.Vector2 Delta2 'get ' : 
  Methods:
    get_GestureType(): PrivateScope, Public, HideBySig, SpecialName
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Position2(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta2(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Input.Touch.GestureType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.Touch.GestureType None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType Tap = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType DragComplete = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType Flick = 4 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType FreeDrag = 8 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType Hold = 16 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType HorizontalDrag = 32 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType Pinch = 64 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType PinchComplete = 128 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType DoubleTap = 256 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.GestureType VerticalDrag = 512 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Input.Touch.TouchCollection: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.Touch.TouchLocation[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[Microsoft.Xna.Framework.Input.Touch.TouchLocation]
    System.Collections.Generic.ICollection`1[Microsoft.Xna.Framework.Input.Touch.TouchLocation]
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Input.Touch.TouchLocation]
    System.Collections.IEnumerable
  Fields:
    Microsoft.Xna.Framework.Input.Touch.TouchCollection Empty : Assembly, Static, InitOnly
  Properties:
    Boolean IsConnected 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Microsoft.Xna.Framework.Input.Touch.TouchLocation Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
  Methods:
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    FindById(Int32, TouchLocation&(Out)): PrivateScope, Public, HideBySig
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOf(TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(TouchLocation[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct Microsoft.Xna.Framework.Input.Touch.TouchCollection+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Xna.Framework.Input.Touch.TouchCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Microsoft.Xna.Framework.Input.Touch.TouchLocation]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    Microsoft.Xna.Framework.Input.Touch.TouchLocation Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Xna.Framework.Input.Touch.TouchLocation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2, System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Input.Touch.TouchLocationState, Microsoft.Xna.Framework.Vector2, System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Input.Touch.TouchLocation]
  Fields:
    Boolean SameFrameReleased : Assembly
    Microsoft.Xna.Framework.Input.Touch.TouchLocation Invalid : Assembly, Static, InitOnly
  Properties:
    Microsoft.Xna.Framework.Vector2 PressPosition 'get ' : 
    System.TimeSpan PressTimestamp 'get ' : 
    System.TimeSpan Timestamp 'get ' : 
    Microsoft.Xna.Framework.Vector2 Velocity 'get ' : 
    Int32 Id   'get ' : 
    Microsoft.Xna.Framework.Vector2 Position 'get ' : 
    Single Pressure 'get ' : 
    Microsoft.Xna.Framework.Input.Touch.TouchLocationState State 'get ' : 
  Methods:
    get_PressPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PressTimestamp(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Timestamp(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Velocity(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Pressure(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    AsMovedState(): PrivateScope, Assembly, HideBySig
    UpdateState(TouchLocation): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(TouchLocation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    TryGetPreviousLocation(TouchLocation&(Out)): PrivateScope, Public, HideBySig
    op_Inequality(TouchLocation, TouchLocation): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(TouchLocation, TouchLocation): PrivateScope, Public, Static, HideBySig, SpecialName
    AgeState(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Xna.Framework.Input.Touch.TouchLocationState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Input.Touch.TouchLocationState Invalid = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.TouchLocationState Moved = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.TouchLocationState Pressed = 2 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Input.Touch.TouchLocationState Released = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Input.Touch.TouchPanel: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Microsoft.Xna.Framework.GameWindow PrimaryWindow : Assembly, Static
  Properties:
    IntPtr WindowHandle 'get set' : 
    Int32 DisplayHeight 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation DisplayOrientation 'get set' : 
    Int32 DisplayWidth 'get set' : 
    Microsoft.Xna.Framework.Input.Touch.GestureType EnabledGestures 'get set' : 
    Boolean EnableMouseTouchPoint 'get set' : 
    Boolean EnableMouseGestures 'get set' : 
    Boolean IsGestureAvailable 'get ' : 
  Methods:
    GetState(): PrivateScope, Public, Static, HideBySig
    GetState(GameWindow): PrivateScope, Public, Static, HideBySig
    GetCapabilities(): PrivateScope, Public, Static, HideBySig
    AddEvent(Int32, TouchLocationState, Vector2): PrivateScope, Assembly, Static, HideBySig
    AddEvent(Int32, TouchLocationState, Vector2, Boolean): PrivateScope, Assembly, Static, HideBySig
    ReadGesture(): PrivateScope, Public, Static, HideBySig
    get_WindowHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowHandle(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DisplayHeight(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DisplayHeight(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DisplayOrientation(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DisplayOrientation(DisplayOrientation): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DisplayWidth(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DisplayWidth(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnabledGestures(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_EnabledGestures(GestureType): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnableMouseTouchPoint(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_EnableMouseTouchPoint(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnableMouseGestures(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_EnableMouseGestures(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsGestureAvailable(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean HasPressure 'get ' : 
    Boolean IsConnected 'get ' : 
    Int32 MaximumTouchCount 'get ' : 
  Methods:
    Initialize(): PrivateScope, Assembly, HideBySig
    get_HasPressure(): PrivateScope, Public, HideBySig, SpecialName
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumTouchCount(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Input.Touch.TouchPanelState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Xna.Framework.GameWindow): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Queue`1[Microsoft.Xna.Framework.Input.Touch.GestureSample] GestureList : Assembly, InitOnly
    Microsoft.Xna.Framework.GameWindow Window : Assembly, InitOnly
    System.TimeSpan TimeRequiredForHold : Assembly, Static, InitOnly
    Single TapJitterTolerance = 35 : Assembly, Static, Literal, HasDefault
  Properties:
    System.TimeSpan CurrentTimestamp 'get set' : 
    IntPtr WindowHandle 'get set' : 
    Int32 DisplayHeight 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation DisplayOrientation 'get set' : 
    Int32 DisplayWidth 'get set' : 
    Microsoft.Xna.Framework.Input.Touch.GestureType EnabledGestures 'get set' : 
    Boolean EnableMouseTouchPoint 'get set' : 
    Boolean EnableMouseGestures 'get set' : 
    Boolean IsGestureAvailable 'get ' : 
  Methods:
    get_CurrentTimestamp(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_CurrentTimestamp(TimeSpan): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_WindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_WindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    GetCapabilities(): PrivateScope, Public, HideBySig
    GetState(): PrivateScope, Public, HideBySig
    AddEvent(Int32, TouchLocationState, Vector2): PrivateScope, Assembly, HideBySig
    AddEvent(Int32, TouchLocationState, Vector2, Boolean): PrivateScope, Assembly, HideBySig
    ReleaseAllTouches(): PrivateScope, Assembly, HideBySig
    get_DisplayHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayOrientation(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayOrientation(DisplayOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EnabledGestures(): PrivateScope, Public, HideBySig, SpecialName
    set_EnabledGestures(GestureType): PrivateScope, Public, HideBySig, SpecialName
    get_EnableMouseTouchPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableMouseTouchPoint(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnableMouseGestures(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableMouseGestures(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsGestureAvailable(): PrivateScope, Public, HideBySig, SpecialName
    ReadGesture(): PrivateScope, Public, HideBySig
Class Microsoft.Xna.Framework.Media.Album: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Media.Artist Artist 'get ' : 
    System.TimeSpan Duration 'get ' : 
    Microsoft.Xna.Framework.Media.Genre Genre 'get ' : 
    Boolean HasArt 'get ' : 
    Boolean IsDisposed 'get ' : 
    System.String Name 'get ' : 
    Microsoft.Xna.Framework.Media.SongCollection Songs 'get ' : 
  Methods:
    get_Artist(): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    get_Genre(): PrivateScope, Public, HideBySig, SpecialName
    get_HasArt(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Songs(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAlbumArt(): PrivateScope, Public, HideBySig
    GetThumbnail(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Media.AlbumCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Xna.Framework.Media.Album]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsDisposed 'get ' : 
    Microsoft.Xna.Framework.Media.Album Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Media.Artist: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Media.AlbumCollection Albums 'get ' : 
    Boolean IsDisposed 'get ' : 
    System.String Name 'get ' : 
    Microsoft.Xna.Framework.Media.SongCollection Songs 'get ' : 
  Methods:
    get_Albums(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Songs(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Media.Genre: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Media.AlbumCollection Albums 'get ' : 
    Boolean IsDisposed 'get ' : 
    System.String Name 'get ' : 
    Microsoft.Xna.Framework.Media.SongCollection Songs 'get ' : 
  Methods:
    get_Albums(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Songs(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Media.MediaLibrary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Xna.Framework.Media.MediaSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Media.AlbumCollection Albums 'get ' : 
    Boolean IsDisposed 'get set' : 
    Microsoft.Xna.Framework.Media.MediaSource MediaSource 'get ' : 
    Microsoft.Xna.Framework.Media.SongCollection Songs 'get ' : 
  Methods:
    get_Albums(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_MediaSource(): PrivateScope, Public, HideBySig, SpecialName
    get_Songs(): PrivateScope, Public, HideBySig, SpecialName
    Load(Action`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Media.MediaManagerState: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CheckStartup(): PrivateScope, Public, Static, HideBySig
    CheckShutdown(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Media.MediaPlayer: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Microsoft.Xna.Framework.Media.MediaQueue Queue 'get ' : 
    Boolean IsMuted 'get set' : 
    Boolean IsRepeating 'get set' : 
    Boolean IsShuffled 'get set' : 
    Boolean IsVisualizationEnabled 'get ' : 
    System.TimeSpan PlayPosition 'get ' : 
    Microsoft.Xna.Framework.Media.MediaState State 'get set' : 
    Boolean GameHasControl 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] ActiveSongChanged: 
    System.EventHandler`1[System.EventArgs] MediaStateChanged: 
  Methods:
    add_ActiveSongChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_ActiveSongChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    add_MediaStateChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_MediaStateChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Queue(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsMuted(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IsMuted(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsRepeating(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IsRepeating(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsShuffled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IsShuffled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsVisualizationEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PlayPosition(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_State(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GameHasControl(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    Pause(): PrivateScope, Public, Static, HideBySig
    Play(Song): PrivateScope, Public, Static, HideBySig
    Play(Song, Nullable`1): PrivateScope, Public, Static, HideBySig
    Play(SongCollection, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    OnSongFinishedPlaying(Object, EventArgs): PrivateScope, Assembly, Static, HideBySig
    Resume(): PrivateScope, Public, Static, HideBySig
    Stop(): PrivateScope, Public, Static, HideBySig
    MoveNext(): PrivateScope, Public, Static, HideBySig
    MovePrevious(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Media.MediaQueue: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Media.Song ActiveSong 'get ' : 
    Int32 ActiveSongIndex 'get set' : 
    Int32 Count 'get ' : 
    Microsoft.Xna.Framework.Media.Song Item [Int32] 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Media.Song] Songs 'get ' : 
  Methods:
    get_ActiveSong(): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveSongIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveSongIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Songs(): PrivateScope, Assembly, HideBySig, SpecialName
    GetNextSong(Int32, Boolean): PrivateScope, Assembly, HideBySig
    Clear(): PrivateScope, Assembly, HideBySig
    Add(Song): PrivateScope, Assembly, HideBySig
Class Microsoft.Xna.Framework.Media.MediaSource: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, Microsoft.Xna.Framework.Media.MediaSourceType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Media.MediaSourceType MediaSourceType 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_MediaSourceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    GetAvailableMediaSources(): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Xna.Framework.Media.MediaSourceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Media.MediaSourceType LocalDevice = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Media.MediaSourceType WindowsMediaConnect = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Xna.Framework.Media.MediaState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Media.MediaState Stopped = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Media.MediaState Playing = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Media.MediaState Paused = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Media.PlaylistCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Microsoft.Xna.Framework.Media.Playlist]
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Media.Playlist]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Microsoft.Xna.Framework.Media.Playlist Item [Int32] 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Add(Playlist): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    Contains(Playlist): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Playlist[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Playlist): PrivateScope, Public, HideBySig
    Remove(Playlist): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Media.Playlist: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.TimeSpan Duration 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Media.SongCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Xna.Framework.Media.Song]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Microsoft.Xna.Framework.Media.Song]
    System.Collections.Generic.IEnumerable`1[Microsoft.Xna.Framework.Media.Song]
    System.Collections.IEnumerable
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Microsoft.Xna.Framework.Media.Song Item [Int32] 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Add(Song): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    Contains(Song): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Song[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Song): PrivateScope, Public, HideBySig
    Remove(Song): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Media.Song: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Xna.Framework.Media.Song]
    System.IDisposable
  Properties:
    Microsoft.Xna.Framework.Media.Album Album 'get ' : 
    Microsoft.Xna.Framework.Media.Artist Artist 'get ' : 
    Microsoft.Xna.Framework.Media.Genre Genre 'get ' : 
    Boolean IsDisposed 'get ' : 
    System.String FilePath 'get ' : 
    System.TimeSpan Duration 'get ' : 
    Boolean IsProtected 'get ' : 
    Boolean IsRated 'get ' : 
    System.String Name 'get ' : 
    Int32 PlayCount 'get ' : 
    Int32 Rating 'get ' : 
    Int32 TrackNumber 'get ' : 
    SharpDX.MediaFoundation.Topology Topology 'get ' : 
  Methods:
    get_Album(): PrivateScope, Public, HideBySig, SpecialName
    get_Artist(): PrivateScope, Public, HideBySig, SpecialName
    get_Genre(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_FilePath(): PrivateScope, Assembly, HideBySig, SpecialName
    FromUri(String, Uri): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Song): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Song, Song): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Song, Song): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    get_IsProtected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRated(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_PlayCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Rating(): PrivateScope, Public, HideBySig, SpecialName
    get_TrackNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Topology(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Xna.Framework.Media.VideoSoundtrackType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Xna.Framework.Media.VideoSoundtrackType Music = 0 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Media.VideoSoundtrackType Dialog = 1 : Public, Static, Literal, HasDefault
    Microsoft.Xna.Framework.Media.VideoSoundtrackType MusicAndDialog = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Xna.Framework.Media.Video: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String FileName 'get set' : 
    System.TimeSpan Duration 'get set' : 
    Single FramesPerSecond 'get set' : 
    Int32 Height 'get set' : 
    Microsoft.Xna.Framework.Media.VideoSoundtrackType VideoSoundtrackType 'get set' : 
    Int32 Width 'get set' : 
    SharpDX.MediaFoundation.Topology Topology 'get ' : 
    Microsoft.Xna.Framework.Media.VideoSampleGrabber SampleGrabber 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName
    get_FramesPerSecond(): PrivateScope, Public, HideBySig, SpecialName
    set_FramesPerSecond(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_VideoSoundtrackType(): PrivateScope, Public, HideBySig, SpecialName
    set_VideoSoundtrackType(VideoSoundtrackType): PrivateScope, Assembly, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Topology(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SampleGrabber(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Media.VideoPlayer: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsDisposed 'get set' : 
    Boolean IsLooped 'get set' : 
    Boolean IsMuted 'get set' : 
    System.TimeSpan PlayPosition 'get ' : 
    Microsoft.Xna.Framework.Media.MediaState State 'get ' : 
    Microsoft.Xna.Framework.Media.Video Video 'get ' : 
    Single Volume 'get set' : 
  Methods:
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLooped(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLooped(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsMuted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMuted(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PlayPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_Video(): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    GetTexture(): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    Play(Video): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.AssemblyHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDefaultWindowTitle(): PrivateScope, Public, Static, HideBySig
Struct MonoGame.Utilities.OS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.OS Windows = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.OS Linux = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.OS MacOSX = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.OS Unknown = 3 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.CurrentPlatform: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    MonoGame.Utilities.OS OS 'get ' : 
  Methods:
    get_OS(): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoGame.Utilities.Hash: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ComputeHash(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ComputeHash(Stream): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.FileHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Char ForwardSlash : Public, Static, InitOnly
    System.String ForwardSlashString : Public, Static, InitOnly
    Char BackwardSlash : Public, Static, InitOnly
    Char NotSeparator : Public, Static, InitOnly
    Char Separator : Public, Static, InitOnly
  Methods:
    NormalizeFilePathSeparators(String): PrivateScope, Public, Static, HideBySig
    ResolveRelativePath(String, String): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.ReflectionHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsValueType(Type): PrivateScope, Public, Static, HideBySig
    GetBaseType(Type): PrivateScope, Public, Static, HideBySig
    GetAssembly(Type): PrivateScope, Public, Static, HideBySig
    IsConcreteClass(Type): PrivateScope, Public, Static, HideBySig
    GetMethodInfo(Type, String): PrivateScope, Public, Static, HideBySig
    GetPropertyGetMethod(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetPropertySetMethod(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(MemberInfo): PrivateScope, Public, Static, HideBySig
    PropertyIsPublic(PropertyInfo): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object): PrivateScope, Public, Static, HideBySig
    IsAssignableFromType(Type, Type): PrivateScope, Public, Static, HideBySig
    ManagedSizeOf(Type): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.ReflectionHelpers+SizeOf`1[T]: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed
  Type parameter: T
  Methods:
    Get(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Utilities.TimerHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    GetCurrentResolution(): PrivateScope, Public, Static, HideBySig
    SleepForNoMoreThan(Double): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.Lz4DecoderStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    Reset(Stream, Int64(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class MonoGame.Utilities.LzxDecoderStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class MonoGame.Utilities.ZlibStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, MonoGame.Utilities.CompressionLevel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, MonoGame.Utilities.CompressionLevel, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoGame.Utilities.ZlibBaseStream _baseStream : Assembly
  Properties:
    MonoGame.Utilities.FlushType FlushMode 'get set' : 
    Int32 BufferSize 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_FlushMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlushMode(FlushType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TotalIn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    CompressString(String): PrivateScope, Public, Static, HideBySig
    CompressBuffer(Byte[]): PrivateScope, Public, Static, HideBySig
    UncompressString(Byte[]): PrivateScope, Public, Static, HideBySig
    UncompressBuffer(Byte[]): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.ZlibConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 WindowBitsMax = 15 : Assembly, Static, Literal, HasDefault
    Int32 WindowBitsDefault = 15 : Assembly, Static, Literal, HasDefault
    Int32 Z_OK = 0 : Assembly, Static, Literal, HasDefault
    Int32 Z_STREAM_END = 1 : Assembly, Static, Literal, HasDefault
    Int32 Z_NEED_DICT = 2 : Assembly, Static, Literal, HasDefault
    Int32 Z_STREAM_ERROR = -2 : Assembly, Static, Literal, HasDefault
    Int32 Z_DATA_ERROR = -3 : Assembly, Static, Literal, HasDefault
    Int32 Z_BUF_ERROR = -5 : Assembly, Static, Literal, HasDefault
    Int32 WorkingBufferSizeDefault = 16384 : Assembly, Static, Literal, HasDefault
    Int32 WorkingBufferSizeMin = 1024 : Assembly, Static, Literal, HasDefault
Class MonoGame.Utilities.ZlibCodec: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MonoGame.Utilities.CompressionMode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] InputBuffer : Assembly
    Int32 NextIn : Assembly
    Int32 AvailableBytesIn : Assembly
    Int64 TotalBytesIn : Assembly
    Byte[] OutputBuffer : Assembly
    Int32 NextOut : Assembly
    Int32 AvailableBytesOut : Assembly
    Int64 TotalBytesOut : Assembly
    System.String Message : Assembly
    MonoGame.Utilities.DeflateManager dstate : Assembly
    MonoGame.Utilities.InflateManager istate : Assembly
    UInt32 _Adler32 : Assembly
    MonoGame.Utilities.CompressionLevel CompressLevel : Assembly
    Int32 WindowBits : Assembly
    MonoGame.Utilities.CompressionStrategy Strategy : Assembly
  Properties:
    Int32 Adler32 'get ' : 
  Methods:
    get_Adler32(): PrivateScope, Assembly, HideBySig, SpecialName
    InitializeInflate(): PrivateScope, Assembly, HideBySig
    InitializeInflate(Boolean): PrivateScope, Assembly, HideBySig
    InitializeInflate(Int32): PrivateScope, Assembly, HideBySig
    InitializeInflate(Int32, Boolean): PrivateScope, Assembly, HideBySig
    Inflate(FlushType): PrivateScope, Assembly, HideBySig
    EndInflate(): PrivateScope, Assembly, HideBySig
    SyncInflate(): PrivateScope, Assembly, HideBySig
    InitializeDeflate(): PrivateScope, Assembly, HideBySig
    InitializeDeflate(CompressionLevel): PrivateScope, Assembly, HideBySig
    InitializeDeflate(CompressionLevel, Boolean): PrivateScope, Assembly, HideBySig
    InitializeDeflate(CompressionLevel, Int32): PrivateScope, Assembly, HideBySig
    InitializeDeflate(CompressionLevel, Int32, Boolean): PrivateScope, Assembly, HideBySig
    Deflate(FlushType): PrivateScope, Assembly, HideBySig
    EndDeflate(): PrivateScope, Assembly, HideBySig
    ResetDeflate(): PrivateScope, Assembly, HideBySig
    SetDeflateParams(CompressionLevel, CompressionStrategy): PrivateScope, Assembly, HideBySig
    SetDictionary(Byte[]): PrivateScope, Assembly, HideBySig
    flush_pending(): PrivateScope, Assembly, HideBySig
    read_buf(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
Struct MonoGame.Utilities.ZlibStreamFlavor: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.ZlibStreamFlavor ZLIB = 1950 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.ZlibStreamFlavor DEFLATE = 1951 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.ZlibStreamFlavor GZIP = 1952 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.ZlibBaseStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, MonoGame.Utilities.CompressionLevel, MonoGame.Utilities.ZlibStreamFlavor, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Crc32 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_Crc32(): PrivateScope, Assembly, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CompressString(String, Stream): PrivateScope, Assembly, Static, HideBySig
    CompressBuffer(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    UncompressString(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
    UncompressBuffer(Byte[], Stream): PrivateScope, Assembly, Static, HideBySig
Struct MonoGame.Utilities.ZlibBaseStream+StreamMode: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StreamMode Writer = 0 : Public, Static, Literal, HasDefault
    StreamMode Reader = 1 : Public, Static, Literal, HasDefault
    StreamMode Undefined = 2 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.FlushType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.FlushType None = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.FlushType Partial = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.FlushType Sync = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.FlushType Full = 3 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.FlushType Finish = 4 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.CompressionLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.CompressionLevel None = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level0 = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel BestSpeed = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level1 = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level2 = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level3 = 3 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level4 = 4 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level5 = 5 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Default = 6 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level6 = 6 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level7 = 7 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level8 = 8 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel BestCompression = 9 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionLevel Level9 = 9 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.CompressionStrategy: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.CompressionStrategy Default = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionStrategy Filtered = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionStrategy HuffmanOnly = 2 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.CompressionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.CompressionMode Compress = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.CompressionMode Decompress = 1 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.ZlibException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MonoGame.Utilities.SharedUtils: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    URShift(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ReadInput(TextReader, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ToByteArray(String): PrivateScope, Assembly, Static, HideBySig
    ToCharArray(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.InternalConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MAX_BITS : Assembly, Static, InitOnly
    Int32 BL_CODES : Assembly, Static, InitOnly
    Int32 D_CODES : Assembly, Static, InitOnly
    Int32 LITERALS : Assembly, Static, InitOnly
    Int32 LENGTH_CODES : Assembly, Static, InitOnly
    Int32 L_CODES : Assembly, Static, InitOnly
    Int32 MAX_BL_BITS : Assembly, Static, InitOnly
    Int32 REP_3_6 : Assembly, Static, InitOnly
    Int32 REPZ_3_10 : Assembly, Static, InitOnly
    Int32 REPZ_11_138 : Assembly, Static, InitOnly
Class MonoGame.Utilities.StaticTree: AutoLayout, AnsiClass, Class, Sealed
  Fields:
    Int16[] treeCodes : Assembly
    Int32[] extraBits : Assembly
    Int32 extraBase : Assembly
    Int32 elems : Assembly
    Int32 maxLength : Assembly
    Int16[] lengthAndLiteralsTreeCodes : Assembly, Static, InitOnly
    Int16[] distTreeCodes : Assembly, Static, InitOnly
    MonoGame.Utilities.StaticTree Literals : Assembly, Static, InitOnly
    MonoGame.Utilities.StaticTree Distances : Assembly, Static, InitOnly
    MonoGame.Utilities.StaticTree BitLengths : Assembly, Static, InitOnly
Class MonoGame.Utilities.Adler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Adler32(UInt32, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Tree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] dyn_tree : Assembly
    Int32 max_code : Assembly
    MonoGame.Utilities.StaticTree staticTree : Assembly
    Int32[] ExtraLengthBits : Assembly, Static, InitOnly
    Int32[] ExtraDistanceBits : Assembly, Static, InitOnly
    Int32[] extra_blbits : Assembly, Static, InitOnly
    SByte[] bl_order : Assembly, Static, InitOnly
    SByte[] LengthCode : Assembly, Static, InitOnly
    Int32[] LengthBase : Assembly, Static, InitOnly
    Int32[] DistanceBase : Assembly, Static, InitOnly
    Int32 Buf_size = 16 : Assembly, Static, Literal, HasDefault
  Methods:
    DistanceCode(Int32): PrivateScope, Assembly, Static, HideBySig
    gen_bitlen(DeflateManager): PrivateScope, Assembly, HideBySig
    build_tree(DeflateManager): PrivateScope, Assembly, HideBySig
    gen_codes(Int16[], Int32, Int16[]): PrivateScope, Assembly, Static, HideBySig
    bi_reverse(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.InfTree: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[] hn : Assembly
    Int32[] v : Assembly
    Int32[] c : Assembly
    Int32[] r : Assembly
    Int32[] u : Assembly
    Int32[] x : Assembly
    Int32[] fixed_tl : Assembly, Static, InitOnly
    Int32[] fixed_td : Assembly, Static, InitOnly
    Int32[] cplens : Assembly, Static, InitOnly
    Int32[] cplext : Assembly, Static, InitOnly
    Int32[] cpdist : Assembly, Static, InitOnly
    Int32[] cpdext : Assembly, Static, InitOnly
    Int32 fixed_bl = 9 : Assembly, Static, Literal, HasDefault
    Int32 fixed_bd = 5 : Assembly, Static, Literal, HasDefault
    Int32 BMAX = 15 : Assembly, Static, Literal, HasDefault
  Methods:
    inflate_trees_bits(Int32[], Int32[], Int32[], Int32[], ZlibCodec): PrivateScope, Assembly, HideBySig
    inflate_trees_dynamic(Int32, Int32, Int32[], Int32[], Int32[], Int32[], Int32[], Int32[], ZlibCodec): PrivateScope, Assembly, HideBySig
    inflate_trees_fixed(Int32[], Int32[], Int32[][], Int32[][], ZlibCodec): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.InflateBlocks: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(MonoGame.Utilities.ZlibCodec, System.Object, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 left : Assembly
    Int32 table : Assembly
    Int32 index : Assembly
    Int32[] blens : Assembly
    Int32[] bb : Assembly
    Int32[] tb : Assembly
    MonoGame.Utilities.InflateCodes codes : Assembly
    Int32 last : Assembly
    MonoGame.Utilities.ZlibCodec _codec : Assembly
    Int32 bitk : Assembly
    Int32 bitb : Assembly
    Int32[] hufts : Assembly
    Byte[] window : Assembly
    Int32 end : Assembly
    Int32 readAt : Assembly
    Int32 writeAt : Assembly
    System.Object checkfn : Assembly
    UInt32 check : Assembly
    MonoGame.Utilities.InfTree inftree : Assembly
    Int32[] border : Assembly, Static, InitOnly
  Methods:
    Reset(): PrivateScope, Assembly, HideBySig
    Process(Int32): PrivateScope, Assembly, HideBySig
    Free(): PrivateScope, Assembly, HideBySig
    SetDictionary(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    SyncPoint(): PrivateScope, Assembly, HideBySig
    Flush(Int32): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.InternalInflateConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32[] InflateMask : Assembly, Static, InitOnly
Class MonoGame.Utilities.InflateCodes: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 mode : Assembly
    Int32 len : Assembly
    Int32[] tree : Assembly
    Int32 tree_index : Assembly
    Int32 need : Assembly
    Int32 lit : Assembly
    Int32 bitsToGet : Assembly
    Int32 dist : Assembly
    Byte lbits : Assembly
    Byte dbits : Assembly
    Int32[] ltree : Assembly
    Int32 ltree_index : Assembly
    Int32[] dtree : Assembly
    Int32 dtree_index : Assembly
  Methods:
    Init(Int32, Int32, Int32[], Int32, Int32[], Int32): PrivateScope, Assembly, HideBySig
    Process(InflateBlocks, Int32): PrivateScope, Assembly, HideBySig
    InflateFast(Int32, Int32, Int32[], Int32, Int32[], Int32, InflateBlocks, ZlibCodec): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.InflateManager: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoGame.Utilities.ZlibCodec _codec : Assembly
    Int32 method : Assembly
    UInt32 computedCheck : Assembly
    UInt32 expectedCheck : Assembly
    Int32 marker : Assembly
    Int32 wbits : Assembly
    MonoGame.Utilities.InflateBlocks blocks : Assembly
  Properties:
    Boolean HandleRfc1950HeaderBytes 'get set' : 
  Methods:
    get_HandleRfc1950HeaderBytes(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HandleRfc1950HeaderBytes(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Reset(): PrivateScope, Assembly, HideBySig
    End(): PrivateScope, Assembly, HideBySig
    Initialize(ZlibCodec, Int32): PrivateScope, Assembly, HideBySig
    Inflate(FlushType): PrivateScope, Assembly, HideBySig
    SetDictionary(Byte[]): PrivateScope, Assembly, HideBySig
    Sync(): PrivateScope, Assembly, HideBySig
    SyncPoint(ZlibCodec): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.GZipStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, MonoGame.Utilities.CompressionLevel): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, MonoGame.Utilities.CompressionMode, MonoGame.Utilities.CompressionLevel, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[System.DateTime] LastModified : Assembly
    MonoGame.Utilities.ZlibBaseStream _baseStream : Assembly
    System.DateTime _unixEpoch : Assembly, Static, InitOnly
    System.Text.Encoding iso8859dash1 : Assembly, Static, InitOnly
  Properties:
    System.String Comment 'get set' : 
    System.String FileName 'get set' : 
    Int32 Crc32 'get ' : 
    MonoGame.Utilities.FlushType FlushMode 'get set' : 
    Int32 BufferSize 'get set' : 
    Int64 TotalIn 'get ' : 
    Int64 TotalOut 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_Comment(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Comment(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_FileName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Crc32(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FlushMode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    set_FlushMode(FlushType): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_BufferSize(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BufferSize(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_TotalIn(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_TotalOut(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    CompressString(String): PrivateScope, Assembly, Static, HideBySig
    CompressBuffer(Byte[]): PrivateScope, Assembly, Static, HideBySig
    UncompressString(Byte[]): PrivateScope, Assembly, Static, HideBySig
    UncompressBuffer(Byte[]): PrivateScope, Assembly, Static, HideBySig
Struct MonoGame.Utilities.BlockState: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.BlockState NeedMore = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.BlockState BlockDone = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.BlockState FinishStarted = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.BlockState FinishDone = 3 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.DeflateFlavor: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.DeflateFlavor Store = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.DeflateFlavor Fast = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.DeflateFlavor Slow = 2 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.DeflateManager: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    MonoGame.Utilities.ZlibCodec _codec : Assembly
    Int32 status : Assembly
    Byte[] pending : Assembly
    Int32 nextPending : Assembly
    Int32 pendingCount : Assembly
    SByte data_type : Assembly
    Int32 last_flush : Assembly
    Int32 w_size : Assembly
    Int32 w_bits : Assembly
    Int32 w_mask : Assembly
    Byte[] window : Assembly
    Int32 window_size : Assembly
    Int16[] prev : Assembly
    Int16[] head : Assembly
    Int32 ins_h : Assembly
    Int32 hash_size : Assembly
    Int32 hash_bits : Assembly
    Int32 hash_mask : Assembly
    Int32 hash_shift : Assembly
    Int32 block_start : Assembly
    Int32 match_length : Assembly
    Int32 prev_match : Assembly
    Int32 match_available : Assembly
    Int32 strstart : Assembly
    Int32 match_start : Assembly
    Int32 lookahead : Assembly
    Int32 prev_length : Assembly
    MonoGame.Utilities.CompressionLevel compressionLevel : Assembly
    MonoGame.Utilities.CompressionStrategy compressionStrategy : Assembly
    Int16[] dyn_ltree : Assembly
    Int16[] dyn_dtree : Assembly
    Int16[] bl_tree : Assembly
    MonoGame.Utilities.Tree treeLiterals : Assembly
    MonoGame.Utilities.Tree treeDistances : Assembly
    MonoGame.Utilities.Tree treeBitLengths : Assembly
    Int16[] bl_count : Assembly
    Int32[] heap : Assembly
    Int32 heap_len : Assembly
    Int32 heap_max : Assembly
    SByte[] depth : Assembly
    Int32 _lengthOffset : Assembly
    Int32 lit_bufsize : Assembly
    Int32 last_lit : Assembly
    Int32 _distanceOffset : Assembly
    Int32 opt_len : Assembly
    Int32 static_len : Assembly
    Int32 matches : Assembly
    Int32 last_eob_len : Assembly
    Int16 bi_buf : Assembly
    Int32 bi_valid : Assembly
  Properties:
    Boolean WantRfc1950HeaderBytes 'get set' : 
  Methods:
    _InitializeBlocks(): PrivateScope, Assembly, HideBySig
    pqdownheap(Int16[], Int32): PrivateScope, Assembly, HideBySig
    _IsSmaller(Int16[], Int32, Int32, SByte[]): PrivateScope, Assembly, Static, HideBySig
    scan_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    build_bl_tree(): PrivateScope, Assembly, HideBySig
    send_all_trees(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    send_tree(Int16[], Int32): PrivateScope, Assembly, HideBySig
    send_code(Int32, Int16[]): PrivateScope, Assembly, HideBySig
    send_bits(Int32, Int32): PrivateScope, Assembly, HideBySig
    _tr_align(): PrivateScope, Assembly, HideBySig
    _tr_tally(Int32, Int32): PrivateScope, Assembly, HideBySig
    send_compressed_block(Int16[], Int16[]): PrivateScope, Assembly, HideBySig
    set_data_type(): PrivateScope, Assembly, HideBySig
    bi_flush(): PrivateScope, Assembly, HideBySig
    bi_windup(): PrivateScope, Assembly, HideBySig
    copy_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    flush_block_only(Boolean): PrivateScope, Assembly, HideBySig
    DeflateNone(FlushType): PrivateScope, Assembly, HideBySig
    _tr_stored_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    _tr_flush_block(Int32, Int32, Boolean): PrivateScope, Assembly, HideBySig
    DeflateFast(FlushType): PrivateScope, Assembly, HideBySig
    DeflateSlow(FlushType): PrivateScope, Assembly, HideBySig
    longest_match(Int32): PrivateScope, Assembly, HideBySig
    get_WantRfc1950HeaderBytes(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WantRfc1950HeaderBytes(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Initialize(ZlibCodec, CompressionLevel): PrivateScope, Assembly, HideBySig
    Initialize(ZlibCodec, CompressionLevel, Int32): PrivateScope, Assembly, HideBySig
    Initialize(ZlibCodec, CompressionLevel, Int32, CompressionStrategy): PrivateScope, Assembly, HideBySig
    Initialize(ZlibCodec, CompressionLevel, Int32, Int32, CompressionStrategy): PrivateScope, Assembly, HideBySig
    Reset(): PrivateScope, Assembly, HideBySig
    End(): PrivateScope, Assembly, HideBySig
    SetParams(CompressionLevel, CompressionStrategy): PrivateScope, Assembly, HideBySig
    SetDictionary(Byte[]): PrivateScope, Assembly, HideBySig
    Deflate(FlushType): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.DeflateManager+CompressFunc: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(FlushType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(FlushType, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.DeflateManager+Config: AutoLayout, AnsiClass, Class, NestedAssembly
  Fields:
    Int32 GoodLength : Assembly
    Int32 MaxLazy : Assembly
    Int32 NiceLength : Assembly
    Int32 MaxChainLength : Assembly
    MonoGame.Utilities.DeflateFlavor Flavor : Assembly
  Methods:
    Lookup(CompressionLevel): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.CRC32: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 TotalBytesRead 'get ' : 
    Int32 Crc32Result 'get ' : 
  Methods:
    get_TotalBytesRead(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Crc32Result(): PrivateScope, Assembly, HideBySig, SpecialName
    GetCrc32(Stream): PrivateScope, Assembly, HideBySig
    GetCrc32AndCopy(Stream, Stream): PrivateScope, Assembly, HideBySig
    ComputeCrc32(Int32, Byte): PrivateScope, Assembly, HideBySig
    _InternalComputeCrc32(UInt32, Byte): PrivateScope, Assembly, HideBySig
    SlurpBlock(Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    UpdateCRC(Byte): PrivateScope, Assembly, HideBySig
    UpdateCRC(Byte, Int32): PrivateScope, Assembly, HideBySig
    Combine(Int32, Int32): PrivateScope, Assembly, HideBySig
    Reset(): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.CrcCalculatorStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int64, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int64, Boolean, MonoGame.Utilities.CRC32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.Stream _innerStream : Assembly
  Properties:
    Int64 TotalBytesSlurped 'get ' : 
    Int32 Crc  'get ' : 
    Boolean LeaveOpen 'get set' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_TotalBytesSlurped(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Crc(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LeaveOpen(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LeaveOpen(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
Class MonoGame.Utilities.Iso88591Encoding: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Text.Encoding
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String WebName 'get ' : 
    System.Nullable`1[System.Char] FallbackCharacter 'get set' : 
    System.Nullable`1[System.Byte] FallbackByte 'get set' : 
    Int32 CharacterCount 'get ' : 
  Methods:
    get_WebName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FallbackCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_FallbackCharacter(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_FallbackByte(): PrivateScope, Public, HideBySig, SpecialName
    GetBytes(Char[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetChars(Byte[], Int32, Int32, Char[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetByteCount(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharCount(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxByteCount(Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxCharCount(Int32): PrivateScope, Public, Virtual, HideBySig
    get_CharacterCount(): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoGame.Utilities.Png.Palette: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.Color Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    AddColor(Color): PrivateScope, Assembly, HideBySig
    AddAlphaToColorAtIndex(Int32, Byte): PrivateScope, Assembly, HideBySig
    AddAlphaToColors(IList`1): PrivateScope, Assembly, HideBySig
Class MonoGame.Utilities.Png.PngChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Length 'get set' : 
    System.String Type 'get set' : 
    Byte[] Data 'get set' : 
    UInt32 Crc 'get set' : 
  Methods:
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Length(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Type(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Type(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Data(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Data(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName
    get_Crc(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Crc(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    Decode(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Encode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetChunkTypeString(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.HeaderChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoGame.Utilities.Png.PngChunk
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Width 'get set' : 
    UInt32 Height 'get set' : 
    Byte BitDepth 'get set' : 
    MonoGame.Utilities.Png.ColorType ColorType 'get set' : 
    Byte CompressionMethod 'get set' : 
    Byte FilterMethod 'get set' : 
    Byte InterlaceMethod 'get set' : 
    Byte[] PngSignature 'get ' : 
  Methods:
    get_Width(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Width(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Height(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Height(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_BitDepth(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BitDepth(Byte): PrivateScope, Assembly, HideBySig, SpecialName
    get_ColorType(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ColorType(ColorType): PrivateScope, Assembly, HideBySig, SpecialName
    get_CompressionMethod(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CompressionMethod(Byte): PrivateScope, Assembly, HideBySig, SpecialName
    get_FilterMethod(): PrivateScope, Assembly, HideBySig, SpecialName
    set_FilterMethod(Byte): PrivateScope, Assembly, HideBySig, SpecialName
    get_InterlaceMethod(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InterlaceMethod(Byte): PrivateScope, Assembly, HideBySig, SpecialName
    get_PngSignature(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Decode(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Encode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class MonoGame.Utilities.Png.PaletteChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoGame.Utilities.Png.PngChunk
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    MonoGame.Utilities.Png.Palette Palette 'get set' : 
  Methods:
    get_Palette(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Palette(Palette): PrivateScope, Assembly, HideBySig, SpecialName
    Decode(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class MonoGame.Utilities.Png.TransparencyChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoGame.Utilities.Png.PngChunk
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.Byte] PaletteTransparencies 'get set' : 
  Methods:
    get_PaletteTransparencies(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PaletteTransparencies(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    Decode(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Encode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class MonoGame.Utilities.Png.DataChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoGame.Utilities.Png.PngChunk
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class MonoGame.Utilities.Png.EndChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :MonoGame.Utilities.Png.PngChunk
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct MonoGame.Utilities.Png.ColorType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.Png.ColorType Grayscale = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.ColorType Rgb = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.ColorType Palette = 3 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.ColorType GrayscaleWithAlpha = 4 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.ColorType RgbWithAlpha = 6 : Public, Static, Literal, HasDefault
Struct MonoGame.Utilities.Png.FilterType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.Png.FilterType None = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.FilterType Sub = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.FilterType Up = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.FilterType Average = 3 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.Png.FilterType Paeth = 4 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.Png.NoneFilter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Decode(Byte[]): PrivateScope, Assembly, Static, HideBySig
    Encode(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.SubFilter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Decode(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    Encode(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.UpFilter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Decode(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    Encode(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.AverageFilter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Decode(Byte[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    Encode(Byte[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.PaethFilter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Decode(Byte[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    Encode(Byte[], Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.PngCrc: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Methods:
    Calculate(Byte[]): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.Extensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToUInt(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ToByteArray(UInt32): PrivateScope, Assembly, Static, HideBySig
Class MonoGame.Utilities.Png.PngReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Stream, GraphicsDevice): PrivateScope, Public, HideBySig
    IsPngImage(Stream): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.Png.PngWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(Texture2D, Stream): PrivateScope, Public, HideBySig
Class MonoGame.Utilities.ByteBufferPool: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FreeAmount 'get ' : 
  Methods:
    get_FreeAmount(): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig
    Return(Byte[]): PrivateScope, Public, HideBySig
Class MonoGame.Utilities.Imaging: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String LastError : Public, Static
    System.String stbi__g_failure_reason : Public, Static
    Int32 stbi__vertically_flip_on_load : Public, Static
    Single stbi__h2l_gamma_i : Public, Static
    Single stbi__h2l_scale_i : Public, Static
    UInt32[] stbi__bmask : Public, Static
    Int32[] stbi__jbias : Public, Static
    Byte[] stbi__jpeg_dezigzag : Public, Static
    Int32[] stbi__zlength_base : Public, Static
    Int32[] stbi__zlength_extra : Public, Static
    Int32[] stbi__zdist_base : Public, Static
    Int32[] stbi__zdist_extra : Public, Static
    Byte[] length_dezigzag : Public, Static
    Byte[] stbi__zdefault_length : Public, Static
    Byte[] stbi__zdefault_distance : Public, Static
    Byte[] png_sig : Public, Static
    Byte[] first_row_filter : Public, Static
    Byte[] stbi__depth_scale_table : Public, Static
    Int32 stbi__unpremultiply_on_load : Public, Static
    Int32 stbi__de_iphone_flag : Public, Static
    Int32 stbi_write_tga_with_rle : Public, Static
    UInt16[] lengthc : Public, Static
    Byte[] lengtheb : Public, Static
    UInt16[] distc : Public, Static
    Byte[] disteb : Public, Static
    UInt32[] crc_table : Public, Static
    Byte[] stbiw__jpg_ZigZag : Public, Static
    Byte[] std_dc_luminance_nrcodes : Public, Static
    Byte[] std_dc_luminance_values : Public, Static
    Byte[] std_ac_luminance_nrcodes : Public, Static
    Byte[] std_ac_luminance_values : Public, Static
    Byte[] std_dc_chrominance_nrcodes : Public, Static
    Byte[] std_dc_chrominance_values : Public, Static
    Byte[] std_ac_chrominance_nrcodes : Public, Static
    Byte[] std_ac_chrominance_values : Public, Static
    UInt16[,] YDC_HT : Public, Static
    UInt16[,] UVDC_HT : Public, Static
    UInt16[,] YAC_HT : Public, Static
    UInt16[,] UVAC_HT : Public, Static
    Int32[] YQT : Public, Static
    Int32[] UVQT : Public, Static
    Single[] aasf : Public, Static
    Byte[] head0 : Public, Static
    Byte[] head2 : Public, Static
    Int32 STBI__ZFAST_BITS = 9 : Public, Static, Literal, HasDefault
    Int64 DBL_EXP_MASK = 9218868437227405312 : Public, Static, Literal, HasDefault
    Int32 DBL_MANT_BITS = 52 : Public, Static, Literal, HasDefault
    Int64 DBL_SGN_MASK = -9223372036854775808 : Public, Static, Literal, HasDefault
    Int64 DBL_MANT_MASK = 4503599627370495 : Public, Static, Literal, HasDefault
    Int64 DBL_EXP_CLR_MASK = -9218868437227405313 : Public, Static, Literal, HasDefault
    Int32 STBI_default = 0 : Public, Static, Literal, HasDefault
    Int32 STBI_grey = 1 : Public, Static, Literal, HasDefault
    Int32 STBI_grey_alpha = 2 : Public, Static, Literal, HasDefault
    Int32 STBI_rgb = 3 : Public, Static, Literal, HasDefault
    Int32 STBI_rgb_alpha = 4 : Public, Static, Literal, HasDefault
    Int32 STBI_ORDER_RGB = 0 : Public, Static, Literal, HasDefault
    Int32 STBI_ORDER_BGR = 1 : Public, Static, Literal, HasDefault
    Int32 STBI__SCAN_load = 0 : Public, Static, Literal, HasDefault
    Int32 STBI__SCAN_type = 1 : Public, Static, Literal, HasDefault
    Int32 STBI__SCAN_header = 2 : Public, Static, Literal, HasDefault
    Int32 STBI__F_none = 0 : Public, Static, Literal, HasDefault
    Int32 STBI__F_sub = 1 : Public, Static, Literal, HasDefault
    Int32 STBI__F_up = 2 : Public, Static, Literal, HasDefault
    Int32 STBI__F_avg = 3 : Public, Static, Literal, HasDefault
    Int32 STBI__F_paeth = 4 : Public, Static, Literal, HasDefault
    Int32 STBI__F_avg_first = 5 : Public, Static, Literal, HasDefault
    Int32 STBI__F_paeth_first = 6 : Public, Static, Literal, HasDefault
  Methods:
    stbi_write_tga_core(stbi__write_context, Int32, Int32, Int32, Void*): PrivateScope, Public, Static, HideBySig
    stbiw__linear_to_rgbe(Byte*, Single*): PrivateScope, Public, Static, HideBySig
    stbiw__write_run_data(stbi__write_context, Int32, Byte): PrivateScope, Public, Static, HideBySig
    stbiw__write_dump_data(stbi__write_context, Int32, Byte*): PrivateScope, Public, Static, HideBySig
    stbiw__sbgrowf(Void**, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__zlib_flushf(Byte*, UInt32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbiw__zlib_bitrev(Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__zlib_countm(Byte*, Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__zhash(Byte*): PrivateScope, Public, Static, HideBySig
    stbi_zlib_compress(Byte*, Int32, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__crc32(Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__wpcrc(Byte**, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__paeth(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi_write_png_to_mem(Byte*, Int32, Int32, Int32, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    stbiw__jpg_writeBits(stbi__write_context, Int32*, Int32*, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    stbiw__jpg_DCT(Single*, Single*, Single*, Single*, Single*, Single*, Single*, Single*): PrivateScope, Public, Static, HideBySig
    stbiw__jpg_calcBits(Int32, UInt16*): PrivateScope, Public, Static, HideBySig
    stbiw__jpg_processDU(stbi__write_context, Int32*, Int32*, Single*, Single*, Int32, UInt16[,], UInt16[,]): PrivateScope, Public, Static, HideBySig
    stbi_write_jpg_core(stbi__write_context, Int32, Int32, Int32, Void*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__setup_jpeg(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__cleanup_jpeg(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__blinn_8x8(Byte, Byte): PrivateScope, Public, Static, HideBySig
    load_jpeg_image(stbi__jpeg, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_load(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_test(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_info_raw(stbi__jpeg, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_info(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__bitreverse16(Int32): PrivateScope, Public, Static, HideBySig
    stbi__bit_reverse(Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__zbuild_huffman(stbi__zhuffman*, Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__zget8(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__fill_bits(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__zreceive(stbi__zbuf*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__zhuffman_decode_slowpath(stbi__zbuf*, stbi__zhuffman*): PrivateScope, Public, Static, HideBySig
    stbi__zhuffman_decode(stbi__zbuf*, stbi__zhuffman*): PrivateScope, Public, Static, HideBySig
    stbi__zexpand(stbi__zbuf*, SByte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__parse_huffman_block(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__compute_huffman_codes(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__parse_uncompressed_block(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__parse_zlib_header(stbi__zbuf*): PrivateScope, Public, Static, HideBySig
    stbi__parse_zlib(stbi__zbuf*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__do_zlib(stbi__zbuf*, SByte*, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_malloc_guesssize(SByte*, Int32, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_malloc(SByte*, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_malloc_guesssize_headerflag(SByte*, Int32, Int32, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_buffer(SByte*, Int32, SByte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_noheader_malloc(SByte*, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    stbi_zlib_decode_noheader_buffer(SByte*, Int32, SByte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__get_chunk_header(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__check_png_header(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__paeth(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__create_png_image_raw(stbi__png, Byte*, UInt32, Int32, UInt32, UInt32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__create_png_image(stbi__png, Byte*, UInt32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__compute_transparency(stbi__png, Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__compute_transparency16(stbi__png, UInt16*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__expand_png_palette(stbi__png, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi_set_unpremultiply_on_load(Int32): PrivateScope, Public, Static, HideBySig
    stbi_convert_iphone_png_to_rgb(Int32): PrivateScope, Public, Static, HideBySig
    stbi__de_iphone(stbi__png): PrivateScope, Public, Static, HideBySig
    stbi__parse_png_file(stbi__png, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__do_png(stbi__png, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__png_load(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__png_test(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__png_info_raw(stbi__png, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__png_info(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__bmp_test_raw(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__bmp_test(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__high_bit(UInt32): PrivateScope, Public, Static, HideBySig
    stbi__bitcount(UInt32): PrivateScope, Public, Static, HideBySig
    stbi__shiftsigned(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__bmp_parse_header(stbi__context, stbi__bmp_data*): PrivateScope, Public, Static, HideBySig
    stbi__bmp_load(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__tga_get_comp(Int32, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__tga_info(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__tga_test(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__tga_read_rgb16(stbi__context, Byte*): PrivateScope, Public, Static, HideBySig
    stbi__tga_load(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__gif_test_raw(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__gif_test(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__gif_header(stbi__context, stbi__gif, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__gif_info_raw(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__out_gif_code(stbi__gif, UInt16): PrivateScope, Public, Static, HideBySig
    stbi__process_gif_raster(stbi__context, stbi__gif): PrivateScope, Public, Static, HideBySig
    stbi__fill_gif_background(stbi__gif, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__gif_load_next(stbi__context, stbi__gif, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__gif_load(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*): PrivateScope, Public, Static, HideBySig
    stbi__gif_info(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__bmp_info(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__info_main(stbi__context, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi_info_from_memory(Byte*, Int32, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi_info_from_callbacks(stbi_io_callbacks, Void*, Int32*, Int32*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__start_write_callbacks(stbi__write_context, WriteCallback, Void*): PrivateScope, Public, Static, HideBySig
    stbiw__writefv(stbi__write_context, String, Object[]): PrivateScope, Public, Static, HideBySig
    stbiw__writef(stbi__write_context, String, Object[]): PrivateScope, Public, Static, HideBySig
    stbiw__outfile(stbi__write_context, Int32, Int32, Int32, Int32, Int32, Int32, Void*, Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    stbi_write_bmp_to_func(WriteCallback, Void*, Int32, Int32, Int32, Void*): PrivateScope, Public, Static, HideBySig
    stbi_write_tga_to_func(WriteCallback, Void*, Int32, Int32, Int32, Void*): PrivateScope, Public, Static, HideBySig
    stbi_write_png_to_func(WriteCallback, Void*, Int32, Int32, Int32, Void*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_write_jpg_to_func(WriteCallback, Void*, Int32, Int32, Int32, Void*, Int32): PrivateScope, Public, Static, HideBySig
    stbiw__putc(stbi__write_context, Byte): PrivateScope, Public, Static, HideBySig
    stbiw__write3(stbi__write_context, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    stbiw__write_pixel(stbi__write_context, Int32, Int32, Int32, Int32, Byte*): PrivateScope, Public, Static, HideBySig
    stbiw__write_pixels(stbi__write_context, Int32, Int32, Int32, Int32, Int32, Void*, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi_write_bmp_core(stbi__write_context, Int32, Int32, Int32, Void*): PrivateScope, Public, Static, HideBySig
    stbi__gif_parse_colortable(stbi__context, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__start_mem(stbi__context, Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__start_callbacks(stbi__context, stbi_io_callbacks, Void*): PrivateScope, Public, Static, HideBySig
    stbi__rewind(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__addsizes_valid(Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__mul2sizes_valid(Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__mad2sizes_valid(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__mad3sizes_valid(Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__mad4sizes_valid(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__malloc_mad2(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__malloc_mad3(Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__malloc_mad4(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi_set_flip_vertically_on_load(Int32): PrivateScope, Public, Static, HideBySig
    stbi__load_main(stbi__context, Int32*, Int32*, Int32*, Int32, stbi__result_info*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__convert_16_to_8(UInt16*, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__convert_8_to_16(Byte*, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__vertical_flip(Void*, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__load_and_postprocess_8bit(stbi__context, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__load_and_postprocess_16bit(stbi__context, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_load_16_from_memory(Byte*, Int32, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_load_16_from_callbacks(stbi_io_callbacks, Void*, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_load_from_memory(Byte*, Int32, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_load_from_callbacks(stbi_io_callbacks, Void*, Int32*, Int32*, Int32*, Int32): PrivateScope, Public, Static, HideBySig
    stbi_hdr_to_ldr_gamma(Single): PrivateScope, Public, Static, HideBySig
    stbi_hdr_to_ldr_scale(Single): PrivateScope, Public, Static, HideBySig
    stbi__refill_buffer(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__get8(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__at_eof(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__skip(stbi__context, Int32): PrivateScope, Public, Static, HideBySig
    stbi__getn(stbi__context, Byte*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__get16be(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__get32be(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__get16le(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__get32le(stbi__context): PrivateScope, Public, Static, HideBySig
    stbi__compute_y(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__convert_format(Byte*, Int32, Int32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    stbi__compute_y_16(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__convert_format16(UInt16*, Int32, Int32, UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    stbi__build_huffman(stbi__huffman*, Int32*): PrivateScope, Public, Static, HideBySig
    stbi__build_fast_ac(Int16*, stbi__huffman*): PrivateScope, Public, Static, HideBySig
    stbi__grow_buffer_unsafe(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_huff_decode(stbi__jpeg, stbi__huffman*): PrivateScope, Public, Static, HideBySig
    stbi__extend_receive(stbi__jpeg, Int32): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_get_bits(stbi__jpeg, Int32): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_get_bit(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_decode_block(stbi__jpeg, Int16*, stbi__huffman*, stbi__huffman*, Int16*, Int32, UInt16*): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_decode_block_prog_dc(stbi__jpeg, Int16*, stbi__huffman*, Int32): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_decode_block_prog_ac(stbi__jpeg, Int16*, stbi__huffman*, Int16*): PrivateScope, Public, Static, HideBySig
    stbi__clamp(Int32): PrivateScope, Public, Static, HideBySig
    stbi__idct_block(Byte*, Int32, Int16*): PrivateScope, Public, Static, HideBySig
    stbi__get_marker(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_reset(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__parse_entropy_coded_data(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_dequantize(Int16*, UInt16*): PrivateScope, Public, Static, HideBySig
    stbi__jpeg_finish(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__process_marker(stbi__jpeg, Int32): PrivateScope, Public, Static, HideBySig
    stbi__process_scan_header(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    stbi__free_jpeg_components(stbi__jpeg, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__process_frame_header(stbi__jpeg, Int32): PrivateScope, Public, Static, HideBySig
    stbi__decode_jpeg_header(stbi__jpeg, Int32): PrivateScope, Public, Static, HideBySig
    stbi__decode_jpeg_image(stbi__jpeg): PrivateScope, Public, Static, HideBySig
    resample_row_1(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__resample_row_v_2(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__resample_row_h_2(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__resample_row_hv_2(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__resample_row_generic(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
    stbi__YCbCr_to_RGB_row(Byte*, Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.Imaging+ReadCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Void*, SByte*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Void*, SByte*, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+SkipCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Void*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Void*, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+EofCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Void*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Void*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+idct_block_kernel: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte*, Int32, Int16*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte*, Int32, Int16*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+YCbCr_to_RGB_kernel: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte*, Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte*, Byte*, Byte*, Byte*, Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+Resampler: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte*, Byte*, Byte*, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte*, Byte*, Byte*, Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+stbi_io_callbacks: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ReadCallback read : Public
    SkipCallback skip : Public
    EofCallback eof : Public
Struct MonoGame.Utilities.Imaging+img_comp: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 id : Public
    Int32 h : Public
    Int32 v : Public
    Int32 tq : Public
    Int32 hd : Public
    Int32 ha : Public
    Int32 dc_pred : Public
    Int32 x : Public
    Int32 y : Public
    Int32 w2 : Public
    Int32 h2 : Public
    Byte* data : Public
    Void* raw_data : Public
    Void* raw_coeff : Public
    Byte* linebuf : Public
    Int16* coeff : Public
    Int32 coeff_w : Public
    Int32 coeff_h : Public
Class MonoGame.Utilities.Imaging+stbi__jpeg: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    stbi__context s : Public
    MonoGame.Utilities.PinnedArray`1[MonoGame.Utilities.Imaging+stbi__huffman] huff_dc : Public, InitOnly
    MonoGame.Utilities.PinnedArray`1[MonoGame.Utilities.Imaging+stbi__huffman] huff_ac : Public, InitOnly
    MonoGame.Utilities.PinnedArray`1[System.UInt16][] dequant : Public, InitOnly
    MonoGame.Utilities.PinnedArray`1[System.Int16][] fast_ac : Public, InitOnly
    Int32 img_h_max : Public
    Int32 img_v_max : Public
    Int32 img_mcu_x : Public
    Int32 img_mcu_y : Public
    Int32 img_mcu_w : Public
    Int32 img_mcu_h : Public
    img_comp[] img_comp : Public
    UInt32 code_buffer : Public
    Int32 code_bits : Public
    Byte marker : Public
    Int32 nomore : Public
    Int32 progressive : Public
    Int32 spec_start : Public
    Int32 spec_end : Public
    Int32 succ_high : Public
    Int32 succ_low : Public
    Int32 eob_run : Public
    Int32 jfif : Public
    Int32 app14_color_transform : Public
    Int32 rgb : Public
    Int32 scan_n : Public
    MonoGame.Utilities.PinnedArray`1[System.Int32] order : Public
    Int32 restart_interval : Public
    Int32 todo : Public
    idct_block_kernel idct_block_kernel : Public
    YCbCr_to_RGB_kernel YCbCr_to_RGB_kernel : Public
    Resampler resample_row_hv_2_kernel : Public
Class MonoGame.Utilities.Imaging+stbi__resample: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Resampler resample : Public
    Byte* line0 : Public
    Byte* line1 : Public
    Int32 hs : Public
    Int32 vs : Public
    Int32 w_lores : Public
    Int32 ystep : Public
    Int32 ypos : Public
Struct MonoGame.Utilities.Imaging+stbi__gif_lzw: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 prefix : Public
    Byte first : Public
    Byte suffix : Public
Class MonoGame.Utilities.Imaging+stbi__gif: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 w : Public
    Int32 h : Public
    Byte* _out_ : Public
    Byte* old_out : Public
    Int32 flags : Public
    Int32 bgindex : Public
    Int32 ratio : Public
    Int32 transparent : Public
    Int32 eflags : Public
    Int32 delay : Public
    MonoGame.Utilities.PinnedArray`1[System.Byte] pal : Public
    MonoGame.Utilities.PinnedArray`1[System.Byte] lpal : Public
    MonoGame.Utilities.PinnedArray`1[MonoGame.Utilities.Imaging+stbi__gif_lzw] codes : Public
    Byte* color_table : Public
    Int32 parse : Public
    Int32 step : Public
    Int32 lflags : Public
    Int32 start_x : Public
    Int32 start_y : Public
    Int32 max_x : Public
    Int32 max_y : Public
    Int32 cur_x : Public
    Int32 cur_y : Public
    Int32 line_size : Public
Class MonoGame.Utilities.Imaging+stbi__context: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 img_x : Public
    UInt32 img_y : Public
    Int32 img_n : Public
    Int32 img_out_n : Public
    stbi_io_callbacks io : Public
    Void* io_user_data : Public
    Int32 read_from_callbacks : Public
    Int32 buflen : Public
    MonoGame.Utilities.PinnedArray`1[System.Byte] buffer_start : Public
    Byte* img_buffer : Public
    Byte* img_buffer_end : Public
    Byte* img_buffer_original : Public
    Byte* img_buffer_original_end : Public
Struct MonoGame.Utilities.Imaging+stbi__result_info: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 bits_per_channel : Public
    Int32 num_channels : Public
    Int32 channel_order : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    <fast>e__FixedBuffer0 fast : Public
    <code>e__FixedBuffer1 code : Public
    <values>e__FixedBuffer2 values : Public
    <size>e__FixedBuffer3 size : Public
    <maxcode>e__FixedBuffer4 maxcode : Public
    <delta>e__FixedBuffer5 delta : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<fast>e__FixedBuffer0: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<code>e__FixedBuffer1: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<values>e__FixedBuffer2: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<size>e__FixedBuffer3: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<maxcode>e__FixedBuffer4: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__huffman+<delta>e__FixedBuffer5: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    <fast>e__FixedBuffer6 fast : Public
    <firstcode>e__FixedBuffer7 firstcode : Public
    <maxcode>e__FixedBuffer8 maxcode : Public
    <firstsymbol>e__FixedBuffer9 firstsymbol : Public
    <size>e__FixedBuffera size : Public
    <value>e__FixedBufferb value : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<fast>e__FixedBuffer6: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<firstcode>e__FixedBuffer7: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<maxcode>e__FixedBuffer8: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<firstsymbol>e__FixedBuffer9: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<size>e__FixedBuffera: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zhuffman+<value>e__FixedBufferb: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 FixedElementField : Public
Struct MonoGame.Utilities.Imaging+stbi__zbuf: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte* zbuffer : Public
    Byte* zbuffer_end : Public
    Int32 num_bits : Public
    UInt32 code_buffer : Public
    SByte* zout : Public
    SByte* zout_start : Public
    SByte* zout_end : Public
    Int32 z_expandable : Public
    stbi__zhuffman z_length : Public
    stbi__zhuffman z_distance : Public
Struct MonoGame.Utilities.Imaging+stbi__pngchunk: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 length : Public
    UInt32 type : Public
Class MonoGame.Utilities.Imaging+stbi__png: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    stbi__context s : Public
    Byte* idata : Public
    Byte* expanded : Public
    Byte* _out_ : Public
    Int32 depth : Public
Struct MonoGame.Utilities.Imaging+stbi__bmp_data: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 bpp : Public
    Int32 offset : Public
    Int32 hsz : Public
    UInt32 mr : Public
    UInt32 mg : Public
    UInt32 mb : Public
    UInt32 ma : Public
    UInt32 all_a : Public
Class MonoGame.Utilities.Imaging+WriteCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Void*, Void*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Void*, Void*, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MonoGame.Utilities.Imaging+stbi__write_context: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    WriteCallback func : Public
    Void* context : Public
Class MonoGame.Utilities.ImageReader: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Read(Stream, Int32&(Out), Int32&(Out), Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig
Struct MonoGame.Utilities.ImageWriterFormat: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MonoGame.Utilities.ImageWriterFormat Bmp = 0 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.ImageWriterFormat Tga = 1 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.ImageWriterFormat Png = 2 : Public, Static, Literal, HasDefault
    MonoGame.Utilities.ImageWriterFormat Jpg = 3 : Public, Static, Literal, HasDefault
Class MonoGame.Utilities.ImageWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(Byte[], Int32, Int32, Int32, ImageWriterFormat, Stream): PrivateScope, Public, HideBySig
Class MonoGame.Utilities.Operations: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Concurrent.ConcurrentDictionary`2[System.Int64,MonoGame.Utilities.Pointer] _pointers : Assembly, Static
  Properties:
    Int64 AllocatedTotal 'get ' : 
  Methods:
    get_AllocatedTotal(): PrivateScope, Public, Static, HideBySig, SpecialName
    Malloc(Int64): PrivateScope, Public, Static, HideBySig
    Memcpy(Void*, Void*, Int64): PrivateScope, Public, Static, HideBySig
    MemMove(Void*, Void*, Int64): PrivateScope, Public, Static, HideBySig
    Free(Void*): PrivateScope, Public, Static, HideBySig
    Realloc(Void*, Int64): PrivateScope, Public, Static, HideBySig
    Memcmp(Void*, Void*, Int64): PrivateScope, Public, Static, HideBySig
Class MonoGame.Utilities.Pointer: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int64 Size 'get ' : 
    Void* Ptr  'get ' : 
    Int64 AllocatedTotal 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Ptr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AllocatedTotal(): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    op_Implicit(Pointer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Pointer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Pointer): PrivateScope, Public, Static, HideBySig, SpecialName
Class MonoGame.Utilities.PinnedArray`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :MonoGame.Utilities.Pointer
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Runtime.InteropServices.GCHandle Handle 'get ' : 
    Void* Ptr  'get ' : 
    T[] Data   'get set' : 
    T Item [Int64] 'get set' : 
    Int64 Count 'get set' : 
    Int64 Size 'get ' : 
    Int64 ElementSize 'get set' : 
  Methods:
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_Ptr(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int64): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int64, T): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.SharpDXHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToSwapEffect(PresentInterval): PrivateScope, Public, Static, HideBySig
    ToFormat(DepthFormat): PrivateScope, Public, Static, HideBySig
    ToFormat(SurfaceFormat): PrivateScope, Public, Static, HideBySig
    ToVector2(Vector2): PrivateScope, Public, Static, HideBySig
    ToVector3(Vector3): PrivateScope, Public, Static, HideBySig
    ToVector4(Vector4): PrivateScope, Public, Static, HideBySig
    ToColor4(Color): PrivateScope, Public, Static, HideBySig
    ToComparison(CompareFunction): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Windows.HorizontalMouseWheelEventArgs: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Delta 'get set' : 
  Methods:
    get_Delta(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Xna.Framework.Windows.MessageExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetPointerId(Message): PrivateScope, Public, Static, HideBySig
    GetPointerLocation(Message): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Windows.WinFormsGameForm: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(MonoGame.Framework.WinFormsGameWindow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean AllowAltF4 : Public
    Int32 WM_MOUSEHWHEEL = 526 : Public, Static, Literal, HasDefault
    Int32 WM_POINTERUP = 583 : Public, Static, Literal, HasDefault
    Int32 WM_POINTERDOWN = 582 : Public, Static, Literal, HasDefault
    Int32 WM_POINTERUPDATE = 581 : Public, Static, Literal, HasDefault
    Int32 WM_KEYDOWN = 256 : Public, Static, Literal, HasDefault
    Int32 WM_TABLET_QUERYSYSTEMGESTURESTA = 716 : Public, Static, Literal, HasDefault
    Int32 WM_ENTERSIZEMOVE = 561 : Public, Static, Literal, HasDefault
    Int32 WM_EXITSIZEMOVE = 562 : Public, Static, Literal, HasDefault
    Int32 WM_SYSCOMMAND = 274 : Public, Static, Literal, HasDefault
  Properties:
    Boolean IsResizing 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Xna.Framework.Windows.HorizontalMouseWheelEventArgs] MouseHorizontalWheel: 
  Methods:
    get_IsResizing(): PrivateScope, Assembly, HideBySig, SpecialName
    set_IsResizing(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    add_MouseHorizontalWheel(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseHorizontalWheel(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    CenterOnPrimaryMonitor(): PrivateScope, Public, HideBySig
Class MonoGame.Framework.WinFormsGamePlatform: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.GamePlatform
    Void .ctor(Microsoft.Xna.Framework.Game): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Xna.Framework.GameRunBehavior DefaultRunBehavior 'get ' : 
  Methods:
    get_DefaultRunBehavior(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    BeforeRun(): PrivateScope, Public, Virtual, HideBySig
    BeforeInitialize(): PrivateScope, Public, Virtual, HideBySig
    RunLoop(): PrivateScope, Public, Virtual, HideBySig
    StartRunLoop(): PrivateScope, Public, Virtual, HideBySig
    Exit(): PrivateScope, Public, Virtual, HideBySig
    BeforeUpdate(GameTime): PrivateScope, Public, Virtual, HideBySig
    BeforeDraw(GameTime): PrivateScope, Public, Virtual, HideBySig
    EnterFullScreen(): PrivateScope, Public, Virtual, HideBySig
    ExitFullScreen(): PrivateScope, Public, Virtual, HideBySig
    OnPresentationChanged(PresentationParameters): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    EndScreenDeviceChange(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginScreenDeviceChange(Boolean): PrivateScope, Public, Virtual, HideBySig
    Log(String): PrivateScope, Public, Virtual, HideBySig
    Present(): PrivateScope, Public, Virtual, HideBySig
Class MonoGame.Framework.WinFormsGameWindow: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Xna.Framework.GameWindow
    Void .ctor(MonoGame.Framework.WinFormsGamePlatform): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Microsoft.Xna.Framework.Windows.WinFormsGameForm Form : Assembly
  Properties:
    Microsoft.Xna.Framework.Game Game 'get set' : 
    IntPtr Handle 'get ' : 
    System.String ScreenDeviceName 'get ' : 
    Microsoft.Xna.Framework.Rectangle ClientBounds 'get ' : 
    Boolean AllowUserResizing 'get set' : 
    Boolean AllowAltF4 'get set' : 
    Microsoft.Xna.Framework.DisplayOrientation CurrentOrientation 'get ' : 
    Microsoft.Xna.Framework.Point Position 'get set' : 
    Boolean IsBorderless 'get set' : 
    Boolean IsFullScreen 'get set' : 
    Boolean HardwareModeSwitch 'get set' : 
  Methods:
    get_Game(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ScreenDeviceName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ClientBounds(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllowUserResizing(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_AllowUserResizing(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AllowAltF4(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_AllowAltF4(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CurrentOrientation(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsBorderless(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsBorderless(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsFullScreen(): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareModeSwitch(): PrivateScope, Public, HideBySig, SpecialName
    GetCursorPos(POINTSTRUCT&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MapWindowPoints(HandleRef, HandleRef, POINTSTRUCT&(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    Initialize(Int32, Int32): PrivateScope, Assembly, HideBySig
    Initialize(PresentationParameters): PrivateScope, Assembly, HideBySig
    RunLoop(): PrivateScope, Assembly, HideBySig
    UpdateWindows(): PrivateScope, Assembly, HideBySig
    ChangeClientSize(Size): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginScreenDeviceChange(Boolean): PrivateScope, Public, Virtual, HideBySig
    EndScreenDeviceChange(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    MouseVisibleToggled(): PrivateScope, Public, HideBySig
    OnPresentationChanged(PresentationParameters): PrivateScope, Assembly, HideBySig
Struct MonoGame.Framework.WinFormsGameWindow+POINTSTRUCT: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 X : Public
    Int32 Y : Public
Struct MonoGame.Framework.WinFormsGameWindow+NativeMessage: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr handle : Public
    UInt32 msg : Public
    IntPtr wParam : Public
    IntPtr lParam : Public
    UInt32 time : Public
    System.Drawing.Point p : Public
Class Microsoft.Xna.Framework.Media.VideoSampleGrabber: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :SharpDX.CallbackBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    SharpDX.MediaFoundation.SampleGrabberSinkCallback
    SharpDX.MediaFoundation.ClockStateSink
  Properties:
    Byte[] TextureData 'get set' : 
  Methods:
    get_TextureData(): PrivateScope, Assembly, HideBySig, SpecialName
    OnProcessSample(Guid, Int32, Int64, Int64, IntPtr, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnSetPresentationClock(PresentationClock): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnShutdown(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnClockPause(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnClockRestart(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnClockSetRate(Int64, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnClockStart(Int64, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnClockStop(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Xna.Framework.Design.VectorConversion: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Static, HideBySig
    ConvertToFromVector4(ITypeDescriptorContext, CultureInfo, Vector4, Type): PrivateScope, Public, Static, HideBySig
Class Microsoft.Xna.Framework.Design.Vector2TypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Design.Vector3TypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Xna.Framework.Design.Vector4TypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
